// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2.2 (64-bit)
// Version: 2020.2.2
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module colorthresholding_accel_colorthresholding_9_0_3_1080_1920_1_s (
        img_in_418_dout,
        img_in_418_empty_n,
        img_in_418_read,
        img_out_419_din,
        img_out_419_full_n,
        img_out_419_write,
        lower_threshold_address0,
        lower_threshold_ce0,
        lower_threshold_d0,
        lower_threshold_q0,
        lower_threshold_we0,
        upper_threshold_address0,
        upper_threshold_ce0,
        upper_threshold_d0,
        upper_threshold_q0,
        upper_threshold_we0,
        p_src_mat_rows_dout,
        p_src_mat_rows_empty_n,
        p_src_mat_rows_read,
        p_src_mat_cols_dout,
        p_src_mat_cols_empty_n,
        p_src_mat_cols_read,
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_ready,
        ap_idle,
        ap_continue
);


input  [23:0] img_in_418_dout;
input   img_in_418_empty_n;
output   img_in_418_read;
output  [7:0] img_out_419_din;
input   img_out_419_full_n;
output   img_out_419_write;
output  [3:0] lower_threshold_address0;
output   lower_threshold_ce0;
output  [7:0] lower_threshold_d0;
input  [7:0] lower_threshold_q0;
output   lower_threshold_we0;
output  [3:0] upper_threshold_address0;
output   upper_threshold_ce0;
output  [7:0] upper_threshold_d0;
input  [7:0] upper_threshold_q0;
output   upper_threshold_we0;
input  [31:0] p_src_mat_rows_dout;
input   p_src_mat_rows_empty_n;
output   p_src_mat_rows_read;
input  [31:0] p_src_mat_cols_dout;
input   p_src_mat_cols_empty_n;
output   p_src_mat_cols_read;
input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_ready;
output   ap_idle;
input   ap_continue;

wire    colorthresholding_9_0_3_1080_1920_1_entry12_U0_ap_start;
wire    colorthresholding_9_0_3_1080_1920_1_entry12_U0_ap_done;
wire    colorthresholding_9_0_3_1080_1920_1_entry12_U0_ap_continue;
wire    colorthresholding_9_0_3_1080_1920_1_entry12_U0_ap_idle;
wire    colorthresholding_9_0_3_1080_1920_1_entry12_U0_ap_ready;
wire    colorthresholding_9_0_3_1080_1920_1_entry12_U0_start_out;
wire    colorthresholding_9_0_3_1080_1920_1_entry12_U0_start_write;
wire    colorthresholding_9_0_3_1080_1920_1_entry12_U0_p_src_mat_rows_read;
wire    colorthresholding_9_0_3_1080_1920_1_entry12_U0_p_src_mat_cols_read;
wire   [15:0] colorthresholding_9_0_3_1080_1920_1_entry12_U0_p_src_mat_rows_out_din;
wire    colorthresholding_9_0_3_1080_1920_1_entry12_U0_p_src_mat_rows_out_write;
wire   [15:0] colorthresholding_9_0_3_1080_1920_1_entry12_U0_p_src_mat_cols_out_din;
wire    colorthresholding_9_0_3_1080_1920_1_entry12_U0_p_src_mat_cols_out_write;
wire    colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_start;
wire    colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_done;
wire    colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_continue;
wire    colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_idle;
wire    colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_ready;
wire   [3:0] colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_lower_threshold_address0;
wire    colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_lower_threshold_ce0;
wire   [3:0] colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_upper_threshold_address0;
wire    colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_upper_threshold_ce0;
wire   [7:0] colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_return_0;
wire   [7:0] colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_return_1;
wire   [7:0] colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_return_2;
wire   [7:0] colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_return_3;
wire   [7:0] colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_return_4;
wire   [7:0] colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_return_5;
wire   [7:0] colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_return_6;
wire   [7:0] colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_return_7;
wire   [7:0] colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_return_8;
wire   [7:0] colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_return_9;
wire   [7:0] colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_return_10;
wire   [7:0] colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_return_11;
wire   [7:0] colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_return_12;
wire   [7:0] colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_return_13;
wire   [7:0] colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_return_14;
wire   [7:0] colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_return_15;
wire   [7:0] colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_return_16;
wire   [7:0] colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_return_17;
wire    ap_channel_done_high_th_2_2;
wire    high_th_2_2_full_n;
reg    ap_sync_reg_channel_write_high_th_2_2;
wire    ap_sync_channel_write_high_th_2_2;
wire    ap_channel_done_high_th_2_1;
wire    high_th_2_1_full_n;
reg    ap_sync_reg_channel_write_high_th_2_1;
wire    ap_sync_channel_write_high_th_2_1;
wire    ap_channel_done_high_th_2_0;
wire    high_th_2_0_full_n;
reg    ap_sync_reg_channel_write_high_th_2_0;
wire    ap_sync_channel_write_high_th_2_0;
wire    ap_channel_done_low_th_2_2;
wire    low_th_2_2_full_n;
reg    ap_sync_reg_channel_write_low_th_2_2;
wire    ap_sync_channel_write_low_th_2_2;
wire    ap_channel_done_low_th_2_1;
wire    low_th_2_1_full_n;
reg    ap_sync_reg_channel_write_low_th_2_1;
wire    ap_sync_channel_write_low_th_2_1;
wire    ap_channel_done_low_th_2_0;
wire    low_th_2_0_full_n;
reg    ap_sync_reg_channel_write_low_th_2_0;
wire    ap_sync_channel_write_low_th_2_0;
wire    ap_channel_done_high_th_1_2;
wire    high_th_1_2_full_n;
reg    ap_sync_reg_channel_write_high_th_1_2;
wire    ap_sync_channel_write_high_th_1_2;
wire    ap_channel_done_high_th_1_1;
wire    high_th_1_1_full_n;
reg    ap_sync_reg_channel_write_high_th_1_1;
wire    ap_sync_channel_write_high_th_1_1;
wire    ap_channel_done_high_th_1_0;
wire    high_th_1_0_full_n;
reg    ap_sync_reg_channel_write_high_th_1_0;
wire    ap_sync_channel_write_high_th_1_0;
wire    ap_channel_done_low_th_1_2;
wire    low_th_1_2_full_n;
reg    ap_sync_reg_channel_write_low_th_1_2;
wire    ap_sync_channel_write_low_th_1_2;
wire    ap_channel_done_low_th_1_1;
wire    low_th_1_1_full_n;
reg    ap_sync_reg_channel_write_low_th_1_1;
wire    ap_sync_channel_write_low_th_1_1;
wire    ap_channel_done_low_th_1_0;
wire    low_th_1_0_full_n;
reg    ap_sync_reg_channel_write_low_th_1_0;
wire    ap_sync_channel_write_low_th_1_0;
wire    ap_channel_done_high_th_0_2;
wire    high_th_0_2_full_n;
reg    ap_sync_reg_channel_write_high_th_0_2;
wire    ap_sync_channel_write_high_th_0_2;
wire    ap_channel_done_high_th_0_1;
wire    high_th_0_1_full_n;
reg    ap_sync_reg_channel_write_high_th_0_1;
wire    ap_sync_channel_write_high_th_0_1;
wire    ap_channel_done_high_th_0_0;
wire    high_th_0_0_full_n;
reg    ap_sync_reg_channel_write_high_th_0_0;
wire    ap_sync_channel_write_high_th_0_0;
wire    ap_channel_done_low_th_0_2;
wire    low_th_0_2_full_n;
reg    ap_sync_reg_channel_write_low_th_0_2;
wire    ap_sync_channel_write_low_th_0_2;
wire    ap_channel_done_low_th_0_1;
wire    low_th_0_1_full_n;
reg    ap_sync_reg_channel_write_low_th_0_1;
wire    ap_sync_channel_write_low_th_0_1;
wire    ap_channel_done_low_th_0_0;
wire    low_th_0_0_full_n;
reg    ap_sync_reg_channel_write_low_th_0_0;
wire    ap_sync_channel_write_low_th_0_0;
wire    colorthresholding_9_0_3_1080_1920_1_Block_colorthresholding_9_0_3_1080_1920_1_exit_proc_U0_ap_start;
wire    colorthresholding_9_0_3_1080_1920_1_Block_colorthresholding_9_0_3_1080_1920_1_exit_proc_U0_ap_done;
wire    colorthresholding_9_0_3_1080_1920_1_Block_colorthresholding_9_0_3_1080_1920_1_exit_proc_U0_ap_continue;
wire    colorthresholding_9_0_3_1080_1920_1_Block_colorthresholding_9_0_3_1080_1920_1_exit_proc_U0_ap_idle;
wire    colorthresholding_9_0_3_1080_1920_1_Block_colorthresholding_9_0_3_1080_1920_1_exit_proc_U0_ap_ready;
wire    colorthresholding_9_0_3_1080_1920_1_Block_colorthresholding_9_0_3_1080_1920_1_exit_proc_U0_p_src_mat_rows_read;
wire    colorthresholding_9_0_3_1080_1920_1_Block_colorthresholding_9_0_3_1080_1920_1_exit_proc_U0_p_src_mat_cols_read;
wire   [15:0] colorthresholding_9_0_3_1080_1920_1_Block_colorthresholding_9_0_3_1080_1920_1_exit_proc_U0_ap_return_0;
wire   [15:0] colorthresholding_9_0_3_1080_1920_1_Block_colorthresholding_9_0_3_1080_1920_1_exit_proc_U0_ap_return_1;
wire    ap_channel_done_img_width_loc_i_channel;
wire    img_width_loc_i_channel_full_n;
reg    ap_sync_reg_channel_write_img_width_loc_i_channel;
wire    ap_sync_channel_write_img_width_loc_i_channel;
wire    ap_channel_done_img_height_loc_i_channel;
wire    img_height_loc_i_channel_full_n;
reg    ap_sync_reg_channel_write_img_height_loc_i_channel;
wire    ap_sync_channel_write_img_height_loc_i_channel;
wire    xFInRange_9_0_1080_1920_15_0_1_9_1_3_U0_ap_start;
wire    xFInRange_9_0_1080_1920_15_0_1_9_1_3_U0_ap_done;
wire    xFInRange_9_0_1080_1920_15_0_1_9_1_3_U0_ap_continue;
wire    xFInRange_9_0_1080_1920_15_0_1_9_1_3_U0_ap_idle;
wire    xFInRange_9_0_1080_1920_15_0_1_9_1_3_U0_ap_ready;
wire    xFInRange_9_0_1080_1920_15_0_1_9_1_3_U0_img_in_418_read;
wire   [7:0] xFInRange_9_0_1080_1920_15_0_1_9_1_3_U0_img_out_419_din;
wire    xFInRange_9_0_1080_1920_15_0_1_9_1_3_U0_img_out_419_write;
wire    ap_sync_continue;
wire    p_src_mat_rows_c_i_full_n;
wire   [15:0] p_src_mat_rows_c_i_dout;
wire    p_src_mat_rows_c_i_empty_n;
wire    p_src_mat_cols_c_i_full_n;
wire   [15:0] p_src_mat_cols_c_i_dout;
wire    p_src_mat_cols_c_i_empty_n;
wire   [7:0] low_th_0_0_dout;
wire    low_th_0_0_empty_n;
wire   [7:0] low_th_0_1_dout;
wire    low_th_0_1_empty_n;
wire   [7:0] low_th_0_2_dout;
wire    low_th_0_2_empty_n;
wire   [7:0] high_th_0_0_dout;
wire    high_th_0_0_empty_n;
wire   [7:0] high_th_0_1_dout;
wire    high_th_0_1_empty_n;
wire   [7:0] high_th_0_2_dout;
wire    high_th_0_2_empty_n;
wire   [7:0] low_th_1_0_dout;
wire    low_th_1_0_empty_n;
wire   [7:0] low_th_1_1_dout;
wire    low_th_1_1_empty_n;
wire   [7:0] low_th_1_2_dout;
wire    low_th_1_2_empty_n;
wire   [7:0] high_th_1_0_dout;
wire    high_th_1_0_empty_n;
wire   [7:0] high_th_1_1_dout;
wire    high_th_1_1_empty_n;
wire   [7:0] high_th_1_2_dout;
wire    high_th_1_2_empty_n;
wire   [7:0] low_th_2_0_dout;
wire    low_th_2_0_empty_n;
wire   [7:0] low_th_2_1_dout;
wire    low_th_2_1_empty_n;
wire   [7:0] low_th_2_2_dout;
wire    low_th_2_2_empty_n;
wire   [7:0] high_th_2_0_dout;
wire    high_th_2_0_empty_n;
wire   [7:0] high_th_2_1_dout;
wire    high_th_2_1_empty_n;
wire   [7:0] high_th_2_2_dout;
wire    high_th_2_2_empty_n;
wire   [15:0] img_height_loc_i_channel_dout;
wire    img_height_loc_i_channel_empty_n;
wire   [15:0] img_width_loc_i_channel_dout;
wire    img_width_loc_i_channel_empty_n;
wire    ap_sync_done;
wire    ap_sync_ready;
reg    ap_sync_reg_colorthresholding_9_0_3_1080_1920_1_entry12_U0_ap_ready;
wire    ap_sync_colorthresholding_9_0_3_1080_1920_1_entry12_U0_ap_ready;
reg    ap_sync_reg_colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_ready;
wire    ap_sync_colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_ready;
wire   [0:0] start_for_colorthresholding_9_0_3_1080_1920_1_Block_colorthresholding_9_0_3_1080_1920_1_exit_proc_U0_din;
wire    start_for_colorthresholding_9_0_3_1080_1920_1_Block_colorthresholding_9_0_3_1080_1920_1_exit_proc_U0_full_n;
wire   [0:0] start_for_colorthresholding_9_0_3_1080_1920_1_Block_colorthresholding_9_0_3_1080_1920_1_exit_proc_U0_dout;
wire    start_for_colorthresholding_9_0_3_1080_1920_1_Block_colorthresholding_9_0_3_1080_1920_1_exit_proc_U0_empty_n;
wire    colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_start_full_n;
wire    colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_start_write;
wire    colorthresholding_9_0_3_1080_1920_1_Block_colorthresholding_9_0_3_1080_1920_1_exit_proc_U0_start_full_n;
wire    colorthresholding_9_0_3_1080_1920_1_Block_colorthresholding_9_0_3_1080_1920_1_exit_proc_U0_start_write;
wire    xFInRange_9_0_1080_1920_15_0_1_9_1_3_U0_start_full_n;
wire    xFInRange_9_0_1080_1920_15_0_1_9_1_3_U0_start_write;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_sync_reg_channel_write_high_th_2_2 = 1'b0;
#0 ap_sync_reg_channel_write_high_th_2_1 = 1'b0;
#0 ap_sync_reg_channel_write_high_th_2_0 = 1'b0;
#0 ap_sync_reg_channel_write_low_th_2_2 = 1'b0;
#0 ap_sync_reg_channel_write_low_th_2_1 = 1'b0;
#0 ap_sync_reg_channel_write_low_th_2_0 = 1'b0;
#0 ap_sync_reg_channel_write_high_th_1_2 = 1'b0;
#0 ap_sync_reg_channel_write_high_th_1_1 = 1'b0;
#0 ap_sync_reg_channel_write_high_th_1_0 = 1'b0;
#0 ap_sync_reg_channel_write_low_th_1_2 = 1'b0;
#0 ap_sync_reg_channel_write_low_th_1_1 = 1'b0;
#0 ap_sync_reg_channel_write_low_th_1_0 = 1'b0;
#0 ap_sync_reg_channel_write_high_th_0_2 = 1'b0;
#0 ap_sync_reg_channel_write_high_th_0_1 = 1'b0;
#0 ap_sync_reg_channel_write_high_th_0_0 = 1'b0;
#0 ap_sync_reg_channel_write_low_th_0_2 = 1'b0;
#0 ap_sync_reg_channel_write_low_th_0_1 = 1'b0;
#0 ap_sync_reg_channel_write_low_th_0_0 = 1'b0;
#0 ap_sync_reg_channel_write_img_width_loc_i_channel = 1'b0;
#0 ap_sync_reg_channel_write_img_height_loc_i_channel = 1'b0;
#0 ap_sync_reg_colorthresholding_9_0_3_1080_1920_1_entry12_U0_ap_ready = 1'b0;
#0 ap_sync_reg_colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_ready = 1'b0;
end

colorthresholding_accel_colorthresholding_9_0_3_1080_1920_1_entry12 colorthresholding_9_0_3_1080_1920_1_entry12_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(colorthresholding_9_0_3_1080_1920_1_entry12_U0_ap_start),
    .start_full_n(start_for_colorthresholding_9_0_3_1080_1920_1_Block_colorthresholding_9_0_3_1080_1920_1_exit_proc_U0_full_n),
    .ap_done(colorthresholding_9_0_3_1080_1920_1_entry12_U0_ap_done),
    .ap_continue(colorthresholding_9_0_3_1080_1920_1_entry12_U0_ap_continue),
    .ap_idle(colorthresholding_9_0_3_1080_1920_1_entry12_U0_ap_idle),
    .ap_ready(colorthresholding_9_0_3_1080_1920_1_entry12_U0_ap_ready),
    .start_out(colorthresholding_9_0_3_1080_1920_1_entry12_U0_start_out),
    .start_write(colorthresholding_9_0_3_1080_1920_1_entry12_U0_start_write),
    .p_src_mat_rows_dout(p_src_mat_rows_dout),
    .p_src_mat_rows_empty_n(p_src_mat_rows_empty_n),
    .p_src_mat_rows_read(colorthresholding_9_0_3_1080_1920_1_entry12_U0_p_src_mat_rows_read),
    .p_src_mat_cols_dout(p_src_mat_cols_dout),
    .p_src_mat_cols_empty_n(p_src_mat_cols_empty_n),
    .p_src_mat_cols_read(colorthresholding_9_0_3_1080_1920_1_entry12_U0_p_src_mat_cols_read),
    .p_src_mat_rows_out_din(colorthresholding_9_0_3_1080_1920_1_entry12_U0_p_src_mat_rows_out_din),
    .p_src_mat_rows_out_full_n(p_src_mat_rows_c_i_full_n),
    .p_src_mat_rows_out_write(colorthresholding_9_0_3_1080_1920_1_entry12_U0_p_src_mat_rows_out_write),
    .p_src_mat_cols_out_din(colorthresholding_9_0_3_1080_1920_1_entry12_U0_p_src_mat_cols_out_din),
    .p_src_mat_cols_out_full_n(p_src_mat_cols_c_i_full_n),
    .p_src_mat_cols_out_write(colorthresholding_9_0_3_1080_1920_1_entry12_U0_p_src_mat_cols_out_write)
);

colorthresholding_accel_colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_start),
    .ap_done(colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_done),
    .ap_continue(colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_continue),
    .ap_idle(colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_idle),
    .ap_ready(colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_ready),
    .lower_threshold_address0(colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_lower_threshold_address0),
    .lower_threshold_ce0(colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_lower_threshold_ce0),
    .lower_threshold_q0(lower_threshold_q0),
    .upper_threshold_address0(colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_upper_threshold_address0),
    .upper_threshold_ce0(colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_upper_threshold_ce0),
    .upper_threshold_q0(upper_threshold_q0),
    .ap_return_0(colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_return_0),
    .ap_return_1(colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_return_1),
    .ap_return_2(colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_return_2),
    .ap_return_3(colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_return_3),
    .ap_return_4(colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_return_4),
    .ap_return_5(colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_return_5),
    .ap_return_6(colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_return_6),
    .ap_return_7(colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_return_7),
    .ap_return_8(colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_return_8),
    .ap_return_9(colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_return_9),
    .ap_return_10(colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_return_10),
    .ap_return_11(colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_return_11),
    .ap_return_12(colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_return_12),
    .ap_return_13(colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_return_13),
    .ap_return_14(colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_return_14),
    .ap_return_15(colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_return_15),
    .ap_return_16(colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_return_16),
    .ap_return_17(colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_return_17)
);

colorthresholding_accel_colorthresholding_9_0_3_1080_1920_1_Block_colorthresholding_9_0_3_1080_1920_1_exit_proc colorthresholding_9_0_3_1080_1920_1_Block_colorthresholding_9_0_3_1080_1920_1_exit_proc_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(colorthresholding_9_0_3_1080_1920_1_Block_colorthresholding_9_0_3_1080_1920_1_exit_proc_U0_ap_start),
    .ap_done(colorthresholding_9_0_3_1080_1920_1_Block_colorthresholding_9_0_3_1080_1920_1_exit_proc_U0_ap_done),
    .ap_continue(colorthresholding_9_0_3_1080_1920_1_Block_colorthresholding_9_0_3_1080_1920_1_exit_proc_U0_ap_continue),
    .ap_idle(colorthresholding_9_0_3_1080_1920_1_Block_colorthresholding_9_0_3_1080_1920_1_exit_proc_U0_ap_idle),
    .ap_ready(colorthresholding_9_0_3_1080_1920_1_Block_colorthresholding_9_0_3_1080_1920_1_exit_proc_U0_ap_ready),
    .p_src_mat_rows_dout(p_src_mat_rows_c_i_dout),
    .p_src_mat_rows_empty_n(p_src_mat_rows_c_i_empty_n),
    .p_src_mat_rows_read(colorthresholding_9_0_3_1080_1920_1_Block_colorthresholding_9_0_3_1080_1920_1_exit_proc_U0_p_src_mat_rows_read),
    .p_src_mat_cols_dout(p_src_mat_cols_c_i_dout),
    .p_src_mat_cols_empty_n(p_src_mat_cols_c_i_empty_n),
    .p_src_mat_cols_read(colorthresholding_9_0_3_1080_1920_1_Block_colorthresholding_9_0_3_1080_1920_1_exit_proc_U0_p_src_mat_cols_read),
    .ap_return_0(colorthresholding_9_0_3_1080_1920_1_Block_colorthresholding_9_0_3_1080_1920_1_exit_proc_U0_ap_return_0),
    .ap_return_1(colorthresholding_9_0_3_1080_1920_1_Block_colorthresholding_9_0_3_1080_1920_1_exit_proc_U0_ap_return_1)
);

colorthresholding_accel_xFInRange_9_0_1080_1920_15_0_1_9_1_3_s xFInRange_9_0_1080_1920_15_0_1_9_1_3_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(xFInRange_9_0_1080_1920_15_0_1_9_1_3_U0_ap_start),
    .ap_done(xFInRange_9_0_1080_1920_15_0_1_9_1_3_U0_ap_done),
    .ap_continue(xFInRange_9_0_1080_1920_15_0_1_9_1_3_U0_ap_continue),
    .ap_idle(xFInRange_9_0_1080_1920_15_0_1_9_1_3_U0_ap_idle),
    .ap_ready(xFInRange_9_0_1080_1920_15_0_1_9_1_3_U0_ap_ready),
    .img_in_418_dout(img_in_418_dout),
    .img_in_418_empty_n(img_in_418_empty_n),
    .img_in_418_read(xFInRange_9_0_1080_1920_15_0_1_9_1_3_U0_img_in_418_read),
    .img_out_419_din(xFInRange_9_0_1080_1920_15_0_1_9_1_3_U0_img_out_419_din),
    .img_out_419_full_n(img_out_419_full_n),
    .img_out_419_write(xFInRange_9_0_1080_1920_15_0_1_9_1_3_U0_img_out_419_write),
    .p_read(low_th_0_0_dout),
    .p_read1(low_th_0_1_dout),
    .p_read2(low_th_0_2_dout),
    .p_read3(low_th_1_0_dout),
    .p_read4(low_th_1_1_dout),
    .p_read5(low_th_1_2_dout),
    .p_read6(low_th_2_0_dout),
    .p_read7(low_th_2_1_dout),
    .p_read8(low_th_2_2_dout),
    .p_read9(high_th_0_0_dout),
    .p_read10(high_th_0_1_dout),
    .p_read11(high_th_0_2_dout),
    .p_read12(high_th_1_0_dout),
    .p_read13(high_th_1_1_dout),
    .p_read14(high_th_1_2_dout),
    .p_read15(high_th_2_0_dout),
    .p_read16(high_th_2_1_dout),
    .p_read17(high_th_2_2_dout),
    .p_read18(img_height_loc_i_channel_dout),
    .p_read19(img_width_loc_i_channel_dout)
);

colorthresholding_accel_fifo_w16_d2_S p_src_mat_rows_c_i_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(colorthresholding_9_0_3_1080_1920_1_entry12_U0_p_src_mat_rows_out_din),
    .if_full_n(p_src_mat_rows_c_i_full_n),
    .if_write(colorthresholding_9_0_3_1080_1920_1_entry12_U0_p_src_mat_rows_out_write),
    .if_dout(p_src_mat_rows_c_i_dout),
    .if_empty_n(p_src_mat_rows_c_i_empty_n),
    .if_read(colorthresholding_9_0_3_1080_1920_1_Block_colorthresholding_9_0_3_1080_1920_1_exit_proc_U0_p_src_mat_rows_read)
);

colorthresholding_accel_fifo_w16_d2_S p_src_mat_cols_c_i_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(colorthresholding_9_0_3_1080_1920_1_entry12_U0_p_src_mat_cols_out_din),
    .if_full_n(p_src_mat_cols_c_i_full_n),
    .if_write(colorthresholding_9_0_3_1080_1920_1_entry12_U0_p_src_mat_cols_out_write),
    .if_dout(p_src_mat_cols_c_i_dout),
    .if_empty_n(p_src_mat_cols_c_i_empty_n),
    .if_read(colorthresholding_9_0_3_1080_1920_1_Block_colorthresholding_9_0_3_1080_1920_1_exit_proc_U0_p_src_mat_cols_read)
);

colorthresholding_accel_fifo_w8_d3_S low_th_0_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_return_0),
    .if_full_n(low_th_0_0_full_n),
    .if_write(ap_channel_done_low_th_0_0),
    .if_dout(low_th_0_0_dout),
    .if_empty_n(low_th_0_0_empty_n),
    .if_read(xFInRange_9_0_1080_1920_15_0_1_9_1_3_U0_ap_ready)
);

colorthresholding_accel_fifo_w8_d3_S low_th_0_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_return_1),
    .if_full_n(low_th_0_1_full_n),
    .if_write(ap_channel_done_low_th_0_1),
    .if_dout(low_th_0_1_dout),
    .if_empty_n(low_th_0_1_empty_n),
    .if_read(xFInRange_9_0_1080_1920_15_0_1_9_1_3_U0_ap_ready)
);

colorthresholding_accel_fifo_w8_d3_S low_th_0_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_return_2),
    .if_full_n(low_th_0_2_full_n),
    .if_write(ap_channel_done_low_th_0_2),
    .if_dout(low_th_0_2_dout),
    .if_empty_n(low_th_0_2_empty_n),
    .if_read(xFInRange_9_0_1080_1920_15_0_1_9_1_3_U0_ap_ready)
);

colorthresholding_accel_fifo_w8_d3_S high_th_0_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_return_3),
    .if_full_n(high_th_0_0_full_n),
    .if_write(ap_channel_done_high_th_0_0),
    .if_dout(high_th_0_0_dout),
    .if_empty_n(high_th_0_0_empty_n),
    .if_read(xFInRange_9_0_1080_1920_15_0_1_9_1_3_U0_ap_ready)
);

colorthresholding_accel_fifo_w8_d3_S high_th_0_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_return_4),
    .if_full_n(high_th_0_1_full_n),
    .if_write(ap_channel_done_high_th_0_1),
    .if_dout(high_th_0_1_dout),
    .if_empty_n(high_th_0_1_empty_n),
    .if_read(xFInRange_9_0_1080_1920_15_0_1_9_1_3_U0_ap_ready)
);

colorthresholding_accel_fifo_w8_d3_S high_th_0_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_return_5),
    .if_full_n(high_th_0_2_full_n),
    .if_write(ap_channel_done_high_th_0_2),
    .if_dout(high_th_0_2_dout),
    .if_empty_n(high_th_0_2_empty_n),
    .if_read(xFInRange_9_0_1080_1920_15_0_1_9_1_3_U0_ap_ready)
);

colorthresholding_accel_fifo_w8_d3_S low_th_1_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_return_6),
    .if_full_n(low_th_1_0_full_n),
    .if_write(ap_channel_done_low_th_1_0),
    .if_dout(low_th_1_0_dout),
    .if_empty_n(low_th_1_0_empty_n),
    .if_read(xFInRange_9_0_1080_1920_15_0_1_9_1_3_U0_ap_ready)
);

colorthresholding_accel_fifo_w8_d3_S low_th_1_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_return_7),
    .if_full_n(low_th_1_1_full_n),
    .if_write(ap_channel_done_low_th_1_1),
    .if_dout(low_th_1_1_dout),
    .if_empty_n(low_th_1_1_empty_n),
    .if_read(xFInRange_9_0_1080_1920_15_0_1_9_1_3_U0_ap_ready)
);

colorthresholding_accel_fifo_w8_d3_S low_th_1_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_return_8),
    .if_full_n(low_th_1_2_full_n),
    .if_write(ap_channel_done_low_th_1_2),
    .if_dout(low_th_1_2_dout),
    .if_empty_n(low_th_1_2_empty_n),
    .if_read(xFInRange_9_0_1080_1920_15_0_1_9_1_3_U0_ap_ready)
);

colorthresholding_accel_fifo_w8_d3_S high_th_1_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_return_9),
    .if_full_n(high_th_1_0_full_n),
    .if_write(ap_channel_done_high_th_1_0),
    .if_dout(high_th_1_0_dout),
    .if_empty_n(high_th_1_0_empty_n),
    .if_read(xFInRange_9_0_1080_1920_15_0_1_9_1_3_U0_ap_ready)
);

colorthresholding_accel_fifo_w8_d3_S high_th_1_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_return_10),
    .if_full_n(high_th_1_1_full_n),
    .if_write(ap_channel_done_high_th_1_1),
    .if_dout(high_th_1_1_dout),
    .if_empty_n(high_th_1_1_empty_n),
    .if_read(xFInRange_9_0_1080_1920_15_0_1_9_1_3_U0_ap_ready)
);

colorthresholding_accel_fifo_w8_d3_S high_th_1_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_return_11),
    .if_full_n(high_th_1_2_full_n),
    .if_write(ap_channel_done_high_th_1_2),
    .if_dout(high_th_1_2_dout),
    .if_empty_n(high_th_1_2_empty_n),
    .if_read(xFInRange_9_0_1080_1920_15_0_1_9_1_3_U0_ap_ready)
);

colorthresholding_accel_fifo_w8_d3_S low_th_2_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_return_12),
    .if_full_n(low_th_2_0_full_n),
    .if_write(ap_channel_done_low_th_2_0),
    .if_dout(low_th_2_0_dout),
    .if_empty_n(low_th_2_0_empty_n),
    .if_read(xFInRange_9_0_1080_1920_15_0_1_9_1_3_U0_ap_ready)
);

colorthresholding_accel_fifo_w8_d3_S low_th_2_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_return_13),
    .if_full_n(low_th_2_1_full_n),
    .if_write(ap_channel_done_low_th_2_1),
    .if_dout(low_th_2_1_dout),
    .if_empty_n(low_th_2_1_empty_n),
    .if_read(xFInRange_9_0_1080_1920_15_0_1_9_1_3_U0_ap_ready)
);

colorthresholding_accel_fifo_w8_d3_S low_th_2_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_return_14),
    .if_full_n(low_th_2_2_full_n),
    .if_write(ap_channel_done_low_th_2_2),
    .if_dout(low_th_2_2_dout),
    .if_empty_n(low_th_2_2_empty_n),
    .if_read(xFInRange_9_0_1080_1920_15_0_1_9_1_3_U0_ap_ready)
);

colorthresholding_accel_fifo_w8_d3_S high_th_2_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_return_15),
    .if_full_n(high_th_2_0_full_n),
    .if_write(ap_channel_done_high_th_2_0),
    .if_dout(high_th_2_0_dout),
    .if_empty_n(high_th_2_0_empty_n),
    .if_read(xFInRange_9_0_1080_1920_15_0_1_9_1_3_U0_ap_ready)
);

colorthresholding_accel_fifo_w8_d3_S high_th_2_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_return_16),
    .if_full_n(high_th_2_1_full_n),
    .if_write(ap_channel_done_high_th_2_1),
    .if_dout(high_th_2_1_dout),
    .if_empty_n(high_th_2_1_empty_n),
    .if_read(xFInRange_9_0_1080_1920_15_0_1_9_1_3_U0_ap_ready)
);

colorthresholding_accel_fifo_w8_d3_S high_th_2_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_return_17),
    .if_full_n(high_th_2_2_full_n),
    .if_write(ap_channel_done_high_th_2_2),
    .if_dout(high_th_2_2_dout),
    .if_empty_n(high_th_2_2_empty_n),
    .if_read(xFInRange_9_0_1080_1920_15_0_1_9_1_3_U0_ap_ready)
);

colorthresholding_accel_fifo_w16_d2_S img_height_loc_i_channel_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(colorthresholding_9_0_3_1080_1920_1_Block_colorthresholding_9_0_3_1080_1920_1_exit_proc_U0_ap_return_0),
    .if_full_n(img_height_loc_i_channel_full_n),
    .if_write(ap_channel_done_img_height_loc_i_channel),
    .if_dout(img_height_loc_i_channel_dout),
    .if_empty_n(img_height_loc_i_channel_empty_n),
    .if_read(xFInRange_9_0_1080_1920_15_0_1_9_1_3_U0_ap_ready)
);

colorthresholding_accel_fifo_w16_d2_S img_width_loc_i_channel_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(colorthresholding_9_0_3_1080_1920_1_Block_colorthresholding_9_0_3_1080_1920_1_exit_proc_U0_ap_return_1),
    .if_full_n(img_width_loc_i_channel_full_n),
    .if_write(ap_channel_done_img_width_loc_i_channel),
    .if_dout(img_width_loc_i_channel_dout),
    .if_empty_n(img_width_loc_i_channel_empty_n),
    .if_read(xFInRange_9_0_1080_1920_15_0_1_9_1_3_U0_ap_ready)
);

colorthresholding_accel_start_for_colorthresholding_9_0_3_1080_1920_1_Block_colorthresholding_9_0_3_1bkb start_for_colorthresholding_9_0_3_1080_1920_1_Block_colorthresholding_9_0_3_1bkb_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_colorthresholding_9_0_3_1080_1920_1_Block_colorthresholding_9_0_3_1080_1920_1_exit_proc_U0_din),
    .if_full_n(start_for_colorthresholding_9_0_3_1080_1920_1_Block_colorthresholding_9_0_3_1080_1920_1_exit_proc_U0_full_n),
    .if_write(colorthresholding_9_0_3_1080_1920_1_entry12_U0_start_write),
    .if_dout(start_for_colorthresholding_9_0_3_1080_1920_1_Block_colorthresholding_9_0_3_1080_1920_1_exit_proc_U0_dout),
    .if_empty_n(start_for_colorthresholding_9_0_3_1080_1920_1_Block_colorthresholding_9_0_3_1080_1920_1_exit_proc_U0_empty_n),
    .if_read(colorthresholding_9_0_3_1080_1920_1_Block_colorthresholding_9_0_3_1080_1920_1_exit_proc_U0_ap_ready)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_high_th_0_0 <= 1'b0;
    end else begin
        if (((colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_done & colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_high_th_0_0 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_high_th_0_0 <= ap_sync_channel_write_high_th_0_0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_high_th_0_1 <= 1'b0;
    end else begin
        if (((colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_done & colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_high_th_0_1 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_high_th_0_1 <= ap_sync_channel_write_high_th_0_1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_high_th_0_2 <= 1'b0;
    end else begin
        if (((colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_done & colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_high_th_0_2 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_high_th_0_2 <= ap_sync_channel_write_high_th_0_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_high_th_1_0 <= 1'b0;
    end else begin
        if (((colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_done & colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_high_th_1_0 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_high_th_1_0 <= ap_sync_channel_write_high_th_1_0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_high_th_1_1 <= 1'b0;
    end else begin
        if (((colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_done & colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_high_th_1_1 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_high_th_1_1 <= ap_sync_channel_write_high_th_1_1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_high_th_1_2 <= 1'b0;
    end else begin
        if (((colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_done & colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_high_th_1_2 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_high_th_1_2 <= ap_sync_channel_write_high_th_1_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_high_th_2_0 <= 1'b0;
    end else begin
        if (((colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_done & colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_high_th_2_0 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_high_th_2_0 <= ap_sync_channel_write_high_th_2_0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_high_th_2_1 <= 1'b0;
    end else begin
        if (((colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_done & colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_high_th_2_1 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_high_th_2_1 <= ap_sync_channel_write_high_th_2_1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_high_th_2_2 <= 1'b0;
    end else begin
        if (((colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_done & colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_high_th_2_2 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_high_th_2_2 <= ap_sync_channel_write_high_th_2_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_img_height_loc_i_channel <= 1'b0;
    end else begin
        if (((colorthresholding_9_0_3_1080_1920_1_Block_colorthresholding_9_0_3_1080_1920_1_exit_proc_U0_ap_done & colorthresholding_9_0_3_1080_1920_1_Block_colorthresholding_9_0_3_1080_1920_1_exit_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_img_height_loc_i_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_img_height_loc_i_channel <= ap_sync_channel_write_img_height_loc_i_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_img_width_loc_i_channel <= 1'b0;
    end else begin
        if (((colorthresholding_9_0_3_1080_1920_1_Block_colorthresholding_9_0_3_1080_1920_1_exit_proc_U0_ap_done & colorthresholding_9_0_3_1080_1920_1_Block_colorthresholding_9_0_3_1080_1920_1_exit_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_img_width_loc_i_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_img_width_loc_i_channel <= ap_sync_channel_write_img_width_loc_i_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_low_th_0_0 <= 1'b0;
    end else begin
        if (((colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_done & colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_low_th_0_0 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_low_th_0_0 <= ap_sync_channel_write_low_th_0_0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_low_th_0_1 <= 1'b0;
    end else begin
        if (((colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_done & colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_low_th_0_1 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_low_th_0_1 <= ap_sync_channel_write_low_th_0_1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_low_th_0_2 <= 1'b0;
    end else begin
        if (((colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_done & colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_low_th_0_2 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_low_th_0_2 <= ap_sync_channel_write_low_th_0_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_low_th_1_0 <= 1'b0;
    end else begin
        if (((colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_done & colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_low_th_1_0 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_low_th_1_0 <= ap_sync_channel_write_low_th_1_0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_low_th_1_1 <= 1'b0;
    end else begin
        if (((colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_done & colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_low_th_1_1 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_low_th_1_1 <= ap_sync_channel_write_low_th_1_1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_low_th_1_2 <= 1'b0;
    end else begin
        if (((colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_done & colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_low_th_1_2 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_low_th_1_2 <= ap_sync_channel_write_low_th_1_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_low_th_2_0 <= 1'b0;
    end else begin
        if (((colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_done & colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_low_th_2_0 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_low_th_2_0 <= ap_sync_channel_write_low_th_2_0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_low_th_2_1 <= 1'b0;
    end else begin
        if (((colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_done & colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_low_th_2_1 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_low_th_2_1 <= ap_sync_channel_write_low_th_2_1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_low_th_2_2 <= 1'b0;
    end else begin
        if (((colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_done & colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_low_th_2_2 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_low_th_2_2 <= ap_sync_channel_write_low_th_2_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_ready <= ap_sync_colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_colorthresholding_9_0_3_1080_1920_1_entry12_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_colorthresholding_9_0_3_1080_1920_1_entry12_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_colorthresholding_9_0_3_1080_1920_1_entry12_U0_ap_ready <= ap_sync_colorthresholding_9_0_3_1080_1920_1_entry12_U0_ap_ready;
        end
    end
end

assign ap_channel_done_high_th_0_0 = ((ap_sync_reg_channel_write_high_th_0_0 ^ 1'b1) & colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_done);

assign ap_channel_done_high_th_0_1 = ((ap_sync_reg_channel_write_high_th_0_1 ^ 1'b1) & colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_done);

assign ap_channel_done_high_th_0_2 = ((ap_sync_reg_channel_write_high_th_0_2 ^ 1'b1) & colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_done);

assign ap_channel_done_high_th_1_0 = ((ap_sync_reg_channel_write_high_th_1_0 ^ 1'b1) & colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_done);

assign ap_channel_done_high_th_1_1 = ((ap_sync_reg_channel_write_high_th_1_1 ^ 1'b1) & colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_done);

assign ap_channel_done_high_th_1_2 = ((ap_sync_reg_channel_write_high_th_1_2 ^ 1'b1) & colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_done);

assign ap_channel_done_high_th_2_0 = ((ap_sync_reg_channel_write_high_th_2_0 ^ 1'b1) & colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_done);

assign ap_channel_done_high_th_2_1 = ((ap_sync_reg_channel_write_high_th_2_1 ^ 1'b1) & colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_done);

assign ap_channel_done_high_th_2_2 = ((ap_sync_reg_channel_write_high_th_2_2 ^ 1'b1) & colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_done);

assign ap_channel_done_img_height_loc_i_channel = ((ap_sync_reg_channel_write_img_height_loc_i_channel ^ 1'b1) & colorthresholding_9_0_3_1080_1920_1_Block_colorthresholding_9_0_3_1080_1920_1_exit_proc_U0_ap_done);

assign ap_channel_done_img_width_loc_i_channel = ((ap_sync_reg_channel_write_img_width_loc_i_channel ^ 1'b1) & colorthresholding_9_0_3_1080_1920_1_Block_colorthresholding_9_0_3_1080_1920_1_exit_proc_U0_ap_done);

assign ap_channel_done_low_th_0_0 = ((ap_sync_reg_channel_write_low_th_0_0 ^ 1'b1) & colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_done);

assign ap_channel_done_low_th_0_1 = ((ap_sync_reg_channel_write_low_th_0_1 ^ 1'b1) & colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_done);

assign ap_channel_done_low_th_0_2 = ((ap_sync_reg_channel_write_low_th_0_2 ^ 1'b1) & colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_done);

assign ap_channel_done_low_th_1_0 = ((ap_sync_reg_channel_write_low_th_1_0 ^ 1'b1) & colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_done);

assign ap_channel_done_low_th_1_1 = ((ap_sync_reg_channel_write_low_th_1_1 ^ 1'b1) & colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_done);

assign ap_channel_done_low_th_1_2 = ((ap_sync_reg_channel_write_low_th_1_2 ^ 1'b1) & colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_done);

assign ap_channel_done_low_th_2_0 = ((ap_sync_reg_channel_write_low_th_2_0 ^ 1'b1) & colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_done);

assign ap_channel_done_low_th_2_1 = ((ap_sync_reg_channel_write_low_th_2_1 ^ 1'b1) & colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_done);

assign ap_channel_done_low_th_2_2 = ((ap_sync_reg_channel_write_low_th_2_2 ^ 1'b1) & colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_done);

assign ap_done = xFInRange_9_0_1080_1920_15_0_1_9_1_3_U0_ap_done;

assign ap_idle = (xFInRange_9_0_1080_1920_15_0_1_9_1_3_U0_ap_idle & (img_width_loc_i_channel_empty_n ^ 1'b1) & (img_height_loc_i_channel_empty_n ^ 1'b1) & (high_th_2_2_empty_n ^ 1'b1) & (high_th_2_1_empty_n ^ 1'b1) & (high_th_2_0_empty_n ^ 1'b1) & (low_th_2_2_empty_n ^ 1'b1) & (low_th_2_1_empty_n ^ 1'b1) & (low_th_2_0_empty_n ^ 1'b1) & (high_th_1_2_empty_n ^ 1'b1) & (high_th_1_1_empty_n ^ 1'b1) & (high_th_1_0_empty_n ^ 1'b1) & (low_th_1_2_empty_n ^ 1'b1) & (low_th_1_1_empty_n ^ 1'b1) & (low_th_1_0_empty_n ^ 1'b1) & (high_th_0_2_empty_n ^ 1'b1) & (high_th_0_1_empty_n ^ 1'b1) & (high_th_0_0_empty_n ^ 1'b1) & (low_th_0_2_empty_n ^ 1'b1) & (low_th_0_1_empty_n ^ 1'b1) & (low_th_0_0_empty_n ^ 1'b1) & colorthresholding_9_0_3_1080_1920_1_entry12_U0_ap_idle & colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_idle & colorthresholding_9_0_3_1080_1920_1_Block_colorthresholding_9_0_3_1080_1920_1_exit_proc_U0_ap_idle);

assign ap_ready = ap_sync_ready;

assign ap_sync_channel_write_high_th_0_0 = ((high_th_0_0_full_n & ap_channel_done_high_th_0_0) | ap_sync_reg_channel_write_high_th_0_0);

assign ap_sync_channel_write_high_th_0_1 = ((high_th_0_1_full_n & ap_channel_done_high_th_0_1) | ap_sync_reg_channel_write_high_th_0_1);

assign ap_sync_channel_write_high_th_0_2 = ((high_th_0_2_full_n & ap_channel_done_high_th_0_2) | ap_sync_reg_channel_write_high_th_0_2);

assign ap_sync_channel_write_high_th_1_0 = ((high_th_1_0_full_n & ap_channel_done_high_th_1_0) | ap_sync_reg_channel_write_high_th_1_0);

assign ap_sync_channel_write_high_th_1_1 = ((high_th_1_1_full_n & ap_channel_done_high_th_1_1) | ap_sync_reg_channel_write_high_th_1_1);

assign ap_sync_channel_write_high_th_1_2 = ((high_th_1_2_full_n & ap_channel_done_high_th_1_2) | ap_sync_reg_channel_write_high_th_1_2);

assign ap_sync_channel_write_high_th_2_0 = ((high_th_2_0_full_n & ap_channel_done_high_th_2_0) | ap_sync_reg_channel_write_high_th_2_0);

assign ap_sync_channel_write_high_th_2_1 = ((high_th_2_1_full_n & ap_channel_done_high_th_2_1) | ap_sync_reg_channel_write_high_th_2_1);

assign ap_sync_channel_write_high_th_2_2 = ((high_th_2_2_full_n & ap_channel_done_high_th_2_2) | ap_sync_reg_channel_write_high_th_2_2);

assign ap_sync_channel_write_img_height_loc_i_channel = ((img_height_loc_i_channel_full_n & ap_channel_done_img_height_loc_i_channel) | ap_sync_reg_channel_write_img_height_loc_i_channel);

assign ap_sync_channel_write_img_width_loc_i_channel = ((img_width_loc_i_channel_full_n & ap_channel_done_img_width_loc_i_channel) | ap_sync_reg_channel_write_img_width_loc_i_channel);

assign ap_sync_channel_write_low_th_0_0 = ((low_th_0_0_full_n & ap_channel_done_low_th_0_0) | ap_sync_reg_channel_write_low_th_0_0);

assign ap_sync_channel_write_low_th_0_1 = ((low_th_0_1_full_n & ap_channel_done_low_th_0_1) | ap_sync_reg_channel_write_low_th_0_1);

assign ap_sync_channel_write_low_th_0_2 = ((low_th_0_2_full_n & ap_channel_done_low_th_0_2) | ap_sync_reg_channel_write_low_th_0_2);

assign ap_sync_channel_write_low_th_1_0 = ((low_th_1_0_full_n & ap_channel_done_low_th_1_0) | ap_sync_reg_channel_write_low_th_1_0);

assign ap_sync_channel_write_low_th_1_1 = ((low_th_1_1_full_n & ap_channel_done_low_th_1_1) | ap_sync_reg_channel_write_low_th_1_1);

assign ap_sync_channel_write_low_th_1_2 = ((low_th_1_2_full_n & ap_channel_done_low_th_1_2) | ap_sync_reg_channel_write_low_th_1_2);

assign ap_sync_channel_write_low_th_2_0 = ((low_th_2_0_full_n & ap_channel_done_low_th_2_0) | ap_sync_reg_channel_write_low_th_2_0);

assign ap_sync_channel_write_low_th_2_1 = ((low_th_2_1_full_n & ap_channel_done_low_th_2_1) | ap_sync_reg_channel_write_low_th_2_1);

assign ap_sync_channel_write_low_th_2_2 = ((low_th_2_2_full_n & ap_channel_done_low_th_2_2) | ap_sync_reg_channel_write_low_th_2_2);

assign ap_sync_colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_ready = (colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_ready | ap_sync_reg_colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_ready);

assign ap_sync_colorthresholding_9_0_3_1080_1920_1_entry12_U0_ap_ready = (colorthresholding_9_0_3_1080_1920_1_entry12_U0_ap_ready | ap_sync_reg_colorthresholding_9_0_3_1080_1920_1_entry12_U0_ap_ready);

assign ap_sync_continue = ap_continue;

assign ap_sync_done = xFInRange_9_0_1080_1920_15_0_1_9_1_3_U0_ap_done;

assign ap_sync_ready = (ap_sync_colorthresholding_9_0_3_1080_1920_1_entry12_U0_ap_ready & ap_sync_colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_ready);

assign colorthresholding_9_0_3_1080_1920_1_Block_colorthresholding_9_0_3_1080_1920_1_exit_proc_U0_ap_continue = (ap_sync_channel_write_img_width_loc_i_channel & ap_sync_channel_write_img_height_loc_i_channel);

assign colorthresholding_9_0_3_1080_1920_1_Block_colorthresholding_9_0_3_1080_1920_1_exit_proc_U0_ap_start = start_for_colorthresholding_9_0_3_1080_1920_1_Block_colorthresholding_9_0_3_1080_1920_1_exit_proc_U0_empty_n;

assign colorthresholding_9_0_3_1080_1920_1_Block_colorthresholding_9_0_3_1080_1920_1_exit_proc_U0_start_full_n = 1'b1;

assign colorthresholding_9_0_3_1080_1920_1_Block_colorthresholding_9_0_3_1080_1920_1_exit_proc_U0_start_write = 1'b0;

assign colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_continue = (ap_sync_channel_write_low_th_2_2 & ap_sync_channel_write_low_th_2_1 & ap_sync_channel_write_low_th_2_0 & ap_sync_channel_write_low_th_1_2 & ap_sync_channel_write_low_th_1_1 & ap_sync_channel_write_low_th_1_0 & ap_sync_channel_write_low_th_0_2 & ap_sync_channel_write_low_th_0_1 & ap_sync_channel_write_low_th_0_0 & ap_sync_channel_write_high_th_2_2 & ap_sync_channel_write_high_th_2_1 & ap_sync_channel_write_high_th_2_0 & ap_sync_channel_write_high_th_1_2 & ap_sync_channel_write_high_th_1_1 & ap_sync_channel_write_high_th_1_0 & ap_sync_channel_write_high_th_0_2 & ap_sync_channel_write_high_th_0_1 & ap_sync_channel_write_high_th_0_0);

assign colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_start = ((ap_sync_reg_colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_ap_ready ^ 1'b1) & ap_start);

assign colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_start_full_n = 1'b1;

assign colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_start_write = 1'b0;

assign colorthresholding_9_0_3_1080_1920_1_entry12_U0_ap_continue = 1'b1;

assign colorthresholding_9_0_3_1080_1920_1_entry12_U0_ap_start = ((ap_sync_reg_colorthresholding_9_0_3_1080_1920_1_entry12_U0_ap_ready ^ 1'b1) & ap_start);

assign img_in_418_read = xFInRange_9_0_1080_1920_15_0_1_9_1_3_U0_img_in_418_read;

assign img_out_419_din = xFInRange_9_0_1080_1920_15_0_1_9_1_3_U0_img_out_419_din;

assign img_out_419_write = xFInRange_9_0_1080_1920_15_0_1_9_1_3_U0_img_out_419_write;

assign lower_threshold_address0 = colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_lower_threshold_address0;

assign lower_threshold_ce0 = colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_lower_threshold_ce0;

assign lower_threshold_d0 = 8'd0;

assign lower_threshold_we0 = 1'b0;

assign p_src_mat_cols_read = colorthresholding_9_0_3_1080_1920_1_entry12_U0_p_src_mat_cols_read;

assign p_src_mat_rows_read = colorthresholding_9_0_3_1080_1920_1_entry12_U0_p_src_mat_rows_read;

assign start_for_colorthresholding_9_0_3_1080_1920_1_Block_colorthresholding_9_0_3_1080_1920_1_exit_proc_U0_din = 1'b1;

assign upper_threshold_address0 = colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_upper_threshold_address0;

assign upper_threshold_ce0 = colorthresholding_9_0_3_1080_1920_1_Loop_VITIS_LOOP_138_1_proc_U0_upper_threshold_ce0;

assign upper_threshold_d0 = 8'd0;

assign upper_threshold_we0 = 1'b0;

assign xFInRange_9_0_1080_1920_15_0_1_9_1_3_U0_ap_continue = ap_continue;

assign xFInRange_9_0_1080_1920_15_0_1_9_1_3_U0_ap_start = (low_th_2_2_empty_n & low_th_2_1_empty_n & low_th_2_0_empty_n & low_th_1_2_empty_n & low_th_1_1_empty_n & low_th_1_0_empty_n & low_th_0_2_empty_n & low_th_0_1_empty_n & low_th_0_0_empty_n & img_width_loc_i_channel_empty_n & img_height_loc_i_channel_empty_n & high_th_2_2_empty_n & high_th_2_1_empty_n & high_th_2_0_empty_n & high_th_1_2_empty_n & high_th_1_1_empty_n & high_th_1_0_empty_n & high_th_0_2_empty_n & high_th_0_1_empty_n & high_th_0_0_empty_n);

assign xFInRange_9_0_1080_1920_15_0_1_9_1_3_U0_start_full_n = 1'b1;

assign xFInRange_9_0_1080_1920_15_0_1_9_1_3_U0_start_write = 1'b0;

endmodule //colorthresholding_accel_colorthresholding_9_0_3_1080_1920_1_s
