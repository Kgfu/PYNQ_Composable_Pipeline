// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2.2 (64-bit)
// Version: 2020.2.2
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module filter2d_accel_xFFilter2Dkernel_9_9_1080_1920_15_15_1_9_9_1920_3_3_3_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        img_in_419_dout,
        img_in_419_empty_n,
        img_in_419_read,
        img_out_420_din,
        img_out_420_full_n,
        img_out_420_write,
        p_read,
        p_read1,
        p_read2,
        p_read3,
        p_read4,
        p_read5,
        p_read6,
        p_read7,
        p_read8,
        shift,
        rows,
        cols
);

parameter    ap_ST_fsm_state1 = 5'd1;
parameter    ap_ST_fsm_state2 = 5'd2;
parameter    ap_ST_fsm_state3 = 5'd4;
parameter    ap_ST_fsm_pp0_stage0 = 5'd8;
parameter    ap_ST_fsm_state22 = 5'd16;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [23:0] img_in_419_dout;
input   img_in_419_empty_n;
output   img_in_419_read;
output  [23:0] img_out_420_din;
input   img_out_420_full_n;
output   img_out_420_write;
input  [15:0] p_read;
input  [15:0] p_read1;
input  [15:0] p_read2;
input  [15:0] p_read3;
input  [15:0] p_read4;
input  [15:0] p_read5;
input  [15:0] p_read6;
input  [15:0] p_read7;
input  [15:0] p_read8;
input  [7:0] shift;
input  [15:0] rows;
input  [15:0] cols;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg img_in_419_read;
reg img_out_420_write;

(* fsm_encoding = "none" *) reg   [4:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    img_in_419_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln703_reg_1109;
reg   [0:0] brmerge25_reg_1076;
reg   [0:0] icmp_ln633_reg_1118;
reg    img_out_420_blk_n;
reg    ap_enable_reg_pp0_iter17;
reg   [0:0] and_ln788_reg_1134;
reg   [0:0] and_ln788_reg_1134_pp0_iter16_reg;
reg   [15:0] j_reg_290;
wire   [16:0] zext_ln689_fu_329_p1;
reg   [16:0] zext_ln689_reg_955;
wire   [16:0] heightloop_fu_333_p2;
reg   [16:0] heightloop_reg_965;
wire   [16:0] zext_ln690_fu_339_p1;
reg   [16:0] zext_ln690_reg_970;
wire   [16:0] widthloop_fu_343_p2;
reg   [16:0] widthloop_reg_976;
wire   [16:0] sub81_fu_353_p2;
reg   [16:0] sub81_reg_981;
wire   [1:0] add_ln701_fu_359_p2;
reg   [1:0] add_ln701_reg_987;
wire   [15:0] i_2_fu_365_p2;
reg   [15:0] i_2_reg_992;
wire    ap_CS_fsm_state2;
wire   [1:0] empty_35_fu_380_p1;
reg   [1:0] empty_35_reg_1000;
wire   [0:0] icmp_ln701_fu_375_p2;
wire   [0:0] cmp76_fu_394_p2;
reg   [0:0] cmp76_reg_1007;
wire   [0:0] cmp180_fu_400_p2;
reg   [0:0] cmp180_reg_1012;
reg   [0:0] tmp_1_reg_1017;
wire   [0:0] slt_fu_414_p2;
reg   [0:0] slt_reg_1021;
wire   [0:0] icmp_fu_429_p2;
reg   [0:0] icmp_reg_1026;
wire   [0:0] notrhs_fu_435_p2;
reg   [0:0] notrhs_reg_1031;
wire   [0:0] icmp_ln633_1_fu_440_p2;
reg   [0:0] icmp_ln633_1_reg_1036;
wire   [0:0] icmp_ln777_fu_445_p2;
reg   [0:0] icmp_ln777_reg_1041;
wire  signed [15:0] add_ln783_fu_450_p2;
reg  signed [15:0] add_ln783_reg_1046;
wire   [0:0] icmp_ln633_2_fu_460_p2;
reg   [0:0] icmp_ln633_2_reg_1051;
wire   [0:0] icmp_ln779_fu_465_p2;
reg   [0:0] icmp_ln779_reg_1056;
wire  signed [15:0] add_ln783_1_fu_470_p2;
reg  signed [15:0] add_ln783_1_reg_1061;
wire   [0:0] icmp_ln633_3_fu_480_p2;
reg   [0:0] icmp_ln633_3_reg_1066;
wire   [0:0] icmp_ln779_1_fu_485_p2;
reg   [0:0] icmp_ln779_1_reg_1071;
wire   [0:0] brmerge25_fu_506_p2;
wire    ap_CS_fsm_state3;
wire   [1:0] sub_ln782_fu_517_p2;
reg   [1:0] sub_ln782_reg_1080;
wire   [1:0] sub_ln782_1_fu_535_p2;
reg   [1:0] sub_ln782_1_reg_1085;
wire   [0:0] or_ln779_fu_553_p2;
reg   [0:0] or_ln779_reg_1090;
wire   [1:0] sub_ln782_2_fu_571_p2;
reg   [1:0] sub_ln782_2_reg_1095;
wire   [0:0] or_ln779_1_fu_589_p2;
reg   [0:0] or_ln779_1_reg_1100;
wire   [15:0] j_2_fu_595_p2;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state4_pp0_stage0_iter0;
reg    ap_predicate_op129_read_state5;
reg    ap_block_state5_pp0_stage0_iter1;
wire    ap_block_state6_pp0_stage0_iter2;
wire    ap_block_state7_pp0_stage0_iter3;
wire    ap_block_state8_pp0_stage0_iter4;
wire    ap_block_state9_pp0_stage0_iter5;
wire    ap_block_state10_pp0_stage0_iter6;
wire    ap_block_state11_pp0_stage0_iter7;
wire    ap_block_state12_pp0_stage0_iter8;
wire    ap_block_state13_pp0_stage0_iter9;
wire    ap_block_state14_pp0_stage0_iter10;
wire    ap_block_state15_pp0_stage0_iter11;
wire    ap_block_state16_pp0_stage0_iter12;
wire    ap_block_state17_pp0_stage0_iter13;
wire    ap_block_state18_pp0_stage0_iter14;
wire    ap_block_state19_pp0_stage0_iter15;
wire    ap_block_state20_pp0_stage0_iter16;
reg    ap_block_state21_pp0_stage0_iter17;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln703_fu_605_p2;
reg   [0:0] icmp_ln703_reg_1109_pp0_iter1_reg;
reg   [0:0] icmp_ln703_reg_1109_pp0_iter2_reg;
reg   [0:0] icmp_ln703_reg_1109_pp0_iter3_reg;
wire  signed [15:0] ImagLocx_fu_610_p2;
reg  signed [15:0] ImagLocx_reg_1113;
wire   [0:0] icmp_ln633_fu_620_p2;
reg   [0:0] icmp_ln633_reg_1118_pp0_iter1_reg;
reg   [0:0] icmp_ln633_reg_1118_pp0_iter2_reg;
wire   [0:0] tmp_6_fu_625_p3;
reg   [0:0] tmp_6_reg_1123;
reg   [0:0] tmp_6_reg_1123_pp0_iter1_reg;
reg   [0:0] tmp_6_reg_1123_pp0_iter2_reg;
wire   [0:0] icmp_ln759_fu_633_p2;
reg   [0:0] icmp_ln759_reg_1127;
reg   [0:0] icmp_ln759_reg_1127_pp0_iter1_reg;
reg   [0:0] icmp_ln759_reg_1127_pp0_iter2_reg;
wire   [0:0] and_ln788_fu_654_p2;
reg   [0:0] and_ln788_reg_1134_pp0_iter1_reg;
reg   [0:0] and_ln788_reg_1134_pp0_iter2_reg;
reg   [0:0] and_ln788_reg_1134_pp0_iter3_reg;
reg   [0:0] and_ln788_reg_1134_pp0_iter4_reg;
reg   [0:0] and_ln788_reg_1134_pp0_iter5_reg;
reg   [0:0] and_ln788_reg_1134_pp0_iter6_reg;
reg   [0:0] and_ln788_reg_1134_pp0_iter7_reg;
reg   [0:0] and_ln788_reg_1134_pp0_iter8_reg;
reg   [0:0] and_ln788_reg_1134_pp0_iter9_reg;
reg   [0:0] and_ln788_reg_1134_pp0_iter10_reg;
reg   [0:0] and_ln788_reg_1134_pp0_iter11_reg;
reg   [0:0] and_ln788_reg_1134_pp0_iter12_reg;
reg   [0:0] and_ln788_reg_1134_pp0_iter13_reg;
reg   [0:0] and_ln788_reg_1134_pp0_iter14_reg;
reg   [0:0] and_ln788_reg_1134_pp0_iter15_reg;
reg   [0:0] tmp_5_reg_1138;
reg   [10:0] k_buf_0_V_addr_reg_1145;
reg   [10:0] k_buf_1_V_addr_reg_1151;
reg   [10:0] k_buf_1_V_addr_reg_1151_pp0_iter2_reg;
reg   [10:0] k_buf_2_V_addr_reg_1157;
reg   [10:0] k_buf_2_V_addr_reg_1157_pp0_iter2_reg;
reg   [23:0] tmp_V_reg_1163;
wire   [23:0] col_buf_V_0_fu_680_p3;
reg   [23:0] col_buf_V_0_reg_1168;
wire   [23:0] col_buf_V_1_fu_687_p3;
reg   [23:0] col_buf_V_1_reg_1177;
wire   [23:0] col_buf_V_2_fu_694_p3;
reg   [23:0] col_buf_V_2_reg_1186;
reg   [23:0] src_kernel_win_V_0_1_1_reg_1194;
reg   [23:0] src_kernel_win_V_1_1_1_reg_1200;
reg   [23:0] src_kernel_win_V_2_1_1_reg_1206;
wire   [23:0] grp_xFApplyFilter2D_15_15_3_3_3_s_fu_301_ap_return;
reg   [23:0] temp_V_1_reg_1242;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_flush_enable;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_condition_pp0_exit_iter3_state7;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
wire   [10:0] k_buf_0_V_address0;
reg    k_buf_0_V_ce0;
reg    k_buf_0_V_we0;
wire   [10:0] k_buf_0_V_address1;
reg    k_buf_0_V_ce1;
wire   [23:0] k_buf_0_V_q1;
wire   [10:0] k_buf_1_V_address0;
reg    k_buf_1_V_ce0;
reg    k_buf_1_V_we0;
wire   [10:0] k_buf_1_V_address1;
reg    k_buf_1_V_ce1;
wire   [23:0] k_buf_1_V_q1;
wire   [10:0] k_buf_2_V_address0;
reg    k_buf_2_V_ce0;
reg    k_buf_2_V_we0;
wire   [10:0] k_buf_2_V_address1;
reg    k_buf_2_V_ce1;
wire   [23:0] k_buf_2_V_q1;
reg    grp_xFApplyFilter2D_15_15_3_3_3_s_fu_301_ap_ce;
wire    ap_block_state4_pp0_stage0_iter0_ignore_call6;
reg    ap_block_state5_pp0_stage0_iter1_ignore_call6;
wire    ap_block_state6_pp0_stage0_iter2_ignore_call6;
wire    ap_block_state7_pp0_stage0_iter3_ignore_call6;
wire    ap_block_state8_pp0_stage0_iter4_ignore_call6;
wire    ap_block_state9_pp0_stage0_iter5_ignore_call6;
wire    ap_block_state10_pp0_stage0_iter6_ignore_call6;
wire    ap_block_state11_pp0_stage0_iter7_ignore_call6;
wire    ap_block_state12_pp0_stage0_iter8_ignore_call6;
wire    ap_block_state13_pp0_stage0_iter9_ignore_call6;
wire    ap_block_state14_pp0_stage0_iter10_ignore_call6;
wire    ap_block_state15_pp0_stage0_iter11_ignore_call6;
wire    ap_block_state16_pp0_stage0_iter12_ignore_call6;
wire    ap_block_state17_pp0_stage0_iter13_ignore_call6;
wire    ap_block_state18_pp0_stage0_iter14_ignore_call6;
wire    ap_block_state19_pp0_stage0_iter15_ignore_call6;
wire    ap_block_state20_pp0_stage0_iter16_ignore_call6;
reg    ap_block_state21_pp0_stage0_iter17_ignore_call6;
reg    ap_block_pp0_stage0_11001_ignoreCallOp177;
reg   [15:0] i_reg_279;
wire    ap_CS_fsm_state22;
wire   [63:0] idxprom_fu_673_p1;
reg   [23:0] src_kernel_win_V_0_1_fu_110;
wire   [23:0] src_kernel_win_V_0_0_1_fu_718_p3;
wire   [23:0] select_ln759_2_fu_777_p3;
reg   [23:0] src_kernel_win_V_0_2_fu_114;
reg   [23:0] src_kernel_win_V_2_2_fu_118;
reg   [23:0] src_kernel_win_V_1_1_fu_122;
wire   [23:0] select_ln779_fu_733_p3;
wire   [23:0] select_ln759_1_fu_770_p3;
reg   [23:0] src_kernel_win_V_1_2_fu_126;
reg   [23:0] src_kernel_win_V_2_1_fu_130;
wire   [23:0] src_kernel_win_V_2_0_1_fu_750_p5;
wire   [23:0] select_ln759_fu_763_p3;
reg    ap_block_pp0_stage0_01001;
wire   [1:0] empty_fu_349_p1;
wire   [16:0] zext_ln701_fu_371_p1;
wire  signed [15:0] y_fu_384_p2;
wire  signed [16:0] sext_ln770_fu_390_p1;
wire   [14:0] tmp_2_fu_419_p4;
wire  signed [16:0] sext_ln633_fu_456_p1;
wire  signed [16:0] sext_ln633_1_fu_476_p1;
wire   [0:0] rev_fu_490_p2;
wire   [0:0] brmerge_not_fu_502_p2;
wire   [1:0] ref_fu_495_p3;
wire   [1:0] select_ln633_fu_511_p3;
wire   [1:0] add_ln633_fu_523_p2;
wire   [1:0] select_ln633_1_fu_528_p3;
wire   [0:0] xor_ln779_fu_541_p2;
wire   [0:0] tmp_3_fu_546_p3;
wire   [1:0] xor_ln633_fu_559_p2;
wire   [1:0] select_ln633_2_fu_564_p3;
wire   [0:0] xor_ln779_1_fu_577_p2;
wire   [0:0] tmp_4_fu_582_p3;
wire   [16:0] zext_ln703_fu_601_p1;
wire  signed [16:0] sext_ln633_2_fu_616_p1;
wire   [14:0] tmp_7_fu_638_p4;
wire   [0:0] icmp_ln788_fu_648_p2;
wire   [15:0] x_fu_659_p3;
wire   [23:0] tmp_fu_710_p5;
wire   [23:0] src_kernel_win_V_1_0_1_fu_725_p5;
reg   [4:0] ap_NS_fsm;
reg    ap_block_pp0;
reg    ap_enable_operation_124;
reg    ap_enable_state5_pp0_iter1_stage0;
reg    ap_enable_operation_132;
reg    ap_enable_state6_pp0_iter2_stage0;
reg    ap_predicate_op138_store_state6;
reg    ap_enable_operation_138;
reg    ap_enable_operation_126;
reg    ap_enable_operation_134;
reg    ap_predicate_op166_store_state7;
reg    ap_enable_operation_166;
reg    ap_enable_state7_pp0_iter3_stage0;
reg    ap_enable_operation_128;
reg    ap_enable_operation_136;
reg    ap_predicate_op165_store_state7;
reg    ap_enable_operation_165;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_1022;
reg    ap_condition_1026;
reg    ap_condition_1019;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 5'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
end

filter2d_accel_xFFilter2Dkernel_9_9_1080_1920_15_15_1_9_9_1920_3_3_3_s_k_buf_0_V #(
    .DataWidth( 24 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
k_buf_0_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_V_address0),
    .ce0(k_buf_0_V_ce0),
    .we0(k_buf_0_V_we0),
    .d0(tmp_V_reg_1163),
    .address1(k_buf_0_V_address1),
    .ce1(k_buf_0_V_ce1),
    .q1(k_buf_0_V_q1)
);

filter2d_accel_xFFilter2Dkernel_9_9_1080_1920_15_15_1_9_9_1920_3_3_3_s_k_buf_0_V #(
    .DataWidth( 24 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
k_buf_1_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_1_V_address0),
    .ce0(k_buf_1_V_ce0),
    .we0(k_buf_1_V_we0),
    .d0(col_buf_V_0_reg_1168),
    .address1(k_buf_1_V_address1),
    .ce1(k_buf_1_V_ce1),
    .q1(k_buf_1_V_q1)
);

filter2d_accel_xFFilter2Dkernel_9_9_1080_1920_15_15_1_9_9_1920_3_3_3_s_k_buf_0_V #(
    .DataWidth( 24 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
k_buf_2_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_2_V_address0),
    .ce0(k_buf_2_V_ce0),
    .we0(k_buf_2_V_we0),
    .d0(col_buf_V_1_reg_1177),
    .address1(k_buf_2_V_address1),
    .ce1(k_buf_2_V_ce1),
    .q1(k_buf_2_V_q1)
);

filter2d_accel_xFApplyFilter2D_15_15_3_3_3_s grp_xFApplyFilter2D_15_15_3_3_3_s_fu_301(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .p_read(src_kernel_win_V_0_1_fu_110),
    .p_read1(src_kernel_win_V_0_1_1_reg_1194),
    .p_read2(src_kernel_win_V_0_2_fu_114),
    .p_read3(src_kernel_win_V_1_1_fu_122),
    .p_read4(src_kernel_win_V_1_1_1_reg_1200),
    .p_read5(src_kernel_win_V_1_2_fu_126),
    .p_read6(src_kernel_win_V_2_1_fu_130),
    .p_read7(src_kernel_win_V_2_1_1_reg_1206),
    .p_read8(src_kernel_win_V_2_2_fu_118),
    .p_read9(p_read),
    .p_read10(p_read1),
    .p_read11(p_read2),
    .p_read12(p_read3),
    .p_read13(p_read4),
    .p_read14(p_read5),
    .p_read15(p_read6),
    .p_read16(p_read7),
    .p_read17(p_read8),
    .shift(shift),
    .ap_return(grp_xFApplyFilter2D_15_15_3_3_3_s_fu_301_ap_return),
    .ap_ce(grp_xFApplyFilter2D_15_15_3_3_3_s_fu_301_ap_ce)
);

filter2d_accel_mux_32_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 24 ),
    .din2_WIDTH( 24 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 24 ))
mux_32_24_1_1_U79(
    .din0(col_buf_V_0_reg_1168),
    .din1(col_buf_V_1_reg_1177),
    .din2(col_buf_V_2_reg_1186),
    .din3(sub_ln782_reg_1080),
    .dout(tmp_fu_710_p5)
);

filter2d_accel_mux_32_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 24 ),
    .din2_WIDTH( 24 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 24 ))
mux_32_24_1_1_U80(
    .din0(col_buf_V_0_reg_1168),
    .din1(col_buf_V_1_reg_1177),
    .din2(col_buf_V_2_reg_1186),
    .din3(sub_ln782_1_reg_1085),
    .dout(src_kernel_win_V_1_0_1_fu_725_p5)
);

filter2d_accel_mux_32_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 24 ),
    .din2_WIDTH( 24 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 24 ))
mux_32_24_1_1_U81(
    .din0(col_buf_V_0_reg_1168),
    .din1(col_buf_V_1_reg_1177),
    .din2(col_buf_V_2_reg_1186),
    .din3(sub_ln782_2_reg_1095),
    .dout(src_kernel_win_V_2_0_1_fu_750_p5)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp0_flush_enable)) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end else if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_enable_reg_pp0_iter17 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter3_state7)) begin
                ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter2;
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        i_reg_279 <= i_2_reg_992;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        i_reg_279 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln703_fu_605_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        j_reg_290 <= j_2_fu_595_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        j_reg_290 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_1019)) begin
        if (((brmerge25_reg_1076 == 1'd1) & (icmp_ln633_reg_1118_pp0_iter2_reg == 1'd1))) begin
            src_kernel_win_V_0_1_fu_110 <= col_buf_V_0_reg_1168;
        end else if ((1'b1 == ap_condition_1026)) begin
            src_kernel_win_V_0_1_fu_110 <= 24'd0;
        end else if ((1'b1 == ap_condition_1022)) begin
            src_kernel_win_V_0_1_fu_110 <= select_ln759_2_fu_777_p3;
        end else if (((brmerge25_reg_1076 == 1'd0) & (tmp_1_reg_1017 == 1'd0))) begin
            src_kernel_win_V_0_1_fu_110 <= src_kernel_win_V_0_0_1_fu_718_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_1019)) begin
        if (((brmerge25_reg_1076 == 1'd1) & (icmp_ln633_reg_1118_pp0_iter2_reg == 1'd1))) begin
            src_kernel_win_V_1_1_fu_122 <= col_buf_V_1_reg_1177;
        end else if ((1'b1 == ap_condition_1026)) begin
            src_kernel_win_V_1_1_fu_122 <= 24'd0;
        end else if ((1'b1 == ap_condition_1022)) begin
            src_kernel_win_V_1_1_fu_122 <= select_ln759_1_fu_770_p3;
        end else if (((brmerge25_reg_1076 == 1'd0) & (tmp_1_reg_1017 == 1'd0))) begin
            src_kernel_win_V_1_1_fu_122 <= select_ln779_fu_733_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((brmerge25_reg_1076 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln633_reg_1118_pp0_iter2_reg == 1'd1) & (icmp_ln703_reg_1109_pp0_iter2_reg == 1'd1))) begin
        src_kernel_win_V_2_1_fu_130 <= col_buf_V_2_reg_1186;
    end else if (((brmerge25_reg_1076 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (tmp_6_reg_1123_pp0_iter2_reg == 1'd0) & (icmp_ln633_reg_1118_pp0_iter2_reg == 1'd0) & (icmp_ln703_reg_1109_pp0_iter2_reg == 1'd1))) begin
        src_kernel_win_V_2_1_fu_130 <= select_ln759_fu_763_p3;
    end else if ((((brmerge25_reg_1076 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (tmp_6_reg_1123_pp0_iter2_reg == 1'd1) & (icmp_ln633_reg_1118_pp0_iter2_reg == 1'd0) & (icmp_ln703_reg_1109_pp0_iter2_reg == 1'd1)) | ((brmerge25_reg_1076 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln703_reg_1109_pp0_iter2_reg == 1'd1) & (or_ln779_1_reg_1100 == 1'd1) & (tmp_1_reg_1017 == 1'd0)))) begin
        src_kernel_win_V_2_1_fu_130 <= 24'd0;
    end else if (((brmerge25_reg_1076 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln703_reg_1109_pp0_iter2_reg == 1'd1) & (or_ln779_1_reg_1100 == 1'd0) & (tmp_1_reg_1017 == 1'd0))) begin
        src_kernel_win_V_2_1_fu_130 <= src_kernel_win_V_2_0_1_fu_750_p5;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln703_fu_605_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ImagLocx_reg_1113 <= ImagLocx_fu_610_p2;
        and_ln788_reg_1134 <= and_ln788_fu_654_p2;
        icmp_ln633_reg_1118 <= icmp_ln633_fu_620_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        add_ln701_reg_987 <= add_ln701_fu_359_p2;
        heightloop_reg_965 <= heightloop_fu_333_p2;
        sub81_reg_981 <= sub81_fu_353_p2;
        widthloop_reg_976 <= widthloop_fu_343_p2;
        zext_ln689_reg_955[15 : 0] <= zext_ln689_fu_329_p1[15 : 0];
        zext_ln690_reg_970[15 : 0] <= zext_ln690_fu_339_p1[15 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln701_fu_375_p2 == 1'd1))) begin
        add_ln783_1_reg_1061 <= add_ln783_1_fu_470_p2;
        add_ln783_reg_1046 <= add_ln783_fu_450_p2;
        cmp180_reg_1012 <= cmp180_fu_400_p2;
        cmp76_reg_1007 <= cmp76_fu_394_p2;
        empty_35_reg_1000 <= empty_35_fu_380_p1;
        icmp_ln633_1_reg_1036 <= icmp_ln633_1_fu_440_p2;
        icmp_ln633_2_reg_1051 <= icmp_ln633_2_fu_460_p2;
        icmp_ln633_3_reg_1066 <= icmp_ln633_3_fu_480_p2;
        icmp_ln777_reg_1041 <= icmp_ln777_fu_445_p2;
        icmp_ln779_1_reg_1071 <= icmp_ln779_1_fu_485_p2;
        icmp_ln779_reg_1056 <= icmp_ln779_fu_465_p2;
        icmp_reg_1026 <= icmp_fu_429_p2;
        notrhs_reg_1031 <= notrhs_fu_435_p2;
        slt_reg_1021 <= slt_fu_414_p2;
        tmp_1_reg_1017 <= y_fu_384_p2[32'd15];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        and_ln788_reg_1134_pp0_iter10_reg <= and_ln788_reg_1134_pp0_iter9_reg;
        and_ln788_reg_1134_pp0_iter11_reg <= and_ln788_reg_1134_pp0_iter10_reg;
        and_ln788_reg_1134_pp0_iter12_reg <= and_ln788_reg_1134_pp0_iter11_reg;
        and_ln788_reg_1134_pp0_iter13_reg <= and_ln788_reg_1134_pp0_iter12_reg;
        and_ln788_reg_1134_pp0_iter14_reg <= and_ln788_reg_1134_pp0_iter13_reg;
        and_ln788_reg_1134_pp0_iter15_reg <= and_ln788_reg_1134_pp0_iter14_reg;
        and_ln788_reg_1134_pp0_iter16_reg <= and_ln788_reg_1134_pp0_iter15_reg;
        and_ln788_reg_1134_pp0_iter2_reg <= and_ln788_reg_1134_pp0_iter1_reg;
        and_ln788_reg_1134_pp0_iter3_reg <= and_ln788_reg_1134_pp0_iter2_reg;
        and_ln788_reg_1134_pp0_iter4_reg <= and_ln788_reg_1134_pp0_iter3_reg;
        and_ln788_reg_1134_pp0_iter5_reg <= and_ln788_reg_1134_pp0_iter4_reg;
        and_ln788_reg_1134_pp0_iter6_reg <= and_ln788_reg_1134_pp0_iter5_reg;
        and_ln788_reg_1134_pp0_iter7_reg <= and_ln788_reg_1134_pp0_iter6_reg;
        and_ln788_reg_1134_pp0_iter8_reg <= and_ln788_reg_1134_pp0_iter7_reg;
        and_ln788_reg_1134_pp0_iter9_reg <= and_ln788_reg_1134_pp0_iter8_reg;
        icmp_ln633_reg_1118_pp0_iter2_reg <= icmp_ln633_reg_1118_pp0_iter1_reg;
        icmp_ln703_reg_1109_pp0_iter2_reg <= icmp_ln703_reg_1109_pp0_iter1_reg;
        icmp_ln703_reg_1109_pp0_iter3_reg <= icmp_ln703_reg_1109_pp0_iter2_reg;
        icmp_ln759_reg_1127_pp0_iter2_reg <= icmp_ln759_reg_1127_pp0_iter1_reg;
        k_buf_1_V_addr_reg_1151_pp0_iter2_reg <= k_buf_1_V_addr_reg_1151;
        k_buf_2_V_addr_reg_1157_pp0_iter2_reg <= k_buf_2_V_addr_reg_1157;
        src_kernel_win_V_0_1_1_reg_1194 <= src_kernel_win_V_0_1_fu_110;
        src_kernel_win_V_1_1_1_reg_1200 <= src_kernel_win_V_1_1_fu_122;
        src_kernel_win_V_2_1_1_reg_1206 <= src_kernel_win_V_2_1_fu_130;
        tmp_6_reg_1123_pp0_iter2_reg <= tmp_6_reg_1123_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        and_ln788_reg_1134_pp0_iter1_reg <= and_ln788_reg_1134;
        icmp_ln633_reg_1118_pp0_iter1_reg <= icmp_ln633_reg_1118;
        icmp_ln703_reg_1109 <= icmp_ln703_fu_605_p2;
        icmp_ln703_reg_1109_pp0_iter1_reg <= icmp_ln703_reg_1109;
        icmp_ln759_reg_1127_pp0_iter1_reg <= icmp_ln759_reg_1127;
        tmp_6_reg_1123_pp0_iter1_reg <= tmp_6_reg_1123;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        brmerge25_reg_1076 <= brmerge25_fu_506_p2;
        or_ln779_1_reg_1100 <= or_ln779_1_fu_589_p2;
        or_ln779_reg_1090 <= or_ln779_fu_553_p2;
        sub_ln782_1_reg_1085 <= sub_ln782_1_fu_535_p2;
        sub_ln782_2_reg_1095 <= sub_ln782_2_fu_571_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln703_reg_1109_pp0_iter1_reg == 1'd1))) begin
        col_buf_V_0_reg_1168 <= col_buf_V_0_fu_680_p3;
        col_buf_V_1_reg_1177 <= col_buf_V_1_fu_687_p3;
        col_buf_V_2_reg_1186 <= col_buf_V_2_fu_694_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_2_reg_992 <= i_2_fu_365_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((brmerge25_reg_1076 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (tmp_6_fu_625_p3 == 1'd0) & (icmp_ln633_fu_620_p2 == 1'd0) & (icmp_ln703_fu_605_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln759_reg_1127 <= icmp_ln759_fu_633_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln703_reg_1109 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        k_buf_0_V_addr_reg_1145 <= idxprom_fu_673_p1;
        k_buf_1_V_addr_reg_1151 <= idxprom_fu_673_p1;
        k_buf_2_V_addr_reg_1157 <= idxprom_fu_673_p1;
        tmp_5_reg_1138 <= x_fu_659_p3[32'd15];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (icmp_ln703_reg_1109_pp0_iter3_reg == 1'd1))) begin
        src_kernel_win_V_0_2_fu_114 <= src_kernel_win_V_0_1_1_reg_1194;
        src_kernel_win_V_1_2_fu_126 <= src_kernel_win_V_1_1_1_reg_1200;
        src_kernel_win_V_2_2_fu_118 <= src_kernel_win_V_2_1_1_reg_1206;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln777_reg_1041 == 1'd1))) begin
        sub_ln782_reg_1080 <= sub_ln782_fu_517_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln788_reg_1134_pp0_iter15_reg) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        temp_V_1_reg_1242 <= grp_xFApplyFilter2D_15_15_3_3_3_s_fu_301_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((brmerge25_reg_1076 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln633_fu_620_p2 == 1'd0) & (icmp_ln703_fu_605_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_6_reg_1123 <= ImagLocx_fu_610_p2[32'd15];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op129_read_state5 == 1'b1))) begin
        tmp_V_reg_1163 <= img_in_419_dout;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b0))) begin
        ap_condition_pp0_exit_iter3_state7 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter3_state7 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln703_fu_605_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_pp0_flush_enable = 1'b1;
    end else begin
        ap_condition_pp0_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0)) | ((1'b1 == ap_CS_fsm_state2) & (icmp_ln701_fu_375_p2 == 1'd0)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln701_fu_375_p2 == 1'd0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp177) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_xFApplyFilter2D_15_15_3_3_3_s_fu_301_ap_ce = 1'b1;
    end else begin
        grp_xFApplyFilter2D_15_15_3_3_3_s_fu_301_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln633_reg_1118 == 1'd1) & (brmerge25_reg_1076 == 1'd1) & (icmp_ln703_reg_1109 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        img_in_419_blk_n = img_in_419_empty_n;
    end else begin
        img_in_419_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op129_read_state5 == 1'b1))) begin
        img_in_419_read = 1'b1;
    end else begin
        img_in_419_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter17 == 1'b1) & (1'd1 == and_ln788_reg_1134_pp0_iter16_reg) & (1'b0 == ap_block_pp0_stage0))) begin
        img_out_420_blk_n = img_out_420_full_n;
    end else begin
        img_out_420_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter17 == 1'b1) & (1'd1 == and_ln788_reg_1134_pp0_iter16_reg) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        img_out_420_write = 1'b1;
    end else begin
        img_out_420_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        k_buf_0_V_ce0 = 1'b1;
    end else begin
        k_buf_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        k_buf_0_V_ce1 = 1'b1;
    end else begin
        k_buf_0_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((brmerge25_reg_1076 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln633_reg_1118_pp0_iter1_reg == 1'd1) & (icmp_ln703_reg_1109_pp0_iter1_reg == 1'd1))) begin
        k_buf_0_V_we0 = 1'b1;
    end else begin
        k_buf_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        k_buf_1_V_ce0 = 1'b1;
    end else begin
        k_buf_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        k_buf_1_V_ce1 = 1'b1;
    end else begin
        k_buf_1_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((brmerge25_reg_1076 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln633_reg_1118_pp0_iter2_reg == 1'd1) & (icmp_ln703_reg_1109_pp0_iter2_reg == 1'd1))) begin
        k_buf_1_V_we0 = 1'b1;
    end else begin
        k_buf_1_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        k_buf_2_V_ce0 = 1'b1;
    end else begin
        k_buf_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        k_buf_2_V_ce1 = 1'b1;
    end else begin
        k_buf_2_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((brmerge25_reg_1076 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln633_reg_1118_pp0_iter2_reg == 1'd1) & (icmp_ln703_reg_1109_pp0_iter2_reg == 1'd1))) begin
        k_buf_2_V_we0 = 1'b1;
    end else begin
        k_buf_2_V_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln701_fu_375_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b0)) & ~((ap_enable_reg_pp0_iter17 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter16 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter17 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter16 == 1'b0)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ImagLocx_fu_610_p2 = ($signed(j_reg_290) + $signed(16'd65535));

assign add_ln633_fu_523_p2 = ($signed(empty_35_reg_1000) + $signed(2'd3));

assign add_ln701_fu_359_p2 = ($signed(empty_fu_349_p1) + $signed(2'd3));

assign add_ln783_1_fu_470_p2 = ($signed(i_reg_279) + $signed(16'd65530));

assign add_ln783_fu_450_p2 = ($signed(i_reg_279) + $signed(16'd65531));

assign and_ln788_fu_654_p2 = (icmp_ln788_fu_648_p2 & cmp180_reg_1012);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

always @ (*) begin
    ap_block_pp0 = ((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b1 == ap_block_pp0_stage0_subdone));
end

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_enable_reg_pp0_iter17 == 1'b1) & (1'd1 == and_ln788_reg_1134_pp0_iter16_reg) & (img_out_420_full_n == 1'b0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (img_in_419_empty_n == 1'b0) & (ap_predicate_op129_read_state5 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter17 == 1'b1) & (1'd1 == and_ln788_reg_1134_pp0_iter16_reg) & (img_out_420_full_n == 1'b0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (img_in_419_empty_n == 1'b0) & (ap_predicate_op129_read_state5 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_ignoreCallOp177 = (((ap_enable_reg_pp0_iter17 == 1'b1) & (1'd1 == and_ln788_reg_1134_pp0_iter16_reg) & (img_out_420_full_n == 1'b0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (img_in_419_empty_n == 1'b0) & (ap_predicate_op129_read_state5 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter17 == 1'b1) & (1'd1 == and_ln788_reg_1134_pp0_iter16_reg) & (img_out_420_full_n == 1'b0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (img_in_419_empty_n == 1'b0) & (ap_predicate_op129_read_state5 == 1'b1)));
end

assign ap_block_state10_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter6_ignore_call6 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter7_ignore_call6 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter8_ignore_call6 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter9_ignore_call6 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter10_ignore_call6 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter11_ignore_call6 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter12_ignore_call6 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter13_ignore_call6 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter14_ignore_call6 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter15_ignore_call6 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter16_ignore_call6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state21_pp0_stage0_iter17 = ((1'd1 == and_ln788_reg_1134_pp0_iter16_reg) & (img_out_420_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state21_pp0_stage0_iter17_ignore_call6 = ((1'd1 == and_ln788_reg_1134_pp0_iter16_reg) & (img_out_420_full_n == 1'b0));
end

assign ap_block_state4_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter0_ignore_call6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state5_pp0_stage0_iter1 = ((img_in_419_empty_n == 1'b0) & (ap_predicate_op129_read_state5 == 1'b1));
end

always @ (*) begin
    ap_block_state5_pp0_stage0_iter1_ignore_call6 = ((img_in_419_empty_n == 1'b0) & (ap_predicate_op129_read_state5 == 1'b1));
end

assign ap_block_state6_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter2_ignore_call6 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter3_ignore_call6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter4_ignore_call6 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter5_ignore_call6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_1019 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln703_reg_1109_pp0_iter2_reg == 1'd1));
end

always @ (*) begin
    ap_condition_1022 = ((brmerge25_reg_1076 == 1'd1) & (tmp_6_reg_1123_pp0_iter2_reg == 1'd0) & (icmp_ln633_reg_1118_pp0_iter2_reg == 1'd0));
end

always @ (*) begin
    ap_condition_1026 = ((brmerge25_reg_1076 == 1'd1) & (tmp_6_reg_1123_pp0_iter2_reg == 1'd1) & (icmp_ln633_reg_1118_pp0_iter2_reg == 1'd0));
end

always @ (*) begin
    ap_enable_operation_124 = (icmp_ln703_reg_1109 == 1'd1);
end

always @ (*) begin
    ap_enable_operation_126 = (icmp_ln703_reg_1109 == 1'd1);
end

always @ (*) begin
    ap_enable_operation_128 = (icmp_ln703_reg_1109 == 1'd1);
end

always @ (*) begin
    ap_enable_operation_132 = (icmp_ln703_reg_1109_pp0_iter1_reg == 1'd1);
end

always @ (*) begin
    ap_enable_operation_134 = (icmp_ln703_reg_1109_pp0_iter1_reg == 1'd1);
end

always @ (*) begin
    ap_enable_operation_136 = (icmp_ln703_reg_1109_pp0_iter1_reg == 1'd1);
end

always @ (*) begin
    ap_enable_operation_138 = (ap_predicate_op138_store_state6 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_165 = (ap_predicate_op165_store_state7 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_166 = (ap_predicate_op166_store_state7 == 1'b1);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_enable_state5_pp0_iter1_stage0 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_state6_pp0_iter2_stage0 = ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_state7_pp0_iter3_stage0 = ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_predicate_op129_read_state5 = ((icmp_ln633_reg_1118 == 1'd1) & (brmerge25_reg_1076 == 1'd1) & (icmp_ln703_reg_1109 == 1'd1));
end

always @ (*) begin
    ap_predicate_op138_store_state6 = ((brmerge25_reg_1076 == 1'd1) & (icmp_ln633_reg_1118_pp0_iter1_reg == 1'd1) & (icmp_ln703_reg_1109_pp0_iter1_reg == 1'd1));
end

always @ (*) begin
    ap_predicate_op165_store_state7 = ((brmerge25_reg_1076 == 1'd1) & (icmp_ln633_reg_1118_pp0_iter2_reg == 1'd1) & (icmp_ln703_reg_1109_pp0_iter2_reg == 1'd1));
end

always @ (*) begin
    ap_predicate_op166_store_state7 = ((brmerge25_reg_1076 == 1'd1) & (icmp_ln633_reg_1118_pp0_iter2_reg == 1'd1) & (icmp_ln703_reg_1109_pp0_iter2_reg == 1'd1));
end

assign brmerge25_fu_506_p2 = (cmp76_reg_1007 | brmerge_not_fu_502_p2);

assign brmerge_not_fu_502_p2 = (notrhs_reg_1031 & icmp_reg_1026);

assign cmp180_fu_400_p2 = ((i_reg_279 > 16'd4) ? 1'b1 : 1'b0);

assign cmp76_fu_394_p2 = (($signed(y_fu_384_p2) < $signed(16'd65535)) ? 1'b1 : 1'b0);

assign col_buf_V_0_fu_680_p3 = ((tmp_5_reg_1138[0:0] == 1'b1) ? 24'd0 : k_buf_0_V_q1);

assign col_buf_V_1_fu_687_p3 = ((tmp_5_reg_1138[0:0] == 1'b1) ? 24'd0 : k_buf_1_V_q1);

assign col_buf_V_2_fu_694_p3 = ((tmp_5_reg_1138[0:0] == 1'b1) ? 24'd0 : k_buf_2_V_q1);

assign empty_35_fu_380_p1 = i_reg_279[1:0];

assign empty_fu_349_p1 = rows[1:0];

assign heightloop_fu_333_p2 = (zext_ln689_fu_329_p1 + 17'd5);

assign i_2_fu_365_p2 = (i_reg_279 + 16'd1);

assign icmp_fu_429_p2 = (($signed(tmp_2_fu_419_p4) > $signed(15'd0)) ? 1'b1 : 1'b0);

assign icmp_ln633_1_fu_440_p2 = ((sext_ln770_fu_390_p1 < zext_ln689_reg_955) ? 1'b1 : 1'b0);

assign icmp_ln633_2_fu_460_p2 = ((sext_ln633_fu_456_p1 < zext_ln689_reg_955) ? 1'b1 : 1'b0);

assign icmp_ln633_3_fu_480_p2 = ((sext_ln633_1_fu_476_p1 < zext_ln689_reg_955) ? 1'b1 : 1'b0);

assign icmp_ln633_fu_620_p2 = ((sext_ln633_2_fu_616_p1 < zext_ln690_reg_970) ? 1'b1 : 1'b0);

assign icmp_ln701_fu_375_p2 = ((zext_ln701_fu_371_p1 < heightloop_reg_965) ? 1'b1 : 1'b0);

assign icmp_ln703_fu_605_p2 = ((zext_ln703_fu_601_p1 < widthloop_reg_976) ? 1'b1 : 1'b0);

assign icmp_ln759_fu_633_p2 = (($signed(sext_ln633_2_fu_616_p1) < $signed(zext_ln690_reg_970)) ? 1'b1 : 1'b0);

assign icmp_ln777_fu_445_p2 = (($signed(sext_ln770_fu_390_p1) < $signed(zext_ln689_reg_955)) ? 1'b1 : 1'b0);

assign icmp_ln779_1_fu_485_p2 = (($signed(sext_ln633_1_fu_476_p1) < $signed(zext_ln689_reg_955)) ? 1'b1 : 1'b0);

assign icmp_ln779_fu_465_p2 = (($signed(sext_ln633_fu_456_p1) < $signed(zext_ln689_reg_955)) ? 1'b1 : 1'b0);

assign icmp_ln788_fu_648_p2 = ((tmp_7_fu_638_p4 != 15'd0) ? 1'b1 : 1'b0);

assign idxprom_fu_673_p1 = x_fu_659_p3;

assign img_out_420_din = temp_V_1_reg_1242;

assign j_2_fu_595_p2 = (j_reg_290 + 16'd1);

assign k_buf_0_V_address0 = k_buf_0_V_addr_reg_1145;

assign k_buf_0_V_address1 = idxprom_fu_673_p1;

assign k_buf_1_V_address0 = k_buf_1_V_addr_reg_1151_pp0_iter2_reg;

assign k_buf_1_V_address1 = idxprom_fu_673_p1;

assign k_buf_2_V_address0 = k_buf_2_V_addr_reg_1157_pp0_iter2_reg;

assign k_buf_2_V_address1 = idxprom_fu_673_p1;

assign notrhs_fu_435_p2 = (($signed(sext_ln770_fu_390_p1) < $signed(sub81_reg_981)) ? 1'b1 : 1'b0);

assign or_ln779_1_fu_589_p2 = (xor_ln779_1_fu_577_p2 | tmp_4_fu_582_p3);

assign or_ln779_fu_553_p2 = (xor_ln779_fu_541_p2 | tmp_3_fu_546_p3);

assign ref_fu_495_p3 = ((rev_fu_490_p2[0:0] == 1'b1) ? add_ln701_reg_987 : 2'd2);

assign rev_fu_490_p2 = (slt_reg_1021 ^ 1'd1);

assign select_ln633_1_fu_528_p3 = ((icmp_ln633_2_reg_1051[0:0] == 1'b1) ? add_ln633_fu_523_p2 : 2'd3);

assign select_ln633_2_fu_564_p3 = ((icmp_ln633_3_reg_1066[0:0] == 1'b1) ? xor_ln633_fu_559_p2 : 2'd3);

assign select_ln633_fu_511_p3 = ((icmp_ln633_1_reg_1036[0:0] == 1'b1) ? empty_35_reg_1000 : 2'd3);

assign select_ln759_1_fu_770_p3 = ((icmp_ln759_reg_1127_pp0_iter2_reg[0:0] == 1'b1) ? src_kernel_win_V_1_1_fu_122 : 24'd0);

assign select_ln759_2_fu_777_p3 = ((icmp_ln759_reg_1127_pp0_iter2_reg[0:0] == 1'b1) ? src_kernel_win_V_0_1_fu_110 : 24'd0);

assign select_ln759_fu_763_p3 = ((icmp_ln759_reg_1127_pp0_iter2_reg[0:0] == 1'b1) ? src_kernel_win_V_2_1_fu_130 : 24'd0);

assign select_ln779_fu_733_p3 = ((or_ln779_reg_1090[0:0] == 1'b1) ? 24'd0 : src_kernel_win_V_1_0_1_fu_725_p5);

assign sext_ln633_1_fu_476_p1 = add_ln783_1_fu_470_p2;

assign sext_ln633_2_fu_616_p1 = ImagLocx_fu_610_p2;

assign sext_ln633_fu_456_p1 = add_ln783_fu_450_p2;

assign sext_ln770_fu_390_p1 = y_fu_384_p2;

assign slt_fu_414_p2 = (($signed(sext_ln770_fu_390_p1) < $signed(sub81_reg_981)) ? 1'b1 : 1'b0);

assign src_kernel_win_V_0_0_1_fu_718_p3 = ((icmp_ln777_reg_1041[0:0] == 1'b1) ? tmp_fu_710_p5 : 24'd0);

assign sub81_fu_353_p2 = ($signed(zext_ln689_fu_329_p1) + $signed(17'd131071));

assign sub_ln782_1_fu_535_p2 = (ref_fu_495_p3 - select_ln633_1_fu_528_p3);

assign sub_ln782_2_fu_571_p2 = (ref_fu_495_p3 - select_ln633_2_fu_564_p3);

assign sub_ln782_fu_517_p2 = (ref_fu_495_p3 - select_ln633_fu_511_p3);

assign tmp_2_fu_419_p4 = {{y_fu_384_p2[15:1]}};

assign tmp_3_fu_546_p3 = add_ln783_reg_1046[32'd15];

assign tmp_4_fu_582_p3 = add_ln783_1_reg_1061[32'd15];

assign tmp_6_fu_625_p3 = ImagLocx_fu_610_p2[32'd15];

assign tmp_7_fu_638_p4 = {{j_reg_290[15:1]}};

assign widthloop_fu_343_p2 = (zext_ln690_fu_339_p1 + 17'd2);

assign x_fu_659_p3 = ((icmp_ln633_reg_1118[0:0] == 1'b1) ? ImagLocx_reg_1113 : 16'd65535);

assign xor_ln633_fu_559_p2 = (empty_35_reg_1000 ^ 2'd2);

assign xor_ln779_1_fu_577_p2 = (icmp_ln779_1_reg_1071 ^ 1'd1);

assign xor_ln779_fu_541_p2 = (icmp_ln779_reg_1056 ^ 1'd1);

assign y_fu_384_p2 = ($signed(i_reg_279) + $signed(16'd65532));

assign zext_ln689_fu_329_p1 = rows;

assign zext_ln690_fu_339_p1 = cols;

assign zext_ln701_fu_371_p1 = i_reg_279;

assign zext_ln703_fu_601_p1 = j_reg_290;

always @ (posedge ap_clk) begin
    zext_ln689_reg_955[16] <= 1'b0;
    zext_ln690_reg_970[16] <= 1'b0;
end

endmodule //filter2d_accel_xFFilter2Dkernel_9_9_1080_1920_15_15_1_9_9_1920_3_3_3_s
