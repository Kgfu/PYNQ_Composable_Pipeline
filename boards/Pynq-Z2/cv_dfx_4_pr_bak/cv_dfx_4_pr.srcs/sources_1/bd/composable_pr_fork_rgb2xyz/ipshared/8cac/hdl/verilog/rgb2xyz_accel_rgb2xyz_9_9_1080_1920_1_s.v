// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2.2 (64-bit)
// Version: 2020.2.2
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module rgb2xyz_accel_rgb2xyz_9_9_1080_1920_1_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        img_in_443_dout,
        img_in_443_empty_n,
        img_in_443_read,
        img_out_444_din,
        img_out_444_full_n,
        img_out_444_write,
        p_src_rows_dout,
        p_src_rows_empty_n,
        p_src_rows_read,
        p_src_cols_dout,
        p_src_cols_empty_n,
        p_src_cols_read
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_state2 = 4'd2;
parameter    ap_ST_fsm_pp0_stage0 = 4'd4;
parameter    ap_ST_fsm_state12 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [23:0] img_in_443_dout;
input   img_in_443_empty_n;
output   img_in_443_read;
output  [23:0] img_out_444_din;
input   img_out_444_full_n;
output   img_out_444_write;
input  [31:0] p_src_rows_dout;
input   p_src_rows_empty_n;
output   p_src_rows_read;
input  [31:0] p_src_cols_dout;
input   p_src_cols_empty_n;
output   p_src_cols_read;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg img_in_443_read;
reg img_out_444_write;
reg p_src_rows_read;
reg p_src_cols_read;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    img_in_443_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln5009_reg_402;
reg    img_out_444_blk_n;
reg    ap_enable_reg_pp0_iter8;
reg   [0:0] icmp_ln5009_reg_402_pp0_iter7_reg;
reg    p_src_rows_blk_n;
reg    p_src_cols_blk_n;
reg   [15:0] j_V_reg_128;
wire   [15:0] height_fu_139_p1;
reg   [15:0] height_reg_378;
wire   [15:0] width_fu_143_p1;
reg   [15:0] width_reg_383;
wire   [12:0] i_V_1_fu_147_p2;
reg   [12:0] i_V_1_reg_388;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln878_fu_157_p2;
wire   [15:0] add_ln878_fu_162_p2;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state3_pp0_stage0_iter0;
reg    ap_block_state4_pp0_stage0_iter1;
wire    ap_block_state5_pp0_stage0_iter2;
wire    ap_block_state6_pp0_stage0_iter3;
wire    ap_block_state7_pp0_stage0_iter4;
wire    ap_block_state8_pp0_stage0_iter5;
wire    ap_block_state9_pp0_stage0_iter6;
wire    ap_block_state10_pp0_stage0_iter7;
reg    ap_block_state11_pp0_stage0_iter8;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln5009_fu_168_p2;
reg   [0:0] icmp_ln5009_reg_402_pp0_iter1_reg;
reg   [0:0] icmp_ln5009_reg_402_pp0_iter2_reg;
reg   [0:0] icmp_ln5009_reg_402_pp0_iter3_reg;
reg   [0:0] icmp_ln5009_reg_402_pp0_iter4_reg;
reg   [0:0] icmp_ln5009_reg_402_pp0_iter5_reg;
reg   [0:0] icmp_ln5009_reg_402_pp0_iter6_reg;
wire   [7:0] p_fu_173_p1;
reg   [7:0] p_reg_406;
reg   [7:0] p_reg_406_pp0_iter2_reg;
wire   [7:0] p_1_fu_177_p4;
reg   [7:0] p_1_reg_411;
reg   [7:0] p_1_reg_411_pp0_iter2_reg;
reg   [7:0] p_1_reg_411_pp0_iter3_reg;
reg   [7:0] p_2_reg_417;
reg   [7:0] p_2_reg_417_pp0_iter2_reg;
wire   [21:0] grp_fu_311_p2;
reg   [21:0] mul_ln870_reg_459;
wire   [20:0] grp_fu_317_p2;
reg   [20:0] mul_ln879_reg_474;
wire   [19:0] grp_fu_323_p2;
reg   [19:0] mul_ln888_1_reg_479;
wire   [22:0] grp_fu_329_p3;
reg    ap_enable_reg_pp0_iter6;
wire   [22:0] grp_fu_354_p2;
reg   [22:0] mul_ln888_2_reg_509;
wire   [20:0] grp_fu_346_p3;
reg   [20:0] add_ln888_reg_515;
reg   [7:0] Value_uchar_4_reg_521;
reg   [7:0] Value_uchar_5_reg_526;
wire   [7:0] Value_uchar_6_fu_295_p3;
reg   [7:0] Value_uchar_6_reg_531;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state3;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter7;
reg   [12:0] i_V_reg_117;
reg    ap_block_state1;
wire    ap_CS_fsm_state12;
reg    ap_block_pp0_stage0_01001;
wire   [15:0] zext_ln878_fu_153_p1;
wire   [21:0] grp_fu_337_p3;
wire   [22:0] grp_fu_360_p3;
wire   [22:0] grp_fu_369_p3;
wire   [23:0] zext_ln888_2_fu_257_p1;
wire   [23:0] zext_ln888_3_fu_260_p1;
wire   [22:0] zext_ln888_4_fu_263_p1;
wire   [23:0] Z_fu_266_p2;
(* use_dsp48 = "no" *) wire   [22:0] add_ln888_2_fu_272_p2;
wire   [0:0] tmp_fu_277_p3;
wire   [7:0] Value_uchar_fu_285_p4;
wire   [7:0] grp_fu_311_p0;
wire   [14:0] grp_fu_311_p1;
wire   [7:0] grp_fu_317_p0;
wire   [13:0] grp_fu_317_p1;
wire   [7:0] grp_fu_323_p0;
wire   [12:0] grp_fu_323_p1;
wire   [7:0] grp_fu_329_p0;
wire   [13:0] grp_fu_329_p1;
wire   [21:0] grp_fu_329_p2;
wire   [7:0] grp_fu_337_p0;
wire   [12:0] grp_fu_337_p1;
wire   [20:0] grp_fu_337_p2;
wire   [7:0] grp_fu_346_p0;
wire   [10:0] grp_fu_346_p1;
wire   [19:0] grp_fu_346_p2;
wire   [7:0] grp_fu_354_p0;
wire   [15:0] grp_fu_354_p1;
wire   [7:0] grp_fu_360_p0;
wire   [14:0] grp_fu_360_p1;
wire   [7:0] grp_fu_369_p0;
wire   [15:0] grp_fu_369_p1;
wire   [21:0] grp_fu_369_p2;
reg    grp_fu_311_ce;
reg    grp_fu_317_ce;
reg    grp_fu_323_ce;
reg    grp_fu_329_ce;
reg    grp_fu_337_ce;
reg    grp_fu_346_ce;
reg    grp_fu_354_ce;
reg    grp_fu_360_ce;
reg    grp_fu_369_ce;
reg   [3:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [21:0] grp_fu_311_p00;
wire   [20:0] grp_fu_317_p00;
wire   [19:0] grp_fu_323_p00;
wire   [20:0] grp_fu_329_p00;
wire   [22:0] grp_fu_329_p20;
wire   [19:0] grp_fu_337_p00;
wire   [21:0] grp_fu_337_p20;
wire   [17:0] grp_fu_346_p00;
wire   [20:0] grp_fu_346_p20;
wire   [22:0] grp_fu_354_p00;
wire   [21:0] grp_fu_360_p00;
wire   [22:0] grp_fu_369_p00;
wire   [22:0] grp_fu_369_p20;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
end

rgb2xyz_accel_mul_mul_8ns_15ns_22_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 22 ))
mul_mul_8ns_15ns_22_4_1_U26(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_311_p0),
    .din1(grp_fu_311_p1),
    .ce(grp_fu_311_ce),
    .dout(grp_fu_311_p2)
);

rgb2xyz_accel_mul_mul_8ns_14ns_21_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 21 ))
mul_mul_8ns_14ns_21_4_1_U27(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_317_p0),
    .din1(grp_fu_317_p1),
    .ce(grp_fu_317_ce),
    .dout(grp_fu_317_p2)
);

rgb2xyz_accel_mul_mul_8ns_13ns_20_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 20 ))
mul_mul_8ns_13ns_20_4_1_U28(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_323_p0),
    .din1(grp_fu_323_p1),
    .ce(grp_fu_323_ce),
    .dout(grp_fu_323_p2)
);

rgb2xyz_accel_mac_muladd_8ns_14ns_22ns_23_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 14 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 23 ))
mac_muladd_8ns_14ns_22ns_23_4_1_U29(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_329_p0),
    .din1(grp_fu_329_p1),
    .din2(grp_fu_329_p2),
    .ce(grp_fu_329_ce),
    .dout(grp_fu_329_p3)
);

rgb2xyz_accel_mac_muladd_8ns_13ns_21ns_22_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 21 ),
    .dout_WIDTH( 22 ))
mac_muladd_8ns_13ns_21ns_22_4_1_U30(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_337_p0),
    .din1(grp_fu_337_p1),
    .din2(grp_fu_337_p2),
    .ce(grp_fu_337_ce),
    .dout(grp_fu_337_p3)
);

rgb2xyz_accel_mac_muladd_8ns_11ns_20ns_21_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 11 ),
    .din2_WIDTH( 20 ),
    .dout_WIDTH( 21 ))
mac_muladd_8ns_11ns_20ns_21_4_1_U31(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_346_p0),
    .din1(grp_fu_346_p1),
    .din2(grp_fu_346_p2),
    .ce(grp_fu_346_ce),
    .dout(grp_fu_346_p3)
);

rgb2xyz_accel_mul_mul_8ns_16ns_23_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 23 ))
mul_mul_8ns_16ns_23_4_1_U32(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_354_p0),
    .din1(grp_fu_354_p1),
    .ce(grp_fu_354_ce),
    .dout(grp_fu_354_p2)
);

rgb2xyz_accel_mac_muladd_8ns_15ns_23ns_23_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 15 ),
    .din2_WIDTH( 23 ),
    .dout_WIDTH( 23 ))
mac_muladd_8ns_15ns_23ns_23_4_1_U33(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_360_p0),
    .din1(grp_fu_360_p1),
    .din2(grp_fu_329_p3),
    .ce(grp_fu_360_ce),
    .dout(grp_fu_360_p3)
);

rgb2xyz_accel_mac_muladd_8ns_16ns_22ns_23_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 23 ))
mac_muladd_8ns_16ns_22ns_23_4_1_U34(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_369_p0),
    .din1(grp_fu_369_p1),
    .din2(grp_fu_369_p2),
    .ce(grp_fu_369_ce),
    .dout(grp_fu_369_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((icmp_ln878_fu_157_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state3))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((icmp_ln878_fu_157_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state3)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state3);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end else if (((icmp_ln878_fu_157_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter8 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        i_V_reg_117 <= i_V_1_reg_388;
    end else if ((~((ap_start == 1'b0) | (p_src_cols_empty_n == 1'b0) | (p_src_rows_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        i_V_reg_117 <= 13'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln5009_fu_168_p2 == 1'd0))) begin
        j_V_reg_128 <= add_ln878_fu_162_p2;
    end else if (((icmp_ln878_fu_157_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        j_V_reg_128 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln5009_reg_402_pp0_iter6_reg == 1'd0))) begin
        Value_uchar_4_reg_521 <= {{grp_fu_360_p3[22:15]}};
        Value_uchar_5_reg_526 <= {{grp_fu_369_p3[22:15]}};
        Value_uchar_6_reg_531 <= Value_uchar_6_fu_295_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (icmp_ln5009_reg_402_pp0_iter5_reg == 1'd0))) begin
        add_ln888_reg_515 <= grp_fu_346_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        height_reg_378 <= height_fu_139_p1;
        width_reg_383 <= width_fu_143_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_V_1_reg_388 <= i_V_1_fu_147_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln5009_reg_402 <= icmp_ln5009_fu_168_p2;
        icmp_ln5009_reg_402_pp0_iter1_reg <= icmp_ln5009_reg_402;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        icmp_ln5009_reg_402_pp0_iter2_reg <= icmp_ln5009_reg_402_pp0_iter1_reg;
        icmp_ln5009_reg_402_pp0_iter3_reg <= icmp_ln5009_reg_402_pp0_iter2_reg;
        icmp_ln5009_reg_402_pp0_iter4_reg <= icmp_ln5009_reg_402_pp0_iter3_reg;
        icmp_ln5009_reg_402_pp0_iter5_reg <= icmp_ln5009_reg_402_pp0_iter4_reg;
        icmp_ln5009_reg_402_pp0_iter6_reg <= icmp_ln5009_reg_402_pp0_iter5_reg;
        icmp_ln5009_reg_402_pp0_iter7_reg <= icmp_ln5009_reg_402_pp0_iter6_reg;
        p_1_reg_411_pp0_iter2_reg <= p_1_reg_411;
        p_1_reg_411_pp0_iter3_reg <= p_1_reg_411_pp0_iter2_reg;
        p_2_reg_417_pp0_iter2_reg <= p_2_reg_417;
        p_reg_406_pp0_iter2_reg <= p_reg_406;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln5009_reg_402_pp0_iter3_reg == 1'd0))) begin
        mul_ln870_reg_459 <= grp_fu_311_p2;
        mul_ln879_reg_474 <= grp_fu_317_p2;
        mul_ln888_1_reg_479 <= grp_fu_323_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln5009_reg_402_pp0_iter5_reg == 1'd0))) begin
        mul_ln888_2_reg_509 <= grp_fu_354_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln5009_reg_402 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_1_reg_411 <= {{img_in_443_dout[15:8]}};
        p_2_reg_417 <= {{img_in_443_dout[23:16]}};
        p_reg_406 <= p_fu_173_p1;
    end
end

always @ (*) begin
    if ((icmp_ln5009_fu_168_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state3 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state3 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln878_fu_157_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln878_fu_157_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_311_ce = 1'b1;
    end else begin
        grp_fu_311_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_317_ce = 1'b1;
    end else begin
        grp_fu_317_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_323_ce = 1'b1;
    end else begin
        grp_fu_323_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_329_ce = 1'b1;
    end else begin
        grp_fu_329_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_337_ce = 1'b1;
    end else begin
        grp_fu_337_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_346_ce = 1'b1;
    end else begin
        grp_fu_346_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_354_ce = 1'b1;
    end else begin
        grp_fu_354_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_360_ce = 1'b1;
    end else begin
        grp_fu_360_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_369_ce = 1'b1;
    end else begin
        grp_fu_369_ce = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln5009_reg_402 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        img_in_443_blk_n = img_in_443_empty_n;
    end else begin
        img_in_443_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln5009_reg_402 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        img_in_443_read = 1'b1;
    end else begin
        img_in_443_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln5009_reg_402_pp0_iter7_reg == 1'd0) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        img_out_444_blk_n = img_out_444_full_n;
    end else begin
        img_out_444_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln5009_reg_402_pp0_iter7_reg == 1'd0) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        img_out_444_write = 1'b1;
    end else begin
        img_out_444_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_src_cols_blk_n = p_src_cols_empty_n;
    end else begin
        p_src_cols_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (p_src_cols_empty_n == 1'b0) | (p_src_rows_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_src_cols_read = 1'b1;
    end else begin
        p_src_cols_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_src_rows_blk_n = p_src_rows_empty_n;
    end else begin
        p_src_rows_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (p_src_cols_empty_n == 1'b0) | (p_src_rows_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_src_rows_read = 1'b1;
    end else begin
        p_src_rows_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (p_src_cols_empty_n == 1'b0) | (p_src_rows_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln878_fu_157_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln5009_fu_168_p2 == 1'd1)) & ~((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter7 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln5009_fu_168_p2 == 1'd1)) | ((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter7 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Value_uchar_6_fu_295_p3 = ((tmp_fu_277_p3[0:0] == 1'b1) ? 8'd255 : Value_uchar_fu_285_p4);

assign Value_uchar_fu_285_p4 = {{add_ln888_2_fu_272_p2[22:15]}};

assign Z_fu_266_p2 = (zext_ln888_2_fu_257_p1 + zext_ln888_3_fu_260_p1);

assign add_ln878_fu_162_p2 = (j_V_reg_128 + 16'd1);

assign add_ln888_2_fu_272_p2 = (mul_ln888_2_reg_509 + zext_ln888_4_fu_263_p1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((icmp_ln5009_reg_402_pp0_iter7_reg == 1'd0) & (ap_enable_reg_pp0_iter8 == 1'b1) & (img_out_444_full_n == 1'b0)) | ((icmp_ln5009_reg_402 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (img_in_443_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((icmp_ln5009_reg_402_pp0_iter7_reg == 1'd0) & (ap_enable_reg_pp0_iter8 == 1'b1) & (img_out_444_full_n == 1'b0)) | ((icmp_ln5009_reg_402 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (img_in_443_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((icmp_ln5009_reg_402_pp0_iter7_reg == 1'd0) & (ap_enable_reg_pp0_iter8 == 1'b1) & (img_out_444_full_n == 1'b0)) | ((icmp_ln5009_reg_402 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (img_in_443_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (p_src_cols_empty_n == 1'b0) | (p_src_rows_empty_n == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state10_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state11_pp0_stage0_iter8 = ((icmp_ln5009_reg_402_pp0_iter7_reg == 1'd0) & (img_out_444_full_n == 1'b0));
end

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_pp0_stage0_iter1 = ((icmp_ln5009_reg_402 == 1'd0) & (img_in_443_empty_n == 1'b0));
end

assign ap_block_state5_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign grp_fu_311_p0 = grp_fu_311_p00;

assign grp_fu_311_p00 = p_fu_173_p1;

assign grp_fu_311_p1 = 22'd13515;

assign grp_fu_317_p0 = grp_fu_317_p00;

assign grp_fu_317_p00 = p_fu_173_p1;

assign grp_fu_317_p1 = 21'd6969;

assign grp_fu_323_p0 = grp_fu_323_p00;

assign grp_fu_323_p00 = p_1_fu_177_p4;

assign grp_fu_323_p1 = 20'd3906;

assign grp_fu_329_p0 = grp_fu_329_p00;

assign grp_fu_329_p00 = p_2_reg_417_pp0_iter2_reg;

assign grp_fu_329_p1 = 21'd5915;

assign grp_fu_329_p2 = grp_fu_329_p20;

assign grp_fu_329_p20 = mul_ln870_reg_459;

assign grp_fu_337_p0 = grp_fu_337_p00;

assign grp_fu_337_p00 = p_2_reg_417_pp0_iter2_reg;

assign grp_fu_337_p1 = 20'd2364;

assign grp_fu_337_p2 = grp_fu_337_p20;

assign grp_fu_337_p20 = mul_ln879_reg_474;

assign grp_fu_346_p0 = grp_fu_346_p00;

assign grp_fu_346_p00 = p_reg_406_pp0_iter2_reg;

assign grp_fu_346_p1 = 18'd636;

assign grp_fu_346_p2 = grp_fu_346_p20;

assign grp_fu_346_p20 = mul_ln888_1_reg_479;

assign grp_fu_354_p0 = grp_fu_354_p00;

assign grp_fu_354_p00 = p_2_reg_417_pp0_iter2_reg;

assign grp_fu_354_p1 = 23'd31137;

assign grp_fu_360_p0 = grp_fu_360_p00;

assign grp_fu_360_p00 = p_1_reg_411_pp0_iter3_reg;

assign grp_fu_360_p1 = 22'd11717;

assign grp_fu_369_p0 = grp_fu_369_p00;

assign grp_fu_369_p00 = p_1_reg_411_pp0_iter3_reg;

assign grp_fu_369_p1 = 23'd23434;

assign grp_fu_369_p2 = grp_fu_369_p20;

assign grp_fu_369_p20 = grp_fu_337_p3;

assign height_fu_139_p1 = p_src_rows_dout[15:0];

assign i_V_1_fu_147_p2 = (i_V_reg_117 + 13'd1);

assign icmp_ln5009_fu_168_p2 = ((j_V_reg_128 == width_reg_383) ? 1'b1 : 1'b0);

assign icmp_ln878_fu_157_p2 = ((zext_ln878_fu_153_p1 < height_reg_378) ? 1'b1 : 1'b0);

assign img_out_444_din = {{{Value_uchar_6_reg_531}, {Value_uchar_5_reg_526}}, {Value_uchar_4_reg_521}};

assign p_1_fu_177_p4 = {{img_in_443_dout[15:8]}};

assign p_fu_173_p1 = img_in_443_dout[7:0];

assign tmp_fu_277_p3 = Z_fu_266_p2[32'd23];

assign width_fu_143_p1 = p_src_cols_dout[15:0];

assign zext_ln878_fu_153_p1 = i_V_reg_117;

assign zext_ln888_2_fu_257_p1 = mul_ln888_2_reg_509;

assign zext_ln888_3_fu_260_p1 = add_ln888_reg_515;

assign zext_ln888_4_fu_263_p1 = add_ln888_reg_515;

endmodule //rgb2xyz_accel_rgb2xyz_9_9_1080_1920_1_s
