// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2.2 (64-bit)
// Version: 2020.2.2
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module cornerHarris_accel_xFBoxFilter3x3_2_1080_1920_3_1_5_5_1920_false_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        gradx_2_41_dout,
        gradx_2_41_empty_n,
        gradx_2_41_read,
        gradx2g_44_din,
        gradx2g_44_full_n,
        gradx2g_44_write,
        img_height,
        img_width
);

parameter    ap_ST_fsm_state1 = 13'd1;
parameter    ap_ST_fsm_pp0_stage0 = 13'd2;
parameter    ap_ST_fsm_state5 = 13'd4;
parameter    ap_ST_fsm_state6 = 13'd8;
parameter    ap_ST_fsm_state7 = 13'd16;
parameter    ap_ST_fsm_pp1_stage0 = 13'd32;
parameter    ap_ST_fsm_state21 = 13'd64;
parameter    ap_ST_fsm_state22 = 13'd128;
parameter    ap_ST_fsm_state23 = 13'd256;
parameter    ap_ST_fsm_state24 = 13'd512;
parameter    ap_ST_fsm_state25 = 13'd1024;
parameter    ap_ST_fsm_state26 = 13'd2048;
parameter    ap_ST_fsm_state27 = 13'd4096;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [15:0] gradx_2_41_dout;
input   gradx_2_41_empty_n;
output   gradx_2_41_read;
output  [15:0] gradx2g_44_din;
input   gradx2g_44_full_n;
output   gradx2g_44_write;
input  [10:0] img_height;
input  [10:0] img_width;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg gradx_2_41_read;
reg gradx2g_44_write;

(* fsm_encoding = "none" *) reg   [12:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    gradx_2_41_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln241_reg_619;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp1_stage0;
reg   [0:0] icmp_ln133_reg_686;
reg   [0:0] cmp_i_i382_i_reg_673;
reg    gradx2g_44_blk_n;
reg    ap_enable_reg_pp1_iter12;
reg   [0:0] icmp_ln870_4_reg_708;
reg   [0:0] icmp_ln870_4_reg_708_pp1_iter11_reg;
wire    ap_CS_fsm_state27;
reg   [10:0] col_V_reg_236;
reg   [10:0] col_V_5_reg_272;
reg   [10:0] col_V_5_reg_272_pp1_iter1_reg;
wire    ap_block_state8_pp1_stage0_iter0;
reg    ap_predicate_op99_read_state9;
reg    ap_block_state9_pp1_stage0_iter1;
wire    ap_block_state10_pp1_stage0_iter2;
wire    ap_block_state11_pp1_stage0_iter3;
wire    ap_block_state12_pp1_stage0_iter4;
wire    ap_block_state13_pp1_stage0_iter5;
wire    ap_block_state14_pp1_stage0_iter6;
wire    ap_block_state15_pp1_stage0_iter7;
wire    ap_block_state16_pp1_stage0_iter8;
wire    ap_block_state17_pp1_stage0_iter9;
wire    ap_block_state18_pp1_stage0_iter10;
wire    ap_block_state19_pp1_stage0_iter11;
reg    ap_block_state20_pp1_stage0_iter12;
reg    ap_block_pp1_stage0_11001;
reg   [10:0] col_V_5_reg_272_pp1_iter2_reg;
reg   [15:0] agg_tmp23_i_i_0_reg_284;
reg   [15:0] agg_tmp23_i_i_0_reg_284_pp1_iter6_reg;
reg   [15:0] agg_tmp20_i_i_0_reg_296;
reg   [15:0] agg_tmp12_i_i_0_reg_309;
reg   [15:0] agg_tmp12_i_i_0_reg_309_pp1_iter6_reg;
reg   [15:0] agg_tmp9_i_i_0_reg_321;
reg   [15:0] agg_tmp2_i_i_0_reg_334;
reg   [15:0] agg_tmp2_i_i_0_reg_334_pp1_iter6_reg;
reg   [15:0] agg_tmp78_0_reg_346;
reg   [15:0] reg_391;
wire    ap_block_state2_pp0_stage0_iter0;
reg    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_11001;
wire   [10:0] col_V_12_fu_398_p2;
reg   [10:0] col_V_12_reg_614;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] icmp_ln241_fu_404_p2;
reg   [0:0] icmp_ln241_reg_619_pp0_iter1_reg;
wire   [63:0] zext_ln534_fu_409_p1;
reg   [63:0] zext_ln534_reg_623;
wire   [11:0] img_height_cast2_fu_414_p1;
reg   [11:0] img_height_cast2_reg_653;
wire    ap_CS_fsm_state5;
wire   [11:0] add_ln257_fu_417_p2;
reg   [11:0] add_ln257_reg_658;
wire   [0:0] icmp_ln870_fu_458_p2;
reg   [0:0] icmp_ln870_reg_666;
wire    ap_CS_fsm_state6;
wire   [0:0] icmp_ln257_fu_423_p2;
wire   [12:0] ap_phi_mux_row_ind_V_phi_fu_264_p4;
wire   [0:0] cmp_i_i382_i_fu_500_p2;
wire    ap_CS_fsm_state7;
wire   [1:0] trunc_ln140_fu_505_p1;
reg   [1:0] trunc_ln140_reg_677;
wire   [10:0] col_V_13_fu_509_p2;
reg   [10:0] col_V_13_reg_681;
reg    ap_enable_reg_pp1_iter0;
wire   [0:0] icmp_ln133_fu_515_p2;
reg   [0:0] icmp_ln133_reg_686_pp1_iter1_reg;
reg   [0:0] icmp_ln133_reg_686_pp1_iter2_reg;
reg   [0:0] icmp_ln133_reg_686_pp1_iter3_reg;
reg   [0:0] icmp_ln133_reg_686_pp1_iter4_reg;
reg   [0:0] icmp_ln133_reg_686_pp1_iter5_reg;
reg   [0:0] icmp_ln133_reg_686_pp1_iter6_reg;
wire   [0:0] icmp_ln870_4_fu_541_p2;
reg   [0:0] icmp_ln870_4_reg_708_pp1_iter4_reg;
reg   [0:0] icmp_ln870_4_reg_708_pp1_iter5_reg;
reg   [0:0] icmp_ln870_4_reg_708_pp1_iter6_reg;
reg   [0:0] icmp_ln870_4_reg_708_pp1_iter7_reg;
reg   [0:0] icmp_ln870_4_reg_708_pp1_iter8_reg;
reg   [0:0] icmp_ln870_4_reg_708_pp1_iter9_reg;
reg   [0:0] icmp_ln870_4_reg_708_pp1_iter10_reg;
wire   [15:0] buf_V_0_q0;
reg   [15:0] buf_V_0_load_reg_712;
reg    ap_enable_reg_pp1_iter4;
wire   [15:0] buf_V_1_q0;
reg   [15:0] buf_V_1_load_reg_719;
wire   [15:0] buf_V_2_q0;
reg   [15:0] buf_V_2_load_reg_726;
wire   [15:0] buf0_V_fu_550_p5;
reg   [15:0] buf0_V_reg_733;
reg    ap_enable_reg_pp1_iter5;
wire   [15:0] buf1_V_fu_559_p5;
reg   [15:0] buf1_V_reg_739;
wire   [15:0] buf2_V_fu_568_p5;
reg   [15:0] buf2_V_reg_745;
wire   [11:0] row_V_9_fu_577_p2;
reg   [11:0] row_V_9_reg_751;
wire    ap_CS_fsm_state21;
wire   [12:0] row_ind_V_6_fu_595_p3;
reg   [12:0] row_ind_V_6_reg_756;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter2;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_flush_enable;
reg    ap_enable_reg_pp1_iter2;
reg    ap_enable_reg_pp1_iter3;
reg    ap_enable_reg_pp1_iter6;
reg    ap_condition_pp1_exit_iter5_state13;
reg    ap_enable_reg_pp1_iter7;
reg    ap_enable_reg_pp1_iter8;
reg    ap_enable_reg_pp1_iter9;
reg    ap_enable_reg_pp1_iter10;
reg    ap_enable_reg_pp1_iter11;
wire   [10:0] buf_V_0_address0;
reg    buf_V_0_ce0;
reg   [10:0] buf_V_0_address1;
reg    buf_V_0_ce1;
reg    buf_V_0_we1;
reg   [15:0] buf_V_0_d1;
wire   [10:0] buf_V_1_address0;
reg    buf_V_1_ce0;
reg   [10:0] buf_V_1_address1;
reg    buf_V_1_ce1;
reg    buf_V_1_we1;
reg   [15:0] buf_V_1_d1;
wire   [10:0] buf_V_2_address0;
reg    buf_V_2_ce0;
reg   [10:0] buf_V_2_address1;
reg    buf_V_2_ce1;
reg    buf_V_2_we1;
reg   [15:0] buf_V_2_d1;
reg   [15:0] grp_xFApplyMask3x3_3_s_fu_359_p_i00;
reg   [15:0] grp_xFApplyMask3x3_3_s_fu_359_p_i02;
reg   [15:0] grp_xFApplyMask3x3_3_s_fu_359_p_i10;
reg   [15:0] grp_xFApplyMask3x3_3_s_fu_359_p_i12;
reg   [15:0] grp_xFApplyMask3x3_3_s_fu_359_p_i20;
reg   [15:0] grp_xFApplyMask3x3_3_s_fu_359_p_i22;
wire   [15:0] grp_xFApplyMask3x3_3_s_fu_359_ap_return;
reg    grp_xFApplyMask3x3_3_s_fu_359_ap_ce;
wire    ap_block_state8_pp1_stage0_iter0_ignore_call13;
reg    ap_block_state9_pp1_stage0_iter1_ignore_call13;
wire    ap_block_state10_pp1_stage0_iter2_ignore_call13;
wire    ap_block_state11_pp1_stage0_iter3_ignore_call13;
wire    ap_block_state12_pp1_stage0_iter4_ignore_call13;
wire    ap_block_state13_pp1_stage0_iter5_ignore_call13;
wire    ap_block_state14_pp1_stage0_iter6_ignore_call13;
wire    ap_block_state15_pp1_stage0_iter7_ignore_call13;
wire    ap_block_state16_pp1_stage0_iter8_ignore_call13;
wire    ap_block_state17_pp1_stage0_iter9_ignore_call13;
wire    ap_block_state18_pp1_stage0_iter10_ignore_call13;
wire    ap_block_state19_pp1_stage0_iter11_ignore_call13;
reg    ap_block_state20_pp1_stage0_iter12_ignore_call13;
reg    ap_block_pp1_stage0_11001_ignoreCallOp146;
reg   [10:0] ap_phi_mux_col_V_phi_fu_240_p4;
reg   [11:0] row_V_reg_248;
reg   [12:0] row_ind_V_reg_260;
reg   [10:0] ap_phi_mux_col_V_5_phi_fu_276_p4;
reg   [15:0] ap_phi_mux_agg_tmp20_i_i_0_phi_fu_300_p4;
reg   [15:0] ap_phi_mux_agg_tmp9_i_i_0_phi_fu_325_p4;
reg   [15:0] ap_phi_mux_agg_tmp78_0_phi_fu_350_p4;
wire   [63:0] zext_ln534_4_fu_520_p1;
wire   [63:0] zext_ln534_3_fu_527_p1;
wire   [63:0] zext_ln145_fu_534_p1;
reg   [1:0] bottom_fu_92;
wire   [1:0] bottom_2_fu_464_p3;
wire   [1:0] grp_load_fu_382_p1;
reg   [1:0] mid_fu_96;
wire   [1:0] mid_5_fu_471_p3;
reg   [1:0] top_fu_100;
wire   [1:0] top_1_fu_478_p3;
reg    ap_block_pp1_stage0_01001;
wire   [12:0] row_ind_V_5_fu_583_p2;
wire   [0:0] icmp_ln870_3_fu_589_p2;
reg   [12:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_condition_804;
reg    ap_condition_808;
reg    ap_condition_802;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 13'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter4 = 1'b0;
#0 ap_enable_reg_pp1_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
#0 ap_enable_reg_pp1_iter6 = 1'b0;
#0 ap_enable_reg_pp1_iter7 = 1'b0;
#0 ap_enable_reg_pp1_iter8 = 1'b0;
#0 ap_enable_reg_pp1_iter9 = 1'b0;
#0 ap_enable_reg_pp1_iter10 = 1'b0;
#0 ap_enable_reg_pp1_iter11 = 1'b0;
end

cornerHarris_accel_xFBoxFilter3x3_2_1080_1920_3_1_5_5_1920_false_s_buf_V_0 #(
    .DataWidth( 16 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
buf_V_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_V_0_address0),
    .ce0(buf_V_0_ce0),
    .q0(buf_V_0_q0),
    .address1(buf_V_0_address1),
    .ce1(buf_V_0_ce1),
    .we1(buf_V_0_we1),
    .d1(buf_V_0_d1)
);

cornerHarris_accel_xFBoxFilter3x3_2_1080_1920_3_1_5_5_1920_false_s_buf_V_0 #(
    .DataWidth( 16 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
buf_V_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_V_1_address0),
    .ce0(buf_V_1_ce0),
    .q0(buf_V_1_q0),
    .address1(buf_V_1_address1),
    .ce1(buf_V_1_ce1),
    .we1(buf_V_1_we1),
    .d1(buf_V_1_d1)
);

cornerHarris_accel_xFBoxFilter3x3_2_1080_1920_3_1_5_5_1920_false_s_buf_V_0 #(
    .DataWidth( 16 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
buf_V_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_V_2_address0),
    .ce0(buf_V_2_ce0),
    .q0(buf_V_2_q0),
    .address1(buf_V_2_address1),
    .ce1(buf_V_2_ce1),
    .we1(buf_V_2_we1),
    .d1(buf_V_2_d1)
);

cornerHarris_accel_xFApplyMask3x3_3_s grp_xFApplyMask3x3_3_s_fu_359(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .p_i00(grp_xFApplyMask3x3_3_s_fu_359_p_i00),
    .p_i01(agg_tmp2_i_i_0_reg_334),
    .p_i02(grp_xFApplyMask3x3_3_s_fu_359_p_i02),
    .p_i10(grp_xFApplyMask3x3_3_s_fu_359_p_i10),
    .p_i11(agg_tmp12_i_i_0_reg_309),
    .p_i12(grp_xFApplyMask3x3_3_s_fu_359_p_i12),
    .p_i20(grp_xFApplyMask3x3_3_s_fu_359_p_i20),
    .p_i21(agg_tmp23_i_i_0_reg_284),
    .p_i22(grp_xFApplyMask3x3_3_s_fu_359_p_i22),
    .ap_return(grp_xFApplyMask3x3_3_s_fu_359_ap_return),
    .ap_ce(grp_xFApplyMask3x3_3_s_fu_359_ap_ce)
);

cornerHarris_accel_mux_32_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_32_16_1_1_U136(
    .din0(buf_V_0_load_reg_712),
    .din1(buf_V_1_load_reg_719),
    .din2(buf_V_2_load_reg_726),
    .din3(top_fu_100),
    .dout(buf0_V_fu_550_p5)
);

cornerHarris_accel_mux_32_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_32_16_1_1_U137(
    .din0(buf_V_0_load_reg_712),
    .din1(buf_V_1_load_reg_719),
    .din2(buf_V_2_load_reg_726),
    .din3(mid_fu_96),
    .dout(buf1_V_fu_559_p5)
);

cornerHarris_accel_mux_32_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_32_16_1_1_U138(
    .din0(buf_V_0_load_reg_712),
    .din1(buf_V_1_load_reg_719),
    .din2(buf_V_2_load_reg_726),
    .din3(bottom_fu_92),
    .dout(buf2_V_fu_568_p5)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp1_flush_enable)) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state7)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter10 <= ap_enable_reg_pp1_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter11 <= ap_enable_reg_pp1_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter12 <= ap_enable_reg_pp1_iter11;
        end else if ((1'b1 == ap_CS_fsm_state7)) begin
            ap_enable_reg_pp1_iter12 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter5 <= ap_enable_reg_pp1_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter5_state13)) begin
                ap_enable_reg_pp1_iter6 <= ap_enable_reg_pp1_iter4;
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter6 <= ap_enable_reg_pp1_iter5;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter7 <= ap_enable_reg_pp1_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter8 <= ap_enable_reg_pp1_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter9 <= ap_enable_reg_pp1_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter6 == 1'b1) & (icmp_ln133_reg_686_pp1_iter5_reg == 1'd0))) begin
        agg_tmp12_i_i_0_reg_309 <= buf1_V_reg_739;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        agg_tmp12_i_i_0_reg_309 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter7 == 1'b1) & (icmp_ln133_reg_686_pp1_iter6_reg == 1'd0))) begin
        agg_tmp20_i_i_0_reg_296 <= agg_tmp23_i_i_0_reg_284_pp1_iter6_reg;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        agg_tmp20_i_i_0_reg_296 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter6 == 1'b1) & (icmp_ln133_reg_686_pp1_iter5_reg == 1'd0))) begin
        agg_tmp23_i_i_0_reg_284 <= buf2_V_reg_745;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        agg_tmp23_i_i_0_reg_284 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter6 == 1'b1) & (icmp_ln133_reg_686_pp1_iter5_reg == 1'd0))) begin
        agg_tmp2_i_i_0_reg_334 <= buf0_V_reg_733;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        agg_tmp2_i_i_0_reg_334 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter7 == 1'b1) & (icmp_ln133_reg_686_pp1_iter6_reg == 1'd0))) begin
        agg_tmp78_0_reg_346 <= agg_tmp2_i_i_0_reg_334_pp1_iter6_reg;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        agg_tmp78_0_reg_346 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter7 == 1'b1) & (icmp_ln133_reg_686_pp1_iter6_reg == 1'd0))) begin
        agg_tmp9_i_i_0_reg_321 <= agg_tmp12_i_i_0_reg_309_pp1_iter6_reg;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        agg_tmp9_i_i_0_reg_321 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_phi_mux_row_ind_V_phi_fu_264_p4 == 13'd2) & (icmp_ln257_fu_423_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        bottom_fu_92 <= 2'd2;
    end else if (((ap_phi_mux_row_ind_V_phi_fu_264_p4 == 13'd0) & (icmp_ln257_fu_423_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        bottom_fu_92 <= 2'd0;
    end else if ((~(row_ind_V_reg_260 == 13'd0) & ~(row_ind_V_reg_260 == 13'd2) & (1'b1 == ap_CS_fsm_state7))) begin
        bottom_fu_92 <= bottom_2_fu_464_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln133_reg_686 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        col_V_5_reg_272 <= col_V_13_reg_681;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        col_V_5_reg_272 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln241_reg_619 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        col_V_reg_236 <= col_V_12_reg_614;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        col_V_reg_236 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_phi_mux_row_ind_V_phi_fu_264_p4 == 13'd2) & (icmp_ln257_fu_423_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        mid_fu_96 <= 2'd1;
    end else if (((ap_phi_mux_row_ind_V_phi_fu_264_p4 == 13'd0) & (icmp_ln257_fu_423_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        mid_fu_96 <= 2'd2;
    end else if ((~(row_ind_V_reg_260 == 13'd0) & ~(row_ind_V_reg_260 == 13'd2) & (1'b1 == ap_CS_fsm_state7))) begin
        mid_fu_96 <= mid_5_fu_471_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((gradx2g_44_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state27))) begin
        row_V_reg_248 <= row_V_9_reg_751;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        row_V_reg_248 <= 12'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((gradx2g_44_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state27))) begin
        row_ind_V_reg_260 <= row_ind_V_6_reg_756;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        row_ind_V_reg_260 <= 13'd2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_phi_mux_row_ind_V_phi_fu_264_p4 == 13'd2) & (icmp_ln257_fu_423_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        top_fu_100 <= 2'd0;
    end else if (((ap_phi_mux_row_ind_V_phi_fu_264_p4 == 13'd0) & (icmp_ln257_fu_423_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        top_fu_100 <= 2'd1;
    end else if ((~(row_ind_V_reg_260 == 13'd0) & ~(row_ind_V_reg_260 == 13'd2) & (1'b1 == ap_CS_fsm_state7))) begin
        top_fu_100 <= top_1_fu_478_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        add_ln257_reg_658 <= add_ln257_fu_417_p2;
        img_height_cast2_reg_653[10 : 0] <= img_height_cast2_fu_414_p1[10 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp1_stage0_11001)) begin
        agg_tmp12_i_i_0_reg_309_pp1_iter6_reg <= agg_tmp12_i_i_0_reg_309;
        agg_tmp23_i_i_0_reg_284_pp1_iter6_reg <= agg_tmp23_i_i_0_reg_284;
        agg_tmp2_i_i_0_reg_334_pp1_iter6_reg <= agg_tmp2_i_i_0_reg_334;
        col_V_5_reg_272_pp1_iter2_reg <= col_V_5_reg_272_pp1_iter1_reg;
        icmp_ln133_reg_686_pp1_iter2_reg <= icmp_ln133_reg_686_pp1_iter1_reg;
        icmp_ln133_reg_686_pp1_iter3_reg <= icmp_ln133_reg_686_pp1_iter2_reg;
        icmp_ln133_reg_686_pp1_iter4_reg <= icmp_ln133_reg_686_pp1_iter3_reg;
        icmp_ln133_reg_686_pp1_iter5_reg <= icmp_ln133_reg_686_pp1_iter4_reg;
        icmp_ln133_reg_686_pp1_iter6_reg <= icmp_ln133_reg_686_pp1_iter5_reg;
        icmp_ln870_4_reg_708_pp1_iter10_reg <= icmp_ln870_4_reg_708_pp1_iter9_reg;
        icmp_ln870_4_reg_708_pp1_iter11_reg <= icmp_ln870_4_reg_708_pp1_iter10_reg;
        icmp_ln870_4_reg_708_pp1_iter4_reg <= icmp_ln870_4_reg_708;
        icmp_ln870_4_reg_708_pp1_iter5_reg <= icmp_ln870_4_reg_708_pp1_iter4_reg;
        icmp_ln870_4_reg_708_pp1_iter6_reg <= icmp_ln870_4_reg_708_pp1_iter5_reg;
        icmp_ln870_4_reg_708_pp1_iter7_reg <= icmp_ln870_4_reg_708_pp1_iter6_reg;
        icmp_ln870_4_reg_708_pp1_iter8_reg <= icmp_ln870_4_reg_708_pp1_iter7_reg;
        icmp_ln870_4_reg_708_pp1_iter9_reg <= icmp_ln870_4_reg_708_pp1_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter5 == 1'b1) & (icmp_ln133_reg_686_pp1_iter4_reg == 1'd0))) begin
        buf0_V_reg_733 <= buf0_V_fu_550_p5;
        buf1_V_reg_739 <= buf1_V_fu_559_p5;
        buf2_V_reg_745 <= buf2_V_fu_568_p5;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter4 == 1'b1) & (icmp_ln133_reg_686_pp1_iter3_reg == 1'd0))) begin
        buf_V_0_load_reg_712 <= buf_V_0_q0;
        buf_V_1_load_reg_719 <= buf_V_1_q0;
        buf_V_2_load_reg_726 <= buf_V_2_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        cmp_i_i382_i_reg_673 <= cmp_i_i382_i_fu_500_p2;
        trunc_ln140_reg_677 <= trunc_ln140_fu_505_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        col_V_12_reg_614 <= col_V_12_fu_398_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        col_V_13_reg_681 <= col_V_13_fu_509_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        col_V_5_reg_272_pp1_iter1_reg <= col_V_5_reg_272;
        icmp_ln133_reg_686 <= icmp_ln133_fu_515_p2;
        icmp_ln133_reg_686_pp1_iter1_reg <= icmp_ln133_reg_686;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln241_reg_619 <= icmp_ln241_fu_404_p2;
        icmp_ln241_reg_619_pp0_iter1_reg <= icmp_ln241_reg_619;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln133_reg_686_pp1_iter2_reg == 1'd0))) begin
        icmp_ln870_4_reg_708 <= icmp_ln870_4_fu_541_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~(ap_phi_mux_row_ind_V_phi_fu_264_p4 == 13'd0) & ~(ap_phi_mux_row_ind_V_phi_fu_264_p4 == 13'd2) & (icmp_ln257_fu_423_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        icmp_ln870_reg_666 <= icmp_ln870_fu_458_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_predicate_op99_read_state9 == 1'b1)) | ((icmp_ln241_reg_619 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        reg_391 <= gradx_2_41_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        row_V_9_reg_751 <= row_V_9_fu_577_p2;
        row_ind_V_6_reg_756 <= row_ind_V_6_fu_595_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln241_reg_619 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        zext_ln534_reg_623[10 : 0] <= zext_ln534_fu_409_p1[10 : 0];
    end
end

always @ (*) begin
    if ((icmp_ln241_fu_404_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter5 == 1'b1) & (ap_enable_reg_pp1_iter4 == 1'b0))) begin
        ap_condition_pp1_exit_iter5_state13 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter5_state13 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_subdone) & (icmp_ln133_fu_515_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_condition_pp1_flush_enable = 1'b1;
    end else begin
        ap_condition_pp1_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln257_fu_423_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6)) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter12 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter11 == 1'b0) & (ap_enable_reg_pp1_iter10 == 1'b0) & (ap_enable_reg_pp1_iter9 == 1'b0) & (ap_enable_reg_pp1_iter8 == 1'b0) & (ap_enable_reg_pp1_iter7 == 1'b0) & (ap_enable_reg_pp1_iter6 == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter5 == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter7 == 1'b1) & (icmp_ln133_reg_686_pp1_iter6_reg == 1'd0))) begin
        ap_phi_mux_agg_tmp20_i_i_0_phi_fu_300_p4 = agg_tmp23_i_i_0_reg_284_pp1_iter6_reg;
    end else begin
        ap_phi_mux_agg_tmp20_i_i_0_phi_fu_300_p4 = agg_tmp20_i_i_0_reg_296;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter7 == 1'b1) & (icmp_ln133_reg_686_pp1_iter6_reg == 1'd0))) begin
        ap_phi_mux_agg_tmp78_0_phi_fu_350_p4 = agg_tmp2_i_i_0_reg_334_pp1_iter6_reg;
    end else begin
        ap_phi_mux_agg_tmp78_0_phi_fu_350_p4 = agg_tmp78_0_reg_346;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter7 == 1'b1) & (icmp_ln133_reg_686_pp1_iter6_reg == 1'd0))) begin
        ap_phi_mux_agg_tmp9_i_i_0_phi_fu_325_p4 = agg_tmp12_i_i_0_reg_309_pp1_iter6_reg;
    end else begin
        ap_phi_mux_agg_tmp9_i_i_0_phi_fu_325_p4 = agg_tmp9_i_i_0_reg_321;
    end
end

always @ (*) begin
    if (((icmp_ln133_reg_686 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_phi_mux_col_V_5_phi_fu_276_p4 = col_V_13_reg_681;
    end else begin
        ap_phi_mux_col_V_5_phi_fu_276_p4 = col_V_5_reg_272;
    end
end

always @ (*) begin
    if (((icmp_ln241_reg_619 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_col_V_phi_fu_240_p4 = col_V_12_reg_614;
    end else begin
        ap_phi_mux_col_V_phi_fu_240_p4 = col_V_reg_236;
    end
end

always @ (*) begin
    if (((icmp_ln257_fu_423_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((cmp_i_i382_i_reg_673 == 1'd1) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter2 == 1'b1) & (icmp_ln133_reg_686_pp1_iter1_reg == 1'd0) & (trunc_ln140_reg_677 == 2'd0))) begin
        buf_V_0_address1 = zext_ln534_3_fu_527_p1;
    end else if (((cmp_i_i382_i_reg_673 == 1'd0) & (grp_load_fu_382_p1 == 2'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter2 == 1'b1) & (icmp_ln133_reg_686_pp1_iter1_reg == 1'd0))) begin
        buf_V_0_address1 = zext_ln534_4_fu_520_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        buf_V_0_address1 = zext_ln534_fu_409_p1;
    end else begin
        buf_V_0_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        buf_V_0_ce0 = 1'b1;
    end else begin
        buf_V_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((cmp_i_i382_i_reg_673 == 1'd1) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1) & (icmp_ln133_reg_686_pp1_iter1_reg == 1'd0) & (trunc_ln140_reg_677 == 2'd0)) | ((cmp_i_i382_i_reg_673 == 1'd0) & (grp_load_fu_382_p1 == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1) & (icmp_ln133_reg_686_pp1_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        buf_V_0_ce1 = 1'b1;
    end else begin
        buf_V_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((cmp_i_i382_i_reg_673 == 1'd1) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter2 == 1'b1) & (icmp_ln133_reg_686_pp1_iter1_reg == 1'd0) & (trunc_ln140_reg_677 == 2'd0))) begin
        buf_V_0_d1 = reg_391;
    end else if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((cmp_i_i382_i_reg_673 == 1'd0) & (grp_load_fu_382_p1 == 2'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter2 == 1'b1) & (icmp_ln133_reg_686_pp1_iter1_reg == 1'd0)))) begin
        buf_V_0_d1 = 16'd0;
    end else begin
        buf_V_0_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((cmp_i_i382_i_reg_673 == 1'd1) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1) & (icmp_ln133_reg_686_pp1_iter1_reg == 1'd0) & (trunc_ln140_reg_677 == 2'd0)) | ((icmp_ln241_reg_619 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((cmp_i_i382_i_reg_673 == 1'd0) & (grp_load_fu_382_p1 == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1) & (icmp_ln133_reg_686_pp1_iter1_reg == 1'd0)))) begin
        buf_V_0_we1 = 1'b1;
    end else begin
        buf_V_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((cmp_i_i382_i_reg_673 == 1'd1) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter2 == 1'b1) & (icmp_ln133_reg_686_pp1_iter1_reg == 1'd0) & (trunc_ln140_reg_677 == 2'd1))) begin
        buf_V_1_address1 = zext_ln534_3_fu_527_p1;
    end else if (((cmp_i_i382_i_reg_673 == 1'd0) & (grp_load_fu_382_p1 == 2'd1) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter2 == 1'b1) & (icmp_ln133_reg_686_pp1_iter1_reg == 1'd0))) begin
        buf_V_1_address1 = zext_ln534_4_fu_520_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        buf_V_1_address1 = zext_ln534_reg_623;
    end else begin
        buf_V_1_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        buf_V_1_ce0 = 1'b1;
    end else begin
        buf_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((cmp_i_i382_i_reg_673 == 1'd1) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1) & (icmp_ln133_reg_686_pp1_iter1_reg == 1'd0) & (trunc_ln140_reg_677 == 2'd1)) | ((cmp_i_i382_i_reg_673 == 1'd0) & (grp_load_fu_382_p1 == 2'd1) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1) & (icmp_ln133_reg_686_pp1_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        buf_V_1_ce1 = 1'b1;
    end else begin
        buf_V_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((cmp_i_i382_i_reg_673 == 1'd0) & (grp_load_fu_382_p1 == 2'd1) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter2 == 1'b1) & (icmp_ln133_reg_686_pp1_iter1_reg == 1'd0))) begin
        buf_V_1_d1 = 16'd0;
    end else if ((((cmp_i_i382_i_reg_673 == 1'd1) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter2 == 1'b1) & (icmp_ln133_reg_686_pp1_iter1_reg == 1'd0) & (trunc_ln140_reg_677 == 2'd1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        buf_V_1_d1 = reg_391;
    end else begin
        buf_V_1_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((cmp_i_i382_i_reg_673 == 1'd1) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1) & (icmp_ln133_reg_686_pp1_iter1_reg == 1'd0) & (trunc_ln140_reg_677 == 2'd1)) | ((cmp_i_i382_i_reg_673 == 1'd0) & (grp_load_fu_382_p1 == 2'd1) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1) & (icmp_ln133_reg_686_pp1_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln241_reg_619_pp0_iter1_reg == 1'd0)))) begin
        buf_V_1_we1 = 1'b1;
    end else begin
        buf_V_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_802)) begin
        if ((1'b1 == ap_condition_808)) begin
            buf_V_2_address1 = zext_ln534_3_fu_527_p1;
        end else if ((1'b1 == ap_condition_804)) begin
            buf_V_2_address1 = zext_ln534_4_fu_520_p1;
        end else begin
            buf_V_2_address1 = 'bx;
        end
    end else begin
        buf_V_2_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        buf_V_2_ce0 = 1'b1;
    end else begin
        buf_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((~(trunc_ln140_reg_677 == 2'd1) & ~(trunc_ln140_reg_677 == 2'd0) & (cmp_i_i382_i_reg_673 == 1'd1) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1) & (icmp_ln133_reg_686_pp1_iter1_reg == 1'd0)) | (~(grp_load_fu_382_p1 == 2'd1) & ~(grp_load_fu_382_p1 == 2'd0) & (cmp_i_i382_i_reg_673 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1) & (icmp_ln133_reg_686_pp1_iter1_reg == 1'd0)))) begin
        buf_V_2_ce1 = 1'b1;
    end else begin
        buf_V_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_802)) begin
        if ((1'b1 == ap_condition_808)) begin
            buf_V_2_d1 = reg_391;
        end else if ((1'b1 == ap_condition_804)) begin
            buf_V_2_d1 = 16'd0;
        end else begin
            buf_V_2_d1 = 'bx;
        end
    end else begin
        buf_V_2_d1 = 'bx;
    end
end

always @ (*) begin
    if (((~(trunc_ln140_reg_677 == 2'd1) & ~(trunc_ln140_reg_677 == 2'd0) & (cmp_i_i382_i_reg_673 == 1'd1) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1) & (icmp_ln133_reg_686_pp1_iter1_reg == 1'd0)) | (~(grp_load_fu_382_p1 == 2'd1) & ~(grp_load_fu_382_p1 == 2'd0) & (cmp_i_i382_i_reg_673 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1) & (icmp_ln133_reg_686_pp1_iter1_reg == 1'd0)))) begin
        buf_V_2_we1 = 1'b1;
    end else begin
        buf_V_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state27) | ((icmp_ln870_4_reg_708_pp1_iter11_reg == 1'd0) & (ap_enable_reg_pp1_iter12 == 1'b1) & (1'b0 == ap_block_pp1_stage0)))) begin
        gradx2g_44_blk_n = gradx2g_44_full_n;
    end else begin
        gradx2g_44_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((icmp_ln870_4_reg_708_pp1_iter11_reg == 1'd0) & (ap_enable_reg_pp1_iter12 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)) | ((gradx2g_44_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state27)))) begin
        gradx2g_44_write = 1'b1;
    end else begin
        gradx2g_44_write = 1'b0;
    end
end

always @ (*) begin
    if ((((cmp_i_i382_i_reg_673 == 1'd1) & (icmp_ln133_reg_686 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((icmp_ln241_reg_619 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        gradx_2_41_blk_n = gradx_2_41_empty_n;
    end else begin
        gradx_2_41_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_predicate_op99_read_state9 == 1'b1)) | ((icmp_ln241_reg_619 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        gradx_2_41_read = 1'b1;
    end else begin
        gradx_2_41_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) | (1'b1 == ap_CS_fsm_state1) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | ((1'b1 == ap_block_pp1_stage0_11001_ignoreCallOp146) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((gradx2g_44_full_n == 1'b0) & (1'b1 == ap_CS_fsm_state27)))) begin
        grp_xFApplyMask3x3_3_s_fu_359_ap_ce = 1'b0;
    end else begin
        grp_xFApplyMask3x3_3_s_fu_359_ap_ce = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_xFApplyMask3x3_3_s_fu_359_p_i00 = agg_tmp78_0_reg_346;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter6 == 1'b1) & (icmp_ln133_reg_686_pp1_iter5_reg == 1'd0))) begin
        grp_xFApplyMask3x3_3_s_fu_359_p_i00 = ap_phi_mux_agg_tmp78_0_phi_fu_350_p4;
    end else begin
        grp_xFApplyMask3x3_3_s_fu_359_p_i00 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_xFApplyMask3x3_3_s_fu_359_p_i02 = 16'd0;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter6 == 1'b1) & (icmp_ln133_reg_686_pp1_iter5_reg == 1'd0))) begin
        grp_xFApplyMask3x3_3_s_fu_359_p_i02 = buf0_V_reg_733;
    end else begin
        grp_xFApplyMask3x3_3_s_fu_359_p_i02 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_xFApplyMask3x3_3_s_fu_359_p_i10 = agg_tmp9_i_i_0_reg_321;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter6 == 1'b1) & (icmp_ln133_reg_686_pp1_iter5_reg == 1'd0))) begin
        grp_xFApplyMask3x3_3_s_fu_359_p_i10 = ap_phi_mux_agg_tmp9_i_i_0_phi_fu_325_p4;
    end else begin
        grp_xFApplyMask3x3_3_s_fu_359_p_i10 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_xFApplyMask3x3_3_s_fu_359_p_i12 = 16'd0;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter6 == 1'b1) & (icmp_ln133_reg_686_pp1_iter5_reg == 1'd0))) begin
        grp_xFApplyMask3x3_3_s_fu_359_p_i12 = buf1_V_reg_739;
    end else begin
        grp_xFApplyMask3x3_3_s_fu_359_p_i12 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_xFApplyMask3x3_3_s_fu_359_p_i20 = agg_tmp20_i_i_0_reg_296;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter6 == 1'b1) & (icmp_ln133_reg_686_pp1_iter5_reg == 1'd0))) begin
        grp_xFApplyMask3x3_3_s_fu_359_p_i20 = ap_phi_mux_agg_tmp20_i_i_0_phi_fu_300_p4;
    end else begin
        grp_xFApplyMask3x3_3_s_fu_359_p_i20 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_xFApplyMask3x3_3_s_fu_359_p_i22 = 16'd0;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter6 == 1'b1) & (icmp_ln133_reg_686_pp1_iter5_reg == 1'd0))) begin
        grp_xFApplyMask3x3_3_s_fu_359_p_i22 = buf2_V_reg_745;
    end else begin
        grp_xFApplyMask3x3_3_s_fu_359_p_i22 = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln241_fu_404_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln241_fu_404_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((icmp_ln257_fu_423_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter6 == 1'b0) & (ap_enable_reg_pp1_iter5 == 1'b1) & (ap_enable_reg_pp1_iter4 == 1'b0)) & ~((ap_enable_reg_pp1_iter12 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter11 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((ap_enable_reg_pp1_iter12 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter11 == 1'b0)) | ((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter6 == 1'b0) & (ap_enable_reg_pp1_iter5 == 1'b1) & (ap_enable_reg_pp1_iter4 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            if (((gradx2g_44_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state27))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln257_fu_417_p2 = (img_height_cast2_fu_414_p1 + 12'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd4];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((icmp_ln241_reg_619 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (gradx_2_41_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((icmp_ln241_reg_619 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (gradx_2_41_empty_n == 1'b0));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_01001 = (((icmp_ln870_4_reg_708_pp1_iter11_reg == 1'd0) & (ap_enable_reg_pp1_iter12 == 1'b1) & (gradx2g_44_full_n == 1'b0)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (gradx_2_41_empty_n == 1'b0) & (ap_predicate_op99_read_state9 == 1'b1)));
end

always @ (*) begin
    ap_block_pp1_stage0_11001 = (((icmp_ln870_4_reg_708_pp1_iter11_reg == 1'd0) & (ap_enable_reg_pp1_iter12 == 1'b1) & (gradx2g_44_full_n == 1'b0)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (gradx_2_41_empty_n == 1'b0) & (ap_predicate_op99_read_state9 == 1'b1)));
end

always @ (*) begin
    ap_block_pp1_stage0_11001_ignoreCallOp146 = (((icmp_ln870_4_reg_708_pp1_iter11_reg == 1'd0) & (ap_enable_reg_pp1_iter12 == 1'b1) & (gradx2g_44_full_n == 1'b0)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (gradx_2_41_empty_n == 1'b0) & (ap_predicate_op99_read_state9 == 1'b1)));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = (((icmp_ln870_4_reg_708_pp1_iter11_reg == 1'd0) & (ap_enable_reg_pp1_iter12 == 1'b1) & (gradx2g_44_full_n == 1'b0)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (gradx_2_41_empty_n == 1'b0) & (ap_predicate_op99_read_state9 == 1'b1)));
end

assign ap_block_state10_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state10_pp1_stage0_iter2_ignore_call13 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp1_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp1_stage0_iter3_ignore_call13 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp1_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp1_stage0_iter4_ignore_call13 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp1_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp1_stage0_iter5_ignore_call13 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp1_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp1_stage0_iter6_ignore_call13 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp1_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp1_stage0_iter7_ignore_call13 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp1_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp1_stage0_iter8_ignore_call13 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp1_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp1_stage0_iter9_ignore_call13 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp1_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp1_stage0_iter10_ignore_call13 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp1_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp1_stage0_iter11_ignore_call13 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state20_pp1_stage0_iter12 = ((icmp_ln870_4_reg_708_pp1_iter11_reg == 1'd0) & (gradx2g_44_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state20_pp1_stage0_iter12_ignore_call13 = ((icmp_ln870_4_reg_708_pp1_iter11_reg == 1'd0) & (gradx2g_44_full_n == 1'b0));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage0_iter1 = ((icmp_ln241_reg_619 == 1'd0) & (gradx_2_41_empty_n == 1'b0));
end

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp1_stage0_iter0_ignore_call13 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state9_pp1_stage0_iter1 = ((gradx_2_41_empty_n == 1'b0) & (ap_predicate_op99_read_state9 == 1'b1));
end

always @ (*) begin
    ap_block_state9_pp1_stage0_iter1_ignore_call13 = ((gradx_2_41_empty_n == 1'b0) & (ap_predicate_op99_read_state9 == 1'b1));
end

always @ (*) begin
    ap_condition_802 = ((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter2 == 1'b1) & (icmp_ln133_reg_686_pp1_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_condition_804 = (~(grp_load_fu_382_p1 == 2'd1) & ~(grp_load_fu_382_p1 == 2'd0) & (cmp_i_i382_i_reg_673 == 1'd0));
end

always @ (*) begin
    ap_condition_808 = (~(trunc_ln140_reg_677 == 2'd1) & ~(trunc_ln140_reg_677 == 2'd0) & (cmp_i_i382_i_reg_673 == 1'd1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_phi_mux_row_ind_V_phi_fu_264_p4 = row_ind_V_reg_260;

always @ (*) begin
    ap_predicate_op99_read_state9 = ((cmp_i_i382_i_reg_673 == 1'd1) & (icmp_ln133_reg_686 == 1'd0));
end

assign bottom_2_fu_464_p3 = ((icmp_ln870_reg_666[0:0] == 1'b1) ? 2'd1 : bottom_fu_92);

assign buf_V_0_address0 = zext_ln145_fu_534_p1;

assign buf_V_1_address0 = zext_ln145_fu_534_p1;

assign buf_V_2_address0 = zext_ln145_fu_534_p1;

assign cmp_i_i382_i_fu_500_p2 = ((row_V_reg_248 < img_height_cast2_reg_653) ? 1'b1 : 1'b0);

assign col_V_12_fu_398_p2 = (ap_phi_mux_col_V_phi_fu_240_p4 + 11'd1);

assign col_V_13_fu_509_p2 = (ap_phi_mux_col_V_5_phi_fu_276_p4 + 11'd1);

assign gradx2g_44_din = grp_xFApplyMask3x3_3_s_fu_359_ap_return;

assign grp_load_fu_382_p1 = bottom_fu_92;

assign icmp_ln133_fu_515_p2 = ((ap_phi_mux_col_V_5_phi_fu_276_p4 == img_width) ? 1'b1 : 1'b0);

assign icmp_ln241_fu_404_p2 = ((ap_phi_mux_col_V_phi_fu_240_p4 == img_width) ? 1'b1 : 1'b0);

assign icmp_ln257_fu_423_p2 = ((row_V_reg_248 == add_ln257_reg_658) ? 1'b1 : 1'b0);

assign icmp_ln870_3_fu_589_p2 = ((row_ind_V_5_fu_583_p2 == 13'd3) ? 1'b1 : 1'b0);

assign icmp_ln870_4_fu_541_p2 = ((col_V_5_reg_272_pp1_iter2_reg == 11'd0) ? 1'b1 : 1'b0);

assign icmp_ln870_fu_458_p2 = ((row_ind_V_reg_260 == 13'd1) ? 1'b1 : 1'b0);

assign img_height_cast2_fu_414_p1 = img_height;

assign mid_5_fu_471_p3 = ((icmp_ln870_reg_666[0:0] == 1'b1) ? 2'd0 : mid_fu_96);

assign row_V_9_fu_577_p2 = (row_V_reg_248 + 12'd1);

assign row_ind_V_5_fu_583_p2 = (row_ind_V_reg_260 + 13'd1);

assign row_ind_V_6_fu_595_p3 = ((icmp_ln870_3_fu_589_p2[0:0] == 1'b1) ? 13'd0 : row_ind_V_5_fu_583_p2);

assign top_1_fu_478_p3 = ((icmp_ln870_reg_666[0:0] == 1'b1) ? 2'd2 : top_fu_100);

assign trunc_ln140_fu_505_p1 = row_ind_V_reg_260[1:0];

assign zext_ln145_fu_534_p1 = col_V_5_reg_272_pp1_iter2_reg;

assign zext_ln534_3_fu_527_p1 = col_V_5_reg_272_pp1_iter1_reg;

assign zext_ln534_4_fu_520_p1 = col_V_5_reg_272_pp1_iter1_reg;

assign zext_ln534_fu_409_p1 = col_V_reg_236;

always @ (posedge ap_clk) begin
    zext_ln534_reg_623[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    img_height_cast2_reg_653[11] <= 1'b0;
end

endmodule //cornerHarris_accel_xFBoxFilter3x3_2_1080_1920_3_1_5_5_1920_false_s
