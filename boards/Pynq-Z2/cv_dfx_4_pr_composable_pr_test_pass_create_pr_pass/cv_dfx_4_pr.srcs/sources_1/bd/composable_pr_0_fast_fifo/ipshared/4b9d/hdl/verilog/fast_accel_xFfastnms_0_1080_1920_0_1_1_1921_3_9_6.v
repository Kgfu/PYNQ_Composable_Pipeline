// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2.2 (64-bit)
// Version: 2020.2.2
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module fast_accel_xFfastnms_0_1080_1920_0_1_1_1921_3_9_6 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        p_dst_41_dout,
        p_dst_41_empty_n,
        p_dst_41_read,
        img_out_420_din,
        img_out_420_full_n,
        img_out_420_write,
        img_height_dout,
        img_height_empty_n,
        img_height_read,
        img_width_dout,
        img_width_empty_n,
        img_width_read
);

parameter    ap_ST_fsm_state1 = 12'd1;
parameter    ap_ST_fsm_state2 = 12'd2;
parameter    ap_ST_fsm_state3 = 12'd4;
parameter    ap_ST_fsm_state4 = 12'd8;
parameter    ap_ST_fsm_pp1_stage0 = 12'd16;
parameter    ap_ST_fsm_state8 = 12'd32;
parameter    ap_ST_fsm_pp2_stage0 = 12'd64;
parameter    ap_ST_fsm_state13 = 12'd128;
parameter    ap_ST_fsm_state14 = 12'd256;
parameter    ap_ST_fsm_state15 = 12'd512;
parameter    ap_ST_fsm_pp3_stage0 = 12'd1024;
parameter    ap_ST_fsm_state23 = 12'd2048;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [7:0] p_dst_41_dout;
input   p_dst_41_empty_n;
output   p_dst_41_read;
output  [7:0] img_out_420_din;
input   img_out_420_full_n;
output   img_out_420_write;
input  [10:0] img_height_dout;
input   img_height_empty_n;
output   img_height_read;
input  [10:0] img_width_dout;
input   img_width_empty_n;
output   img_width_read;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg p_dst_41_read;
reg img_out_420_write;
reg img_height_read;
reg img_width_read;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [11:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    p_dst_41_blk_n;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp1_stage0;
wire    ap_CS_fsm_pp3_stage0;
reg    ap_enable_reg_pp3_iter1;
wire    ap_block_pp3_stage0;
reg   [0:0] icmp_ln630_reg_1257;
reg   [0:0] and_ln636_reg_1268;
reg    img_out_420_blk_n;
reg    ap_enable_reg_pp3_iter6;
reg   [0:0] icmp_ln630_reg_1257_pp3_iter5_reg;
reg   [0:0] icmp_ln882_reg_1287;
reg   [0:0] icmp_ln882_reg_1287_pp3_iter5_reg;
reg    img_height_blk_n;
reg    img_width_blk_n;
reg   [10:0] col_V_reg_293;
reg   [10:0] col_V_reg_293_pp1_iter1_reg;
wire    ap_block_state5_pp1_stage0_iter0;
reg    ap_block_state6_pp1_stage0_iter1;
wire    ap_block_state7_pp1_stage0_iter2;
reg    ap_block_pp1_stage0_11001;
reg   [10:0] col_V_1_reg_305;
reg   [11:0] col_V_4_reg_371;
reg   [11:0] col_V_4_reg_371_pp3_iter1_reg;
wire    ap_block_state16_pp3_stage0_iter0;
reg    ap_predicate_op167_read_state17;
reg    ap_block_state17_pp3_stage0_iter1;
wire    ap_block_state18_pp3_stage0_iter2;
wire    ap_block_state19_pp3_stage0_iter3;
wire    ap_block_state20_pp3_stage0_iter4;
wire    ap_block_state21_pp3_stage0_iter5;
reg    ap_predicate_op233_write_state22;
reg    ap_block_state22_pp3_stage0_iter6;
reg    ap_block_pp3_stage0_11001;
reg   [11:0] col_V_4_reg_371_pp3_iter2_reg;
reg   [7:0] src_buf_V_2_0_reg_383;
reg   [7:0] src_buf_V_2_0_0_i_reg_394;
reg   [7:0] src_buf_V_1_2_reg_405;
reg   [7:0] src_buf_V_1_0_0_i_reg_416;
reg   [7:0] src_buf_V_0_2_reg_427;
reg   [7:0] src_buf_V_0_0_0_i_reg_438;
reg   [7:0] src_buf_V_2_0_1_i_reg_449;
reg   [7:0] src_buf_V_1_0_1_i_reg_461;
reg   [7:0] src_buf_V_0_0_1_i_reg_473;
reg   [7:0] reg_488;
wire   [7:0] buf_V_0_q0;
reg   [7:0] reg_495;
wire    ap_CS_fsm_pp2_stage0;
reg    ap_enable_reg_pp2_iter1;
wire    ap_block_state9_pp2_stage0_iter0;
wire    ap_block_state10_pp2_stage0_iter1;
wire    ap_block_state11_pp2_stage0_iter2;
wire    ap_block_state12_pp2_stage0_iter3;
wire    ap_block_pp2_stage0_11001;
reg   [0:0] icmp_ln861_reg_1145;
reg    ap_enable_reg_pp3_iter4;
reg   [0:0] icmp_ln630_reg_1257_pp3_iter3_reg;
wire   [7:0] buf_V_1_q0;
reg   [7:0] reg_499;
wire   [7:0] buf_V_2_q0;
reg   [7:0] reg_503;
reg   [10:0] img_height_read_reg_1052;
reg   [10:0] img_width_read_reg_1057;
wire   [1:0] init_row_ind_fu_507_p2;
wire    ap_CS_fsm_state2;
reg   [12:0] row_ind_V_0_0_load_reg_1069;
reg   [12:0] row_ind_V_1_0_load_reg_1074;
reg   [12:0] row_ind_V_2_0_load_reg_1079;
reg   [12:0] row_ind_V_load_reg_1084;
wire   [1:0] empty_fu_525_p1;
reg   [1:0] empty_reg_1089;
wire   [63:0] zext_ln534_fu_564_p1;
wire    ap_CS_fsm_state3;
wire   [11:0] zext_ln1616_fu_568_p1;
reg   [11:0] zext_ln1616_reg_1102;
wire   [63:0] zext_ln846_fu_571_p1;
reg   [63:0] zext_ln846_reg_1108;
wire   [0:0] icmp_ln878_1_fu_574_p2;
wire    ap_CS_fsm_state4;
wire   [1:0] trunc_ln856_fu_579_p1;
reg   [1:0] trunc_ln856_reg_1117;
wire   [1:0] trunc_ln870_fu_583_p1;
reg   [1:0] trunc_ln870_reg_1121;
wire   [10:0] col_V_3_fu_587_p2;
reg   [10:0] col_V_3_reg_1126;
reg    ap_enable_reg_pp1_iter0;
wire   [0:0] icmp_ln850_fu_593_p2;
reg   [0:0] icmp_ln850_reg_1131;
wire   [63:0] add_ln846_fu_605_p2;
wire    ap_CS_fsm_state8;
wire   [10:0] col_V_2_fu_611_p2;
reg    ap_enable_reg_pp2_iter0;
wire   [0:0] icmp_ln861_fu_617_p2;
reg   [0:0] icmp_ln861_reg_1145_pp2_iter1_reg;
reg   [0:0] icmp_ln861_reg_1145_pp2_iter2_reg;
reg   [10:0] buf_V_0_addr_1_reg_1149;
reg   [10:0] buf_V_0_addr_1_reg_1149_pp2_iter1_reg;
reg   [10:0] buf_V_0_addr_1_reg_1149_pp2_iter2_reg;
wire   [7:0] tmp_1_fu_629_p5;
reg   [7:0] tmp_1_reg_1165;
wire   [11:0] img_height_cast_i_fu_640_p1;
reg   [11:0] img_height_cast_i_reg_1170;
wire    ap_CS_fsm_state13;
wire  signed [12:0] sext_ln875_fu_649_p1;
reg  signed [12:0] sext_ln875_reg_1175;
wire   [11:0] add_ln875_fu_653_p2;
reg   [11:0] add_ln875_reg_1181;
wire   [11:0] add_ln875_1_fu_658_p2;
reg   [11:0] add_ln875_1_reg_1186;
wire   [1:0] trunc_ln878_fu_664_p1;
reg   [1:0] trunc_ln878_reg_1191;
wire    ap_CS_fsm_state14;
wire   [0:0] cmp_i_i248_i_i_fu_677_p2;
reg   [0:0] cmp_i_i248_i_i_reg_1200;
wire   [0:0] icmp_ln875_fu_672_p2;
wire   [0:0] cmp_i_i206_i_i_fu_682_p2;
reg   [0:0] cmp_i_i206_i_i_reg_1205;
wire   [11:0] empty_33_fu_692_p1;
reg   [11:0] empty_33_reg_1212;
wire   [0:0] cmp_i_i151_i_2_i_fu_696_p2;
reg   [0:0] cmp_i_i151_i_2_i_reg_1217;
wire   [1:0] empty_34_fu_707_p1;
reg   [1:0] empty_34_reg_1222;
wire    ap_CS_fsm_state15;
wire   [0:0] spec_select_i_fu_719_p2;
reg   [0:0] spec_select_i_reg_1227;
wire   [0:0] spec_select51_i_fu_730_p2;
reg   [0:0] spec_select51_i_reg_1232;
wire   [0:0] spec_select52_i_fu_735_p2;
reg   [0:0] spec_select52_i_reg_1237;
wire   [1:0] trunc_ln761_fu_739_p1;
reg   [1:0] trunc_ln761_reg_1242;
wire   [1:0] trunc_ln761_1_fu_743_p1;
reg   [1:0] trunc_ln761_1_reg_1247;
wire   [11:0] col_V_5_fu_747_p2;
reg   [11:0] col_V_5_reg_1252;
reg    ap_enable_reg_pp3_iter0;
wire   [0:0] icmp_ln630_fu_753_p2;
reg   [0:0] icmp_ln630_reg_1257_pp3_iter1_reg;
reg   [0:0] icmp_ln630_reg_1257_pp3_iter2_reg;
reg   [0:0] icmp_ln630_reg_1257_pp3_iter4_reg;
wire   [0:0] icmp_ln878_2_fu_758_p2;
reg   [0:0] icmp_ln878_2_reg_1261;
reg   [0:0] icmp_ln878_2_reg_1261_pp3_iter1_reg;
reg   [0:0] icmp_ln878_2_reg_1261_pp3_iter2_reg;
reg   [0:0] icmp_ln878_2_reg_1261_pp3_iter3_reg;
reg   [0:0] icmp_ln878_2_reg_1261_pp3_iter4_reg;
wire   [0:0] and_ln636_fu_763_p2;
reg   [0:0] and_ln636_reg_1268_pp3_iter1_reg;
wire   [0:0] icmp_ln882_fu_782_p2;
reg   [0:0] icmp_ln882_reg_1287_pp3_iter4_reg;
wire   [1:0] trunc_ln759_fu_799_p1;
reg   [1:0] trunc_ln759_reg_1291;
wire   [7:0] src_buf_V_1_1_fu_890_p3;
reg   [7:0] src_buf_V_1_1_reg_1298;
reg    ap_enable_reg_pp3_iter5;
wire   [7:0] src_buf_V_0_1_fu_898_p3;
reg   [7:0] src_buf_V_0_1_reg_1303;
wire   [7:0] src_buf_V_2_0_2_fu_906_p3;
reg   [7:0] src_buf_V_2_0_2_reg_1308;
wire   [0:0] icmp_ln886_fu_914_p2;
reg   [0:0] icmp_ln886_reg_1313;
wire   [0:0] icmp_ln886_1_fu_920_p2;
reg   [0:0] icmp_ln886_1_reg_1318;
wire   [0:0] icmp_ln886_2_fu_926_p2;
reg   [0:0] icmp_ln886_2_reg_1323;
wire   [0:0] icmp_ln886_3_fu_932_p2;
reg   [0:0] icmp_ln886_3_reg_1328;
wire   [0:0] icmp_ln886_4_fu_938_p2;
reg   [0:0] icmp_ln886_4_reg_1333;
wire   [0:0] icmp_ln886_5_fu_944_p2;
reg   [0:0] icmp_ln886_5_reg_1338;
wire   [0:0] icmp_ln886_6_fu_950_p2;
reg   [0:0] icmp_ln886_6_reg_1343;
wire   [0:0] icmp_ln886_7_fu_956_p2;
reg   [0:0] icmp_ln886_7_reg_1348;
wire   [0:0] icmp_ln874_fu_962_p2;
reg   [0:0] icmp_ln874_reg_1353;
wire   [11:0] row_V_1_fu_1016_p2;
wire    ap_CS_fsm_state23;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state5;
reg    ap_enable_reg_pp1_iter2;
wire    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state9;
reg    ap_enable_reg_pp2_iter2;
reg    ap_enable_reg_pp2_iter3;
reg    ap_block_pp3_stage0_subdone;
reg    ap_condition_pp3_flush_enable;
reg    ap_enable_reg_pp3_iter2;
reg    ap_enable_reg_pp3_iter3;
reg    ap_condition_pp3_exit_iter5_state21;
reg   [10:0] buf_V_0_address0;
reg    buf_V_0_ce0;
reg   [10:0] buf_V_0_address1;
reg    buf_V_0_ce1;
reg    buf_V_0_we1;
reg   [7:0] buf_V_0_d1;
reg   [10:0] buf_V_1_address0;
reg    buf_V_1_ce0;
reg   [10:0] buf_V_1_address1;
reg    buf_V_1_ce1;
reg    buf_V_1_we1;
reg   [10:0] buf_V_2_address0;
reg    buf_V_2_ce0;
reg   [10:0] buf_V_2_address1;
reg    buf_V_2_ce1;
reg    buf_V_2_we1;
wire   [1:0] ap_phi_mux_row_ind_V_0_3_phi_fu_276_p4;
reg   [1:0] row_ind_V_0_3_reg_272;
reg    ap_block_state1;
wire   [0:0] icmp_ln878_fu_529_p2;
reg   [63:0] init_buf_reg_283;
reg   [10:0] ap_phi_mux_col_V_phi_fu_297_p4;
reg   [12:0] row_ind_V_1_1_reg_316;
reg   [12:0] row_ind_V_2_reg_337;
reg   [12:0] row_ind_V_0_reg_326;
reg   [1:0] phi_ln637_reg_349;
reg   [11:0] row_V_reg_359;
reg   [11:0] ap_phi_mux_col_V_4_phi_fu_375_p4;
reg   [7:0] ap_phi_mux_src_buf_V_2_0_phi_fu_387_p4;
reg   [7:0] ap_phi_mux_src_buf_V_2_0_0_i_phi_fu_398_p4;
reg   [7:0] ap_phi_mux_src_buf_V_1_2_phi_fu_409_p4;
reg   [7:0] ap_phi_mux_src_buf_V_1_0_0_i_phi_fu_420_p4;
reg   [7:0] ap_phi_mux_src_buf_V_0_2_phi_fu_431_p4;
reg   [7:0] ap_phi_mux_src_buf_V_0_0_0_i_phi_fu_442_p4;
wire   [7:0] ap_phi_reg_pp3_iter5_src_buf_V_2_0_1_i_reg_449;
wire   [7:0] ap_phi_reg_pp3_iter5_src_buf_V_1_0_1_i_reg_461;
wire   [7:0] ap_phi_reg_pp3_iter5_src_buf_V_0_0_1_i_reg_473;
wire   [63:0] zext_ln534_1_fu_598_p1;
wire   [63:0] conv_i84_i_fu_622_p1;
wire    ap_block_pp2_stage0;
wire   [63:0] zext_ln534_2_fu_768_p1;
wire   [63:0] conv_i105_i_i_fu_775_p1;
reg   [12:0] row_ind_V_0_0_fu_104;
wire   [12:0] zext_ln301_fu_535_p1;
reg   [12:0] row_ind_V_1_0_fu_108;
reg   [12:0] row_ind_V_2_0_fu_112;
reg   [12:0] row_ind_V_load_i_fu_116;
reg   [12:0] row_ind_V_load_1_i_fu_120;
reg    ap_block_pp3_stage0_01001;
wire   [11:0] sub213_i_i_fu_643_p2;
wire   [12:0] zext_ln878_fu_668_p1;
wire   [12:0] sub_i_i180_i_i_fu_687_p2;
wire   [11:0] sub_i163_i_cast_i_fu_702_p2;
wire   [0:0] tmp_fu_711_p3;
wire   [0:0] cmp_i_i151_i_1_i_fu_724_p2;
wire   [12:0] tmp_2_fu_788_p5;
wire   [7:0] tmp_3_fu_803_p5;
wire   [7:0] tmp_4_fu_814_p5;
wire   [7:0] tmp_5_fu_832_p5;
wire   [7:0] tmp_6_fu_843_p5;
wire   [7:0] tmp_7_fu_861_p5;
wire   [7:0] tmp_8_fu_872_p5;
wire   [7:0] src_buf_V_1_2_1_fu_854_p3;
wire   [7:0] src_buf_V_0_2_1_fu_825_p3;
wire   [7:0] arrayidx247_i498_load_0_2_i_fu_883_p3;
wire   [0:0] and_ln874_1_fu_972_p2;
wire   [0:0] and_ln874_fu_968_p2;
wire   [0:0] and_ln874_4_fu_986_p2;
wire   [0:0] and_ln874_5_fu_990_p2;
wire   [0:0] and_ln874_3_fu_982_p2;
wire   [0:0] and_ln874_6_fu_995_p2;
wire   [0:0] and_ln874_2_fu_976_p2;
wire   [0:0] pix_fu_1001_p2;
reg   [11:0] ap_NS_fsm;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_idle_pp3;
wire    ap_enable_pp3;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 12'd1;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter6 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter4 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter5 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp2_iter2 = 1'b0;
#0 ap_enable_reg_pp2_iter3 = 1'b0;
#0 ap_enable_reg_pp3_iter2 = 1'b0;
#0 ap_enable_reg_pp3_iter3 = 1'b0;
end

fast_accel_xFfast7x7_0_1080_1920_0_1_1_1923_7_49_5_buf_V_0 #(
    .DataWidth( 8 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
buf_V_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_V_0_address0),
    .ce0(buf_V_0_ce0),
    .q0(buf_V_0_q0),
    .address1(buf_V_0_address1),
    .ce1(buf_V_0_ce1),
    .we1(buf_V_0_we1),
    .d1(buf_V_0_d1)
);

fast_accel_xFfast7x7_0_1080_1920_0_1_1_1923_7_49_5_buf_V_0 #(
    .DataWidth( 8 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
buf_V_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_V_1_address0),
    .ce0(buf_V_1_ce0),
    .q0(buf_V_1_q0),
    .address1(buf_V_1_address1),
    .ce1(buf_V_1_ce1),
    .we1(buf_V_1_we1),
    .d1(reg_488)
);

fast_accel_xFfast7x7_0_1080_1920_0_1_1_1923_7_49_5_buf_V_0 #(
    .DataWidth( 8 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
buf_V_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_V_2_address0),
    .ce0(buf_V_2_ce0),
    .q0(buf_V_2_q0),
    .address1(buf_V_2_address1),
    .ce1(buf_V_2_ce1),
    .we1(buf_V_2_we1),
    .d1(reg_488)
);

fast_accel_mux_32_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
mux_32_8_1_1_U53(
    .din0(reg_495),
    .din1(reg_499),
    .din2(reg_503),
    .din3(trunc_ln870_reg_1121),
    .dout(tmp_1_fu_629_p5)
);

fast_accel_mux_32_13_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 13 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 13 ))
mux_32_13_1_1_U54(
    .din0(row_ind_V_2_reg_337),
    .din1(row_ind_V_0_reg_326),
    .din2(row_ind_V_1_1_reg_316),
    .din3(empty_34_reg_1222),
    .dout(tmp_2_fu_788_p5)
);

fast_accel_mux_32_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
mux_32_8_1_1_U55(
    .din0(reg_495),
    .din1(reg_499),
    .din2(reg_503),
    .din3(trunc_ln759_reg_1291),
    .dout(tmp_3_fu_803_p5)
);

fast_accel_mux_32_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
mux_32_8_1_1_U56(
    .din0(reg_495),
    .din1(reg_499),
    .din2(reg_503),
    .din3(trunc_ln878_reg_1191),
    .dout(tmp_4_fu_814_p5)
);

fast_accel_mux_32_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
mux_32_8_1_1_U57(
    .din0(reg_495),
    .din1(reg_499),
    .din2(reg_503),
    .din3(trunc_ln759_reg_1291),
    .dout(tmp_5_fu_832_p5)
);

fast_accel_mux_32_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
mux_32_8_1_1_U58(
    .din0(reg_495),
    .din1(reg_499),
    .din2(reg_503),
    .din3(trunc_ln761_1_reg_1247),
    .dout(tmp_6_fu_843_p5)
);

fast_accel_mux_32_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
mux_32_8_1_1_U59(
    .din0(reg_495),
    .din1(reg_499),
    .din2(reg_503),
    .din3(trunc_ln759_reg_1291),
    .dout(tmp_7_fu_861_p5)
);

fast_accel_mux_32_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
mux_32_8_1_1_U60(
    .din0(reg_495),
    .din1(reg_499),
    .din2(reg_503),
    .din3(trunc_ln761_reg_1242),
    .dout(tmp_8_fu_872_p5)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((icmp_ln875_fu_672_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state14))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_condition_pp1_exit_iter0_state5))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((icmp_ln878_1_fu_574_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state5)) begin
                ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state5);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end else if (((icmp_ln878_1_fu_574_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
            ap_enable_reg_pp1_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_condition_pp2_exit_iter0_state9) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if (((icmp_ln878_1_fu_574_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp2_exit_iter0_state9)) begin
                ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state9);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter3 <= ap_enable_reg_pp2_iter2;
        end else if (((icmp_ln878_1_fu_574_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
            ap_enable_reg_pp2_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp3_flush_enable)) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state15)) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter3 <= ap_enable_reg_pp3_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter4 <= ap_enable_reg_pp3_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter5 <= ap_enable_reg_pp3_iter4;
        end else if (((1'b1 == ap_CS_fsm_state15) | ((1'b0 == ap_block_pp3_stage0_subdone) & (1'b1 == ap_condition_pp3_exit_iter5_state21) & (ap_enable_reg_pp3_iter4 == 1'b0)))) begin
            ap_enable_reg_pp3_iter5 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter6 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp3_stage0_subdone) & (1'b1 == ap_condition_pp3_exit_iter5_state21))) begin
            ap_enable_reg_pp3_iter6 <= ap_enable_reg_pp3_iter4;
        end else if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter6 <= ap_enable_reg_pp3_iter5;
        end else if ((1'b1 == ap_CS_fsm_state15)) begin
            ap_enable_reg_pp3_iter6 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln878_1_fu_574_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        col_V_1_reg_305 <= 11'd0;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln861_fu_617_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        col_V_1_reg_305 <= col_V_2_fu_611_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln630_reg_1257 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        col_V_4_reg_371 <= col_V_5_reg_1252;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        col_V_4_reg_371 <= 12'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln850_reg_1131 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        col_V_reg_293 <= col_V_3_reg_1126;
    end else if (((icmp_ln878_1_fu_574_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        col_V_reg_293 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        init_buf_reg_283 <= zext_ln534_fu_564_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        init_buf_reg_283 <= add_ln846_fu_605_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        phi_ln637_reg_349 <= trunc_ln878_reg_1191;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        phi_ln637_reg_349 <= empty_reg_1089;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        row_V_reg_359 <= row_V_1_fu_1016_p2;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        row_V_reg_359 <= 12'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln878_fu_529_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        row_ind_V_0_3_reg_272 <= init_row_ind_fu_507_p2;
    end else if ((~((img_width_empty_n == 1'b0) | (img_height_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        row_ind_V_0_3_reg_272 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        row_ind_V_0_reg_326 <= row_ind_V_1_1_reg_316;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        row_ind_V_0_reg_326 <= row_ind_V_1_0_load_reg_1074;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        row_ind_V_1_1_reg_316 <= row_ind_V_2_reg_337;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        row_ind_V_1_1_reg_316 <= row_ind_V_2_0_load_reg_1079;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        row_ind_V_2_reg_337 <= row_ind_V_0_reg_326;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        row_ind_V_2_reg_337 <= row_ind_V_0_0_load_reg_1069;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln630_reg_1257_pp3_iter5_reg == 1'd0) & (ap_enable_reg_pp3_iter6 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        src_buf_V_0_0_0_i_reg_438 <= src_buf_V_0_0_1_i_reg_473;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        src_buf_V_0_0_0_i_reg_438 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter5 == 1'b1))) begin
        if (((icmp_ln882_reg_1287_pp3_iter4_reg == 1'd1) & (icmp_ln630_reg_1257_pp3_iter4_reg == 1'd0))) begin
            src_buf_V_0_0_1_i_reg_473 <= src_buf_V_0_1_fu_898_p3;
        end else if (((icmp_ln882_reg_1287_pp3_iter4_reg == 1'd0) & (icmp_ln630_reg_1257_pp3_iter4_reg == 1'd0))) begin
            src_buf_V_0_0_1_i_reg_473 <= ap_phi_mux_src_buf_V_0_2_phi_fu_431_p4;
        end else if ((1'b1 == 1'b1)) begin
            src_buf_V_0_0_1_i_reg_473 <= ap_phi_reg_pp3_iter5_src_buf_V_0_0_1_i_reg_473;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln630_reg_1257_pp3_iter5_reg == 1'd0) & (ap_enable_reg_pp3_iter6 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        src_buf_V_0_2_reg_427 <= src_buf_V_0_1_reg_1303;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        src_buf_V_0_2_reg_427 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln630_reg_1257_pp3_iter5_reg == 1'd0) & (ap_enable_reg_pp3_iter6 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        src_buf_V_1_0_0_i_reg_416 <= src_buf_V_1_0_1_i_reg_461;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        src_buf_V_1_0_0_i_reg_416 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter5 == 1'b1))) begin
        if (((icmp_ln882_reg_1287_pp3_iter4_reg == 1'd1) & (icmp_ln630_reg_1257_pp3_iter4_reg == 1'd0))) begin
            src_buf_V_1_0_1_i_reg_461 <= src_buf_V_1_1_fu_890_p3;
        end else if (((icmp_ln882_reg_1287_pp3_iter4_reg == 1'd0) & (icmp_ln630_reg_1257_pp3_iter4_reg == 1'd0))) begin
            src_buf_V_1_0_1_i_reg_461 <= ap_phi_mux_src_buf_V_1_2_phi_fu_409_p4;
        end else if ((1'b1 == 1'b1)) begin
            src_buf_V_1_0_1_i_reg_461 <= ap_phi_reg_pp3_iter5_src_buf_V_1_0_1_i_reg_461;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln630_reg_1257_pp3_iter5_reg == 1'd0) & (ap_enable_reg_pp3_iter6 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        src_buf_V_1_2_reg_405 <= src_buf_V_1_1_reg_1298;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        src_buf_V_1_2_reg_405 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln630_reg_1257_pp3_iter5_reg == 1'd0) & (ap_enable_reg_pp3_iter6 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        src_buf_V_2_0_0_i_reg_394 <= src_buf_V_2_0_1_i_reg_449;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        src_buf_V_2_0_0_i_reg_394 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter5 == 1'b1))) begin
        if (((icmp_ln882_reg_1287_pp3_iter4_reg == 1'd1) & (icmp_ln630_reg_1257_pp3_iter4_reg == 1'd0))) begin
            src_buf_V_2_0_1_i_reg_449 <= src_buf_V_2_0_2_fu_906_p3;
        end else if (((icmp_ln882_reg_1287_pp3_iter4_reg == 1'd0) & (icmp_ln630_reg_1257_pp3_iter4_reg == 1'd0))) begin
            src_buf_V_2_0_1_i_reg_449 <= ap_phi_mux_src_buf_V_2_0_phi_fu_387_p4;
        end else if ((1'b1 == 1'b1)) begin
            src_buf_V_2_0_1_i_reg_449 <= ap_phi_reg_pp3_iter5_src_buf_V_2_0_1_i_reg_449;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln630_reg_1257_pp3_iter5_reg == 1'd0) & (ap_enable_reg_pp3_iter6 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        src_buf_V_2_0_reg_383 <= src_buf_V_2_0_2_reg_1308;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        src_buf_V_2_0_reg_383 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        add_ln875_1_reg_1186 <= add_ln875_1_fu_658_p2;
        add_ln875_reg_1181 <= add_ln875_fu_653_p2;
        img_height_cast_i_reg_1170[10 : 0] <= img_height_cast_i_fu_640_p1[10 : 0];
        sext_ln875_reg_1175 <= sext_ln875_fu_649_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln630_fu_753_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        and_ln636_reg_1268 <= and_ln636_fu_763_p2;
        icmp_ln878_2_reg_1261 <= icmp_ln878_2_fu_758_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        and_ln636_reg_1268_pp3_iter1_reg <= and_ln636_reg_1268;
        col_V_4_reg_371_pp3_iter1_reg <= col_V_4_reg_371;
        icmp_ln630_reg_1257 <= icmp_ln630_fu_753_p2;
        icmp_ln630_reg_1257_pp3_iter1_reg <= icmp_ln630_reg_1257;
        icmp_ln878_2_reg_1261_pp3_iter1_reg <= icmp_ln878_2_reg_1261;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln861_fu_617_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        buf_V_0_addr_1_reg_1149 <= conv_i84_i_fu_622_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        buf_V_0_addr_1_reg_1149_pp2_iter1_reg <= buf_V_0_addr_1_reg_1149;
        icmp_ln861_reg_1145 <= icmp_ln861_fu_617_p2;
        icmp_ln861_reg_1145_pp2_iter1_reg <= icmp_ln861_reg_1145;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp2_stage0_11001)) begin
        buf_V_0_addr_1_reg_1149_pp2_iter2_reg <= buf_V_0_addr_1_reg_1149_pp2_iter1_reg;
        icmp_ln861_reg_1145_pp2_iter2_reg <= icmp_ln861_reg_1145_pp2_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln875_fu_672_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state14))) begin
        cmp_i_i151_i_2_i_reg_1217 <= cmp_i_i151_i_2_i_fu_696_p2;
        cmp_i_i206_i_i_reg_1205 <= cmp_i_i206_i_i_fu_682_p2;
        cmp_i_i248_i_i_reg_1200 <= cmp_i_i248_i_i_fu_677_p2;
        empty_33_reg_1212 <= empty_33_fu_692_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        col_V_3_reg_1126 <= col_V_3_fu_587_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp3_stage0_11001)) begin
        col_V_4_reg_371_pp3_iter2_reg <= col_V_4_reg_371_pp3_iter1_reg;
        icmp_ln630_reg_1257_pp3_iter2_reg <= icmp_ln630_reg_1257_pp3_iter1_reg;
        icmp_ln630_reg_1257_pp3_iter3_reg <= icmp_ln630_reg_1257_pp3_iter2_reg;
        icmp_ln630_reg_1257_pp3_iter4_reg <= icmp_ln630_reg_1257_pp3_iter3_reg;
        icmp_ln630_reg_1257_pp3_iter5_reg <= icmp_ln630_reg_1257_pp3_iter4_reg;
        icmp_ln878_2_reg_1261_pp3_iter2_reg <= icmp_ln878_2_reg_1261_pp3_iter1_reg;
        icmp_ln878_2_reg_1261_pp3_iter3_reg <= icmp_ln878_2_reg_1261_pp3_iter2_reg;
        icmp_ln878_2_reg_1261_pp3_iter4_reg <= icmp_ln878_2_reg_1261_pp3_iter3_reg;
        icmp_ln882_reg_1287_pp3_iter4_reg <= icmp_ln882_reg_1287;
        icmp_ln882_reg_1287_pp3_iter5_reg <= icmp_ln882_reg_1287_pp3_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        col_V_5_reg_1252 <= col_V_5_fu_747_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        col_V_reg_293_pp1_iter1_reg <= col_V_reg_293;
        icmp_ln850_reg_1131 <= icmp_ln850_fu_593_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        empty_34_reg_1222 <= empty_34_fu_707_p1;
        spec_select51_i_reg_1232 <= spec_select51_i_fu_730_p2;
        spec_select52_i_reg_1237 <= spec_select52_i_fu_735_p2;
        spec_select_i_reg_1227 <= spec_select_i_fu_719_p2;
        trunc_ln761_1_reg_1247 <= trunc_ln761_1_fu_743_p1;
        trunc_ln761_reg_1242 <= trunc_ln761_fu_739_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        empty_reg_1089 <= empty_fu_525_p1;
        row_ind_V_0_0_load_reg_1069[1 : 0] <= row_ind_V_0_0_fu_104[1 : 0];
        row_ind_V_1_0_load_reg_1074[1 : 0] <= row_ind_V_1_0_fu_108[1 : 0];
        row_ind_V_2_0_load_reg_1079[1 : 0] <= row_ind_V_2_0_fu_112[1 : 0];
        row_ind_V_load_reg_1084[1 : 0] <= row_ind_V_load_1_i_fu_120[1 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln630_reg_1257_pp3_iter4_reg == 1'd0))) begin
        icmp_ln874_reg_1353 <= icmp_ln874_fu_962_p2;
        icmp_ln886_1_reg_1318 <= icmp_ln886_1_fu_920_p2;
        icmp_ln886_2_reg_1323 <= icmp_ln886_2_fu_926_p2;
        icmp_ln886_3_reg_1328 <= icmp_ln886_3_fu_932_p2;
        icmp_ln886_4_reg_1333 <= icmp_ln886_4_fu_938_p2;
        icmp_ln886_5_reg_1338 <= icmp_ln886_5_fu_944_p2;
        icmp_ln886_6_reg_1343 <= icmp_ln886_6_fu_950_p2;
        icmp_ln886_7_reg_1348 <= icmp_ln886_7_fu_956_p2;
        icmp_ln886_reg_1313 <= icmp_ln886_fu_914_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln630_reg_1257_pp3_iter2_reg == 1'd0))) begin
        icmp_ln882_reg_1287 <= icmp_ln882_fu_782_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        img_height_read_reg_1052 <= img_height_dout;
        img_width_read_reg_1057 <= img_width_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_predicate_op167_read_state17 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        reg_488 <= p_dst_41_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln861_reg_1145 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1)) | ((1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln630_reg_1257_pp3_iter3_reg == 1'd0) & (ap_enable_reg_pp3_iter4 == 1'b1)))) begin
        reg_495 <= buf_V_0_q0;
        reg_499 <= buf_V_1_q0;
        reg_503 <= buf_V_2_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln878_fu_529_p2 == 1'd0) & (ap_phi_mux_row_ind_V_0_3_phi_fu_276_p4 == 2'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        row_ind_V_0_0_fu_104[1 : 0] <= zext_ln301_fu_535_p1[1 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln878_fu_529_p2 == 1'd0) & (ap_phi_mux_row_ind_V_0_3_phi_fu_276_p4 == 2'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        row_ind_V_1_0_fu_108[1 : 0] <= zext_ln301_fu_535_p1[1 : 0];
        row_ind_V_load_i_fu_116[1 : 0] <= zext_ln301_fu_535_p1[1 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((~(ap_phi_mux_row_ind_V_0_3_phi_fu_276_p4 == 2'd1) & ~(ap_phi_mux_row_ind_V_0_3_phi_fu_276_p4 == 2'd0) & (icmp_ln878_fu_529_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        row_ind_V_2_0_fu_112[1 : 0] <= zext_ln301_fu_535_p1[1 : 0];
        row_ind_V_load_1_i_fu_120[1 : 0] <= zext_ln301_fu_535_p1[1 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter5 == 1'b1) & (icmp_ln630_reg_1257_pp3_iter4_reg == 1'd0))) begin
        src_buf_V_0_1_reg_1303 <= src_buf_V_0_1_fu_898_p3;
        src_buf_V_1_1_reg_1298 <= src_buf_V_1_1_fu_890_p3;
        src_buf_V_2_0_2_reg_1308 <= src_buf_V_2_0_2_fu_906_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln861_reg_1145_pp2_iter1_reg == 1'd0))) begin
        tmp_1_reg_1165 <= tmp_1_fu_629_p5;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln630_reg_1257_pp3_iter3_reg == 1'd0))) begin
        trunc_ln759_reg_1291 <= trunc_ln759_fu_799_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln878_1_fu_574_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        trunc_ln856_reg_1117 <= trunc_ln856_fu_579_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln878_1_fu_574_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        trunc_ln870_reg_1121 <= trunc_ln870_fu_583_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        trunc_ln878_reg_1191 <= trunc_ln878_fu_664_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        zext_ln1616_reg_1102[10 : 0] <= zext_ln1616_fu_568_p1[10 : 0];
        zext_ln846_reg_1108[1 : 0] <= zext_ln846_fu_571_p1[1 : 0];
    end
end

always @ (*) begin
    if ((icmp_ln850_fu_593_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state5 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state5 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln861_fu_617_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state9 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state9 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter5 == 1'b1) & (ap_enable_reg_pp3_iter4 == 1'b0))) begin
        ap_condition_pp3_exit_iter5_state21 = 1'b1;
    end else begin
        ap_condition_pp3_exit_iter5_state21 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0_subdone) & (icmp_ln630_fu_753_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        ap_condition_pp3_flush_enable = 1'b1;
    end else begin
        ap_condition_pp3_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln875_fu_672_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state14))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter3 == 1'b0) & (ap_enable_reg_pp2_iter2 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter6 == 1'b0) & (ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter3 == 1'b0) & (ap_enable_reg_pp3_iter2 == 1'b0) & (ap_enable_reg_pp3_iter5 == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b0) & (ap_enable_reg_pp3_iter4 == 1'b0))) begin
        ap_idle_pp3 = 1'b1;
    end else begin
        ap_idle_pp3 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln630_reg_1257 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        ap_phi_mux_col_V_4_phi_fu_375_p4 = col_V_5_reg_1252;
    end else begin
        ap_phi_mux_col_V_4_phi_fu_375_p4 = col_V_4_reg_371;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln850_reg_1131 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_phi_mux_col_V_phi_fu_297_p4 = col_V_3_reg_1126;
    end else begin
        ap_phi_mux_col_V_phi_fu_297_p4 = col_V_reg_293;
    end
end

always @ (*) begin
    if (((icmp_ln630_reg_1257_pp3_iter5_reg == 1'd0) & (ap_enable_reg_pp3_iter6 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        ap_phi_mux_src_buf_V_0_0_0_i_phi_fu_442_p4 = src_buf_V_0_0_1_i_reg_473;
    end else begin
        ap_phi_mux_src_buf_V_0_0_0_i_phi_fu_442_p4 = src_buf_V_0_0_0_i_reg_438;
    end
end

always @ (*) begin
    if (((icmp_ln630_reg_1257_pp3_iter5_reg == 1'd0) & (ap_enable_reg_pp3_iter6 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        ap_phi_mux_src_buf_V_0_2_phi_fu_431_p4 = src_buf_V_0_1_reg_1303;
    end else begin
        ap_phi_mux_src_buf_V_0_2_phi_fu_431_p4 = src_buf_V_0_2_reg_427;
    end
end

always @ (*) begin
    if (((icmp_ln630_reg_1257_pp3_iter5_reg == 1'd0) & (ap_enable_reg_pp3_iter6 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        ap_phi_mux_src_buf_V_1_0_0_i_phi_fu_420_p4 = src_buf_V_1_0_1_i_reg_461;
    end else begin
        ap_phi_mux_src_buf_V_1_0_0_i_phi_fu_420_p4 = src_buf_V_1_0_0_i_reg_416;
    end
end

always @ (*) begin
    if (((icmp_ln630_reg_1257_pp3_iter5_reg == 1'd0) & (ap_enable_reg_pp3_iter6 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        ap_phi_mux_src_buf_V_1_2_phi_fu_409_p4 = src_buf_V_1_1_reg_1298;
    end else begin
        ap_phi_mux_src_buf_V_1_2_phi_fu_409_p4 = src_buf_V_1_2_reg_405;
    end
end

always @ (*) begin
    if (((icmp_ln630_reg_1257_pp3_iter5_reg == 1'd0) & (ap_enable_reg_pp3_iter6 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        ap_phi_mux_src_buf_V_2_0_0_i_phi_fu_398_p4 = src_buf_V_2_0_1_i_reg_449;
    end else begin
        ap_phi_mux_src_buf_V_2_0_0_i_phi_fu_398_p4 = src_buf_V_2_0_0_i_reg_394;
    end
end

always @ (*) begin
    if (((icmp_ln630_reg_1257_pp3_iter5_reg == 1'd0) & (ap_enable_reg_pp3_iter6 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        ap_phi_mux_src_buf_V_2_0_phi_fu_387_p4 = src_buf_V_2_0_2_reg_1308;
    end else begin
        ap_phi_mux_src_buf_V_2_0_phi_fu_387_p4 = src_buf_V_2_0_reg_383;
    end
end

always @ (*) begin
    if (((icmp_ln875_fu_672_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state14))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter3 == 1'b1))) begin
        buf_V_0_address0 = conv_i105_i_i_fu_775_p1;
    end else if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        buf_V_0_address0 = conv_i84_i_fu_622_p1;
    end else begin
        buf_V_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter2 == 1'b1))) begin
        buf_V_0_address1 = zext_ln534_2_fu_768_p1;
    end else if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter3 == 1'b1))) begin
        buf_V_0_address1 = buf_V_0_addr_1_reg_1149_pp2_iter2_reg;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        buf_V_0_address1 = zext_ln534_1_fu_598_p1;
    end else begin
        buf_V_0_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter3 == 1'b1)))) begin
        buf_V_0_ce0 = 1'b1;
    end else begin
        buf_V_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter3 == 1'b1)) | ((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter2 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)))) begin
        buf_V_0_ce1 = 1'b1;
    end else begin
        buf_V_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter3 == 1'b1))) begin
        buf_V_0_d1 = tmp_1_reg_1165;
    end else if ((((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter2 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter2 == 1'b1)))) begin
        buf_V_0_d1 = reg_488;
    end else begin
        buf_V_0_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'd1 == and_ln636_reg_1268_pp3_iter1_reg) & (1'b0 == ap_block_pp3_stage0_11001) & (phi_ln637_reg_349 == 2'd0) & (ap_enable_reg_pp3_iter2 == 1'b1) & (icmp_ln630_reg_1257_pp3_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter3 == 1'b1) & (icmp_ln861_reg_1145_pp2_iter2_reg == 1'd0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1) & (trunc_ln856_reg_1117 == 2'd0)))) begin
        buf_V_0_we1 = 1'b1;
    end else begin
        buf_V_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter3 == 1'b1))) begin
        buf_V_1_address0 = conv_i105_i_i_fu_775_p1;
    end else if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        buf_V_1_address0 = conv_i84_i_fu_622_p1;
    end else begin
        buf_V_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter2 == 1'b1))) begin
        buf_V_1_address1 = zext_ln534_2_fu_768_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        buf_V_1_address1 = zext_ln534_1_fu_598_p1;
    end else begin
        buf_V_1_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter3 == 1'b1)))) begin
        buf_V_1_ce0 = 1'b1;
    end else begin
        buf_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter2 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)))) begin
        buf_V_1_ce1 = 1'b1;
    end else begin
        buf_V_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'd1 == and_ln636_reg_1268_pp3_iter1_reg) & (1'b0 == ap_block_pp3_stage0_11001) & (phi_ln637_reg_349 == 2'd1) & (ap_enable_reg_pp3_iter2 == 1'b1) & (icmp_ln630_reg_1257_pp3_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1) & (trunc_ln856_reg_1117 == 2'd1)))) begin
        buf_V_1_we1 = 1'b1;
    end else begin
        buf_V_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter3 == 1'b1))) begin
        buf_V_2_address0 = conv_i105_i_i_fu_775_p1;
    end else if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        buf_V_2_address0 = conv_i84_i_fu_622_p1;
    end else begin
        buf_V_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter2 == 1'b1))) begin
        buf_V_2_address1 = zext_ln534_2_fu_768_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        buf_V_2_address1 = zext_ln534_1_fu_598_p1;
    end else begin
        buf_V_2_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter3 == 1'b1)))) begin
        buf_V_2_ce0 = 1'b1;
    end else begin
        buf_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter2 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)))) begin
        buf_V_2_ce1 = 1'b1;
    end else begin
        buf_V_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((~(phi_ln637_reg_349 == 2'd0) & ~(phi_ln637_reg_349 == 2'd1) & (1'd1 == and_ln636_reg_1268_pp3_iter1_reg) & (1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter2 == 1'b1) & (icmp_ln630_reg_1257_pp3_iter1_reg == 1'd0)) | (~(trunc_ln856_reg_1117 == 2'd0) & ~(trunc_ln856_reg_1117 == 2'd1) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)))) begin
        buf_V_2_we1 = 1'b1;
    end else begin
        buf_V_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        img_height_blk_n = img_height_empty_n;
    end else begin
        img_height_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((img_width_empty_n == 1'b0) | (img_height_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        img_height_read = 1'b1;
    end else begin
        img_height_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln882_reg_1287_pp3_iter5_reg == 1'd0) & (icmp_ln630_reg_1257_pp3_iter5_reg == 1'd0) & (ap_enable_reg_pp3_iter6 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        img_out_420_blk_n = img_out_420_full_n;
    end else begin
        img_out_420_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter6 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (ap_predicate_op233_write_state22 == 1'b1))) begin
        img_out_420_write = 1'b1;
    end else begin
        img_out_420_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        img_width_blk_n = img_width_empty_n;
    end else begin
        img_width_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((img_width_empty_n == 1'b0) | (img_height_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        img_width_read = 1'b1;
    end else begin
        img_width_read = 1'b0;
    end
end

always @ (*) begin
    if ((((1'd1 == and_ln636_reg_1268) & (icmp_ln630_reg_1257 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        p_dst_41_blk_n = p_dst_41_empty_n;
    end else begin
        p_dst_41_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_predicate_op167_read_state17 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        p_dst_41_read = 1'b1;
    end else begin
        p_dst_41_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((img_width_empty_n == 1'b0) | (img_height_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln878_fu_529_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((icmp_ln878_1_fu_574_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0) & (icmp_ln850_fu_593_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1)) & ~((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0) & (icmp_ln850_fu_593_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((~((1'b0 == ap_block_pp2_stage0_subdone) & (icmp_ln861_fu_617_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1) & (ap_enable_reg_pp2_iter1 == 1'b0)) & ~((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter3 == 1'b1) & (ap_enable_reg_pp2_iter2 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if ((((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter3 == 1'b1) & (ap_enable_reg_pp2_iter2 == 1'b0)) | ((1'b0 == ap_block_pp2_stage0_subdone) & (icmp_ln861_fu_617_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1) & (ap_enable_reg_pp2_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            if (((icmp_ln875_fu_672_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_pp3_stage0;
        end
        ap_ST_fsm_pp3_stage0 : begin
            if (~((1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter5 == 1'b1) & (ap_enable_reg_pp3_iter4 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if (((1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter5 == 1'b1) & (ap_enable_reg_pp3_iter4 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln846_fu_605_p2 = (init_buf_reg_283 + 64'd1);

assign add_ln875_1_fu_658_p2 = (img_height_cast_i_fu_640_p1 + 12'd1);

assign add_ln875_fu_653_p2 = (zext_ln1616_reg_1102 + 12'd1);

assign and_ln636_fu_763_p2 = (icmp_ln878_2_fu_758_p2 & cmp_i_i248_i_i_reg_1200);

assign and_ln874_1_fu_972_p2 = (icmp_ln886_3_reg_1328 & icmp_ln886_2_reg_1323);

assign and_ln874_2_fu_976_p2 = (and_ln874_fu_968_p2 & and_ln874_1_fu_972_p2);

assign and_ln874_3_fu_982_p2 = (icmp_ln886_5_reg_1338 & icmp_ln886_4_reg_1333);

assign and_ln874_4_fu_986_p2 = (icmp_ln886_7_reg_1348 & icmp_ln874_reg_1353);

assign and_ln874_5_fu_990_p2 = (icmp_ln886_6_reg_1343 & and_ln874_4_fu_986_p2);

assign and_ln874_6_fu_995_p2 = (and_ln874_5_fu_990_p2 & and_ln874_3_fu_982_p2);

assign and_ln874_fu_968_p2 = (icmp_ln886_reg_1313 & icmp_ln886_1_reg_1318);

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd5];

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_11001 = ((ap_enable_reg_pp1_iter1 == 1'b1) & (p_dst_41_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = ((ap_enable_reg_pp1_iter1 == 1'b1) & (p_dst_41_empty_n == 1'b0));
end

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp3_stage0_01001 = (((ap_enable_reg_pp3_iter6 == 1'b1) & (img_out_420_full_n == 1'b0) & (ap_predicate_op233_write_state22 == 1'b1)) | ((ap_enable_reg_pp3_iter1 == 1'b1) & (p_dst_41_empty_n == 1'b0) & (ap_predicate_op167_read_state17 == 1'b1)));
end

always @ (*) begin
    ap_block_pp3_stage0_11001 = (((ap_enable_reg_pp3_iter6 == 1'b1) & (img_out_420_full_n == 1'b0) & (ap_predicate_op233_write_state22 == 1'b1)) | ((ap_enable_reg_pp3_iter1 == 1'b1) & (p_dst_41_empty_n == 1'b0) & (ap_predicate_op167_read_state17 == 1'b1)));
end

always @ (*) begin
    ap_block_pp3_stage0_subdone = (((ap_enable_reg_pp3_iter6 == 1'b1) & (img_out_420_full_n == 1'b0) & (ap_predicate_op233_write_state22 == 1'b1)) | ((ap_enable_reg_pp3_iter1 == 1'b1) & (p_dst_41_empty_n == 1'b0) & (ap_predicate_op167_read_state17 == 1'b1)));
end

always @ (*) begin
    ap_block_state1 = ((img_width_empty_n == 1'b0) | (img_height_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

assign ap_block_state10_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp2_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp2_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp3_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state17_pp3_stage0_iter1 = ((p_dst_41_empty_n == 1'b0) & (ap_predicate_op167_read_state17 == 1'b1));
end

assign ap_block_state18_pp3_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp3_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp3_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp3_stage0_iter5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state22_pp3_stage0_iter6 = ((img_out_420_full_n == 1'b0) & (ap_predicate_op233_write_state22 == 1'b1));
end

assign ap_block_state5_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state6_pp1_stage0_iter1 = (p_dst_41_empty_n == 1'b0);
end

assign ap_block_state7_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_enable_pp3 = (ap_idle_pp3 ^ 1'b1);

assign ap_phi_mux_row_ind_V_0_3_phi_fu_276_p4 = row_ind_V_0_3_reg_272;

assign ap_phi_reg_pp3_iter5_src_buf_V_0_0_1_i_reg_473 = 'bx;

assign ap_phi_reg_pp3_iter5_src_buf_V_1_0_1_i_reg_461 = 'bx;

assign ap_phi_reg_pp3_iter5_src_buf_V_2_0_1_i_reg_449 = 'bx;

always @ (*) begin
    ap_predicate_op167_read_state17 = ((1'd1 == and_ln636_reg_1268) & (icmp_ln630_reg_1257 == 1'd0));
end

always @ (*) begin
    ap_predicate_op233_write_state22 = ((icmp_ln882_reg_1287_pp3_iter5_reg == 1'd0) & (icmp_ln630_reg_1257_pp3_iter5_reg == 1'd0));
end

assign arrayidx247_i498_load_0_2_i_fu_883_p3 = ((spec_select52_i_reg_1237[0:0] == 1'b1) ? tmp_7_fu_861_p5 : tmp_8_fu_872_p5);

assign cmp_i_i151_i_1_i_fu_724_p2 = (($signed(sub_i163_i_cast_i_fu_702_p2) < $signed(12'd1)) ? 1'b1 : 1'b0);

assign cmp_i_i151_i_2_i_fu_696_p2 = (($signed(sub_i_i180_i_i_fu_687_p2) > $signed(13'd0)) ? 1'b1 : 1'b0);

assign cmp_i_i206_i_i_fu_682_p2 = (($signed(zext_ln878_fu_668_p1) > $signed(sext_ln875_reg_1175)) ? 1'b1 : 1'b0);

assign cmp_i_i248_i_i_fu_677_p2 = ((row_V_reg_359 < img_height_cast_i_reg_1170) ? 1'b1 : 1'b0);

assign col_V_2_fu_611_p2 = (col_V_1_reg_305 + 11'd1);

assign col_V_3_fu_587_p2 = (ap_phi_mux_col_V_phi_fu_297_p4 + 11'd1);

assign col_V_5_fu_747_p2 = (ap_phi_mux_col_V_4_phi_fu_375_p4 + 12'd1);

assign conv_i105_i_i_fu_775_p1 = col_V_4_reg_371_pp3_iter2_reg;

assign conv_i84_i_fu_622_p1 = col_V_1_reg_305;

assign empty_33_fu_692_p1 = sub_i_i180_i_i_fu_687_p2[11:0];

assign empty_34_fu_707_p1 = sub_i163_i_cast_i_fu_702_p2[1:0];

assign empty_fu_525_p1 = row_ind_V_load_1_i_fu_120[1:0];

assign icmp_ln630_fu_753_p2 = ((ap_phi_mux_col_V_4_phi_fu_375_p4 == add_ln875_reg_1181) ? 1'b1 : 1'b0);

assign icmp_ln850_fu_593_p2 = ((ap_phi_mux_col_V_phi_fu_297_p4 == img_width_read_reg_1057) ? 1'b1 : 1'b0);

assign icmp_ln861_fu_617_p2 = ((col_V_1_reg_305 == img_width_read_reg_1057) ? 1'b1 : 1'b0);

assign icmp_ln874_fu_962_p2 = ((ap_phi_mux_src_buf_V_1_2_phi_fu_409_p4 != 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln875_fu_672_p2 = ((row_V_reg_359 == add_ln875_1_reg_1186) ? 1'b1 : 1'b0);

assign icmp_ln878_1_fu_574_p2 = (($signed(init_buf_reg_283) < $signed(zext_ln846_reg_1108)) ? 1'b1 : 1'b0);

assign icmp_ln878_2_fu_758_p2 = ((ap_phi_mux_col_V_4_phi_fu_375_p4 < zext_ln1616_reg_1102) ? 1'b1 : 1'b0);

assign icmp_ln878_fu_529_p2 = ((row_ind_V_0_3_reg_272 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln882_fu_782_p2 = ((col_V_4_reg_371_pp3_iter2_reg == 12'd0) ? 1'b1 : 1'b0);

assign icmp_ln886_1_fu_920_p2 = ((ap_phi_mux_src_buf_V_1_2_phi_fu_409_p4 > src_buf_V_1_1_fu_890_p3) ? 1'b1 : 1'b0);

assign icmp_ln886_2_fu_926_p2 = ((ap_phi_mux_src_buf_V_1_2_phi_fu_409_p4 > ap_phi_mux_src_buf_V_0_0_0_i_phi_fu_442_p4) ? 1'b1 : 1'b0);

assign icmp_ln886_3_fu_932_p2 = ((ap_phi_mux_src_buf_V_1_2_phi_fu_409_p4 > ap_phi_mux_src_buf_V_0_2_phi_fu_431_p4) ? 1'b1 : 1'b0);

assign icmp_ln886_4_fu_938_p2 = ((ap_phi_mux_src_buf_V_1_2_phi_fu_409_p4 > src_buf_V_0_1_fu_898_p3) ? 1'b1 : 1'b0);

assign icmp_ln886_5_fu_944_p2 = ((ap_phi_mux_src_buf_V_1_2_phi_fu_409_p4 > ap_phi_mux_src_buf_V_2_0_0_i_phi_fu_398_p4) ? 1'b1 : 1'b0);

assign icmp_ln886_6_fu_950_p2 = ((ap_phi_mux_src_buf_V_1_2_phi_fu_409_p4 > ap_phi_mux_src_buf_V_2_0_phi_fu_387_p4) ? 1'b1 : 1'b0);

assign icmp_ln886_7_fu_956_p2 = ((ap_phi_mux_src_buf_V_1_2_phi_fu_409_p4 > src_buf_V_2_0_2_fu_906_p3) ? 1'b1 : 1'b0);

assign icmp_ln886_fu_914_p2 = ((ap_phi_mux_src_buf_V_1_2_phi_fu_409_p4 > ap_phi_mux_src_buf_V_1_0_0_i_phi_fu_420_p4) ? 1'b1 : 1'b0);

assign img_height_cast_i_fu_640_p1 = img_height_read_reg_1052;

assign img_out_420_din = ((pix_fu_1001_p2[0:0] == 1'b1) ? 8'd255 : 8'd0);

assign init_row_ind_fu_507_p2 = (row_ind_V_0_3_reg_272 + 2'd1);

assign pix_fu_1001_p2 = (and_ln874_6_fu_995_p2 & and_ln874_2_fu_976_p2);

assign row_V_1_fu_1016_p2 = (row_V_reg_359 + 12'd1);

assign sext_ln875_fu_649_p1 = $signed(sub213_i_i_fu_643_p2);

assign spec_select51_i_fu_730_p2 = (cmp_i_i206_i_i_reg_1205 & cmp_i_i151_i_1_i_fu_724_p2);

assign spec_select52_i_fu_735_p2 = (cmp_i_i206_i_i_reg_1205 & cmp_i_i151_i_2_i_reg_1217);

assign spec_select_i_fu_719_p2 = (tmp_fu_711_p3 & cmp_i_i206_i_i_reg_1205);

assign src_buf_V_0_1_fu_898_p3 = ((icmp_ln878_2_reg_1261_pp3_iter4_reg[0:0] == 1'b1) ? src_buf_V_0_2_1_fu_825_p3 : ap_phi_mux_src_buf_V_0_2_phi_fu_431_p4);

assign src_buf_V_0_2_1_fu_825_p3 = ((spec_select_i_reg_1227[0:0] == 1'b1) ? tmp_3_fu_803_p5 : tmp_4_fu_814_p5);

assign src_buf_V_1_1_fu_890_p3 = ((icmp_ln878_2_reg_1261_pp3_iter4_reg[0:0] == 1'b1) ? src_buf_V_1_2_1_fu_854_p3 : ap_phi_mux_src_buf_V_1_2_phi_fu_409_p4);

assign src_buf_V_1_2_1_fu_854_p3 = ((spec_select51_i_reg_1232[0:0] == 1'b1) ? tmp_5_fu_832_p5 : tmp_6_fu_843_p5);

assign src_buf_V_2_0_2_fu_906_p3 = ((icmp_ln878_2_reg_1261_pp3_iter4_reg[0:0] == 1'b1) ? arrayidx247_i498_load_0_2_i_fu_883_p3 : ap_phi_mux_src_buf_V_2_0_phi_fu_387_p4);

assign sub213_i_i_fu_643_p2 = ($signed(img_height_cast_i_fu_640_p1) + $signed(12'd4095));

assign sub_i163_i_cast_i_fu_702_p2 = (12'd2 - empty_33_reg_1212);

assign sub_i_i180_i_i_fu_687_p2 = ($signed(zext_ln878_fu_668_p1) - $signed(sext_ln875_reg_1175));

assign tmp_fu_711_p3 = sub_i163_i_cast_i_fu_702_p2[32'd11];

assign trunc_ln759_fu_799_p1 = tmp_2_fu_788_p5[1:0];

assign trunc_ln761_1_fu_743_p1 = row_ind_V_0_reg_326[1:0];

assign trunc_ln761_fu_739_p1 = row_ind_V_1_1_reg_316[1:0];

assign trunc_ln856_fu_579_p1 = init_buf_reg_283[1:0];

assign trunc_ln870_fu_583_p1 = row_ind_V_load_i_fu_116[1:0];

assign trunc_ln878_fu_664_p1 = row_ind_V_2_reg_337[1:0];

assign zext_ln1616_fu_568_p1 = img_width_read_reg_1057;

assign zext_ln301_fu_535_p1 = row_ind_V_0_3_reg_272;

assign zext_ln534_1_fu_598_p1 = col_V_reg_293_pp1_iter1_reg;

assign zext_ln534_2_fu_768_p1 = col_V_4_reg_371_pp3_iter1_reg;

assign zext_ln534_fu_564_p1 = row_ind_V_load_i_fu_116;

assign zext_ln846_fu_571_p1 = row_ind_V_load_reg_1084;

assign zext_ln878_fu_668_p1 = row_V_reg_359;

always @ (posedge ap_clk) begin
    row_ind_V_0_0_load_reg_1069[12:2] <= 11'b00000000000;
    row_ind_V_1_0_load_reg_1074[12:2] <= 11'b00000000000;
    row_ind_V_2_0_load_reg_1079[12:2] <= 11'b00000000000;
    row_ind_V_load_reg_1084[12:2] <= 11'b00000000000;
    zext_ln1616_reg_1102[11] <= 1'b0;
    zext_ln846_reg_1108[63:2] <= 62'b00000000000000000000000000000000000000000000000000000000000000;
    img_height_cast_i_reg_1170[11] <= 1'b0;
    row_ind_V_0_0_fu_104[12:2] <= 11'b00000000000;
    row_ind_V_1_0_fu_108[12:2] <= 11'b00000000000;
    row_ind_V_2_0_fu_112[12:2] <= 11'b00000000000;
    row_ind_V_load_i_fu_116[12:2] <= 11'b00000000000;
    row_ind_V_load_1_i_fu_120[12:2] <= 11'b00000000000;
end

endmodule //fast_accel_xFfastnms_0_1080_1920_0_1_1_1921_3_9_6
