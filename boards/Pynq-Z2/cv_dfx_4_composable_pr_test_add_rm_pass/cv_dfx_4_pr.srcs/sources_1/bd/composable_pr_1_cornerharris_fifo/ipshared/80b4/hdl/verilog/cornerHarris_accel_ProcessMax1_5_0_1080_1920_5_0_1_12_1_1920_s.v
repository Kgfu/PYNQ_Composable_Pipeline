// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2.2 (64-bit)
// Version: 2020.2.2
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module cornerHarris_accel_ProcessMax1_5_0_1080_1920_5_0_1_12_1_1920_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        thresh_48_dout,
        thresh_48_empty_n,
        thresh_48_read,
        img_out_420_din,
        img_out_420_full_n,
        img_out_420_write,
        buf_r_address0,
        buf_r_ce0,
        buf_r_q0,
        buf_r_address1,
        buf_r_ce1,
        buf_r_we1,
        buf_r_d1,
        buf1_address0,
        buf1_ce0,
        buf1_q0,
        buf1_address1,
        buf1_ce1,
        buf1_we1,
        buf1_d1,
        buf2_address0,
        buf2_ce0,
        buf2_q0,
        buf2_address1,
        buf2_ce1,
        buf2_we1,
        buf2_d1,
        p_read2,
        p_read5,
        p_read8,
        p_read9,
        p_read10,
        img_width,
        row_ind,
        p_read111,
        tp,
        mid,
        bottom,
        flag_offset,
        p_read210,
        p_read312,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3,
        ap_return_4,
        ap_return_5,
        ap_return_6,
        ap_return_7,
        ap_return_8,
        ap_return_9,
        ap_return_10,
        ap_return_11
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state11 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] thresh_48_dout;
input   thresh_48_empty_n;
output   thresh_48_read;
output  [7:0] img_out_420_din;
input   img_out_420_full_n;
output   img_out_420_write;
output  [10:0] buf_r_address0;
output   buf_r_ce0;
input  [31:0] buf_r_q0;
output  [10:0] buf_r_address1;
output   buf_r_ce1;
output   buf_r_we1;
output  [31:0] buf_r_d1;
output  [10:0] buf1_address0;
output   buf1_ce0;
input  [31:0] buf1_q0;
output  [10:0] buf1_address1;
output   buf1_ce1;
output   buf1_we1;
output  [31:0] buf1_d1;
output  [10:0] buf2_address0;
output   buf2_ce0;
input  [31:0] buf2_q0;
output  [10:0] buf2_address1;
output   buf2_ce1;
output   buf2_we1;
output  [31:0] buf2_d1;
input  [31:0] p_read2;
input  [31:0] p_read5;
input  [31:0] p_read8;
input  [7:0] p_read9;
input  [7:0] p_read10;
input  [10:0] img_width;
input  [1:0] row_ind;
input  [15:0] p_read111;
input  [1:0] tp;
input  [1:0] mid;
input  [1:0] bottom;
input  [0:0] flag_offset;
input  [31:0] p_read210;
input  [31:0] p_read312;
output  [7:0] ap_return_0;
output  [15:0] ap_return_1;
output  [31:0] ap_return_2;
output  [31:0] ap_return_3;
output  [31:0] ap_return_4;
output  [31:0] ap_return_5;
output  [31:0] ap_return_6;
output  [31:0] ap_return_7;
output  [31:0] ap_return_8;
output  [31:0] ap_return_9;
output  [31:0] ap_return_10;
output  [7:0] ap_return_11;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg thresh_48_read;
reg img_out_420_write;
reg buf_r_ce0;
reg buf_r_ce1;
reg buf_r_we1;
reg buf1_ce0;
reg buf1_ce1;
reg buf1_we1;
reg buf2_ce0;
reg buf2_ce1;
reg buf2_we1;

(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    thresh_48_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln88_reg_733;
reg    img_out_420_blk_n;
reg    ap_enable_reg_pp0_iter8;
reg   [0:0] icmp_ln870_reg_759;
reg   [0:0] icmp_ln870_reg_759_pp0_iter7_reg;
reg   [10:0] col_V_reg_294;
reg   [10:0] col_V_reg_294_pp0_iter1_reg;
wire    ap_block_state2_pp0_stage0_iter0;
reg    ap_predicate_op48_read_state3;
reg    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_state5_pp0_stage0_iter3;
wire    ap_block_state6_pp0_stage0_iter4;
wire    ap_block_state7_pp0_stage0_iter5;
wire    ap_block_state8_pp0_stage0_iter6;
wire    ap_block_state9_pp0_stage0_iter7;
reg    ap_block_state10_pp0_stage0_iter8;
reg    ap_block_pp0_stage0_11001;
reg   [10:0] col_V_reg_294_pp0_iter2_reg;
reg   [31:0] l00_buf3_0_reg_306;
reg   [31:0] l10_buf_0_reg_318;
reg   [31:0] l10_buf5_0_reg_330;
reg   [31:0] l20_buf78_0_reg_343;
reg   [31:0] l00_buf4_0_reg_355;
reg   [31:0] l10_buf6_0_reg_365;
reg   [31:0] l20_buf8_0_reg_375;
reg   [7:0] Array_0_reg_385;
reg   [7:0] lhs_V_reg_395;
reg   [15:0] lhs_reg_407;
wire   [1:0] row_ind_read_read_fu_164_p2;
wire   [10:0] col_V_14_fu_464_p2;
reg   [10:0] col_V_14_reg_728;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] icmp_ln88_fu_470_p2;
reg   [0:0] icmp_ln88_reg_733_pp0_iter1_reg;
reg   [0:0] icmp_ln88_reg_733_pp0_iter2_reg;
reg   [0:0] icmp_ln88_reg_733_pp0_iter3_reg;
reg   [0:0] icmp_ln88_reg_733_pp0_iter4_reg;
reg   [0:0] icmp_ln88_reg_733_pp0_iter5_reg;
reg   [0:0] icmp_ln88_reg_733_pp0_iter6_reg;
reg   [0:0] icmp_ln88_reg_733_pp0_iter7_reg;
reg   [31:0] tmp_V_reg_737;
wire   [0:0] icmp_ln870_fu_500_p2;
reg   [0:0] icmp_ln870_reg_759_pp0_iter4_reg;
reg   [0:0] icmp_ln870_reg_759_pp0_iter5_reg;
reg   [0:0] icmp_ln870_reg_759_pp0_iter6_reg;
reg   [31:0] buf_load_reg_763;
reg    ap_enable_reg_pp0_iter4;
reg   [31:0] buf1_load_reg_770;
reg   [31:0] buf2_load_reg_777;
wire   [31:0] buf0_V_fu_506_p5;
reg   [31:0] buf0_V_reg_784;
wire   [31:0] buf1_V_fu_514_p5;
reg   [31:0] buf1_V_reg_789;
wire   [31:0] buf2_V_fu_522_p5;
reg   [31:0] buf2_V_reg_794;
wire   [31:0] call_ret2_xfExtractPixels_1_12_5_s_fu_432_ap_return;
reg   [31:0] call_ret2_reg_799;
reg    ap_enable_reg_pp0_iter6;
reg   [31:0] call_ret2_reg_799_pp0_iter7_reg;
wire   [31:0] call_ret3_xfExtractPixels_1_12_5_s_fu_437_ap_return;
reg   [31:0] call_ret3_reg_805;
reg   [31:0] call_ret3_reg_805_pp0_iter7_reg;
wire   [31:0] call_ret4_xfExtractPixels_1_12_5_s_fu_443_ap_return;
reg   [31:0] call_ret4_reg_811;
reg   [31:0] call_ret4_reg_811_pp0_iter7_reg;
wire   [0:0] call_ret_xFSuppressionRad1_1_5_ap_uint_8_s_fu_419_ap_return;
reg   [0:0] call_ret_reg_817;
wire   [7:0] select_ln870_fu_530_p3;
reg   [7:0] select_ln870_reg_822;
reg   [7:0] select_ln870_reg_822_pp0_iter7_reg;
wire   [7:0] ret_22_fu_567_p2;
reg   [7:0] ret_22_reg_827;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_flush_enable;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter7;
reg    ap_condition_pp0_exit_iter6_state8;
wire    call_ret_xFSuppressionRad1_1_5_ap_uint_8_s_fu_419_ap_ready;
wire    call_ret2_xfExtractPixels_1_12_5_s_fu_432_ap_ready;
wire    call_ret3_xfExtractPixels_1_12_5_s_fu_437_ap_ready;
wire    call_ret4_xfExtractPixels_1_12_5_s_fu_443_ap_ready;
reg   [10:0] ap_phi_mux_col_V_phi_fu_298_p4;
reg   [31:0] ap_phi_mux_l00_buf3_0_phi_fu_310_p4;
reg   [31:0] ap_phi_mux_l10_buf_0_phi_fu_322_p4;
reg   [31:0] ap_phi_mux_l10_buf5_0_phi_fu_335_p4;
reg   [31:0] ap_phi_mux_l20_buf78_0_phi_fu_347_p4;
reg   [7:0] ap_phi_mux_lhs_V_phi_fu_399_p4;
reg   [15:0] ap_phi_mux_lhs_phi_fu_411_p4;
wire   [63:0] zext_ln534_fu_486_p1;
wire   [63:0] zext_ln534_5_fu_493_p1;
reg   [31:0] write_index_0_fu_114;
wire   [31:0] add_ln110_fu_573_p2;
wire    ap_CS_fsm_state11;
reg   [31:0] read_index_0_fu_118;
wire   [31:0] add_ln93_fu_475_p2;
reg    ap_block_pp0_stage0_01001;
wire   [18:0] ret_fu_538_p3;
wire   [31:0] select_ln546_fu_546_p3;
wire   [31:0] zext_ln546_fu_553_p1;
wire   [31:0] shl_ln781_fu_557_p2;
wire   [7:0] r_fu_563_p1;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
end

cornerHarris_accel_xFSuppressionRad1_1_5_ap_uint_8_s call_ret_xFSuppressionRad1_1_5_ap_uint_8_s_fu_419(
    .ap_ready(call_ret_xFSuppressionRad1_1_5_ap_uint_8_s_fu_419_ap_ready),
    .p_read1(ap_phi_mux_l00_buf3_0_phi_fu_310_p4),
    .p_read2(ap_phi_mux_l10_buf_0_phi_fu_322_p4),
    .p_read3(ap_phi_mux_l10_buf5_0_phi_fu_335_p4),
    .p_read4(call_ret3_xfExtractPixels_1_12_5_s_fu_437_ap_return),
    .p_read5(ap_phi_mux_l20_buf78_0_phi_fu_347_p4),
    .ap_return(call_ret_xFSuppressionRad1_1_5_ap_uint_8_s_fu_419_ap_return)
);

cornerHarris_accel_xfExtractPixels_1_12_5_s call_ret2_xfExtractPixels_1_12_5_s_fu_432(
    .ap_ready(call_ret2_xfExtractPixels_1_12_5_s_fu_432_ap_ready),
    .p_read1(buf0_V_reg_784),
    .ap_return(call_ret2_xfExtractPixels_1_12_5_s_fu_432_ap_return)
);

cornerHarris_accel_xfExtractPixels_1_12_5_s call_ret3_xfExtractPixels_1_12_5_s_fu_437(
    .ap_ready(call_ret3_xfExtractPixels_1_12_5_s_fu_437_ap_ready),
    .p_read1(buf1_V_reg_789),
    .ap_return(call_ret3_xfExtractPixels_1_12_5_s_fu_437_ap_return)
);

cornerHarris_accel_xfExtractPixels_1_12_5_s call_ret4_xfExtractPixels_1_12_5_s_fu_443(
    .ap_ready(call_ret4_xfExtractPixels_1_12_5_s_fu_443_ap_ready),
    .p_read1(buf2_V_reg_794),
    .ap_return(call_ret4_xfExtractPixels_1_12_5_s_fu_443_ap_return)
);

cornerHarris_accel_mux_32_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_32_32_1_1_U192(
    .din0(buf_load_reg_763),
    .din1(buf1_load_reg_770),
    .din2(buf2_load_reg_777),
    .din3(tp),
    .dout(buf0_V_fu_506_p5)
);

cornerHarris_accel_mux_32_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_32_32_1_1_U193(
    .din0(buf_load_reg_763),
    .din1(buf1_load_reg_770),
    .din2(buf2_load_reg_777),
    .din3(mid),
    .dout(buf1_V_fu_514_p5)
);

cornerHarris_accel_mux_32_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_32_32_1_1_U194(
    .din0(buf_load_reg_763),
    .din1(buf1_load_reg_770),
    .din2(buf2_load_reg_777),
    .din3(bottom),
    .dout(buf2_V_fu_522_p5)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp0_flush_enable)) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter6_state8)) begin
                ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter5;
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter8 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln88_reg_733_pp0_iter7_reg == 1'd0) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        Array_0_reg_385 <= select_ln870_reg_822_pp0_iter7_reg;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        Array_0_reg_385 <= p_read9;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln88_reg_733 == 1'd0))) begin
        col_V_reg_294 <= col_V_14_reg_728;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        col_V_reg_294 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (icmp_ln88_reg_733_pp0_iter6_reg == 1'd0))) begin
        l00_buf3_0_reg_306 <= call_ret2_reg_799;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        l00_buf3_0_reg_306 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln88_reg_733_pp0_iter7_reg == 1'd0) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        l00_buf4_0_reg_355 <= call_ret2_reg_799_pp0_iter7_reg;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        l00_buf4_0_reg_355 <= p_read2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (icmp_ln88_reg_733_pp0_iter6_reg == 1'd0))) begin
        l10_buf5_0_reg_330 <= call_ret3_reg_805;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        l10_buf5_0_reg_330 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln88_reg_733_pp0_iter7_reg == 1'd0) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        l10_buf6_0_reg_365 <= call_ret3_reg_805_pp0_iter7_reg;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        l10_buf6_0_reg_365 <= p_read5;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (icmp_ln88_reg_733_pp0_iter6_reg == 1'd0))) begin
        l10_buf_0_reg_318 <= l10_buf5_0_reg_330;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        l10_buf_0_reg_318 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (icmp_ln88_reg_733_pp0_iter6_reg == 1'd0))) begin
        l20_buf78_0_reg_343 <= call_ret4_reg_811;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        l20_buf78_0_reg_343 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln88_reg_733_pp0_iter7_reg == 1'd0) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        l20_buf8_0_reg_375 <= call_ret4_reg_811_pp0_iter7_reg;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        l20_buf8_0_reg_375 <= p_read8;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln88_reg_733_pp0_iter7_reg == 1'd0) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        lhs_V_reg_395 <= 8'd0;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        lhs_V_reg_395 <= p_read10;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln88_reg_733_pp0_iter7_reg == 1'd0) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        lhs_reg_407 <= 16'd0;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        lhs_reg_407 <= p_read111;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        read_index_0_fu_118 <= p_read210;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln88_fu_470_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (flag_offset == 1'd1))) begin
        read_index_0_fu_118 <= add_ln93_fu_475_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        write_index_0_fu_114 <= p_read312;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (icmp_ln870_reg_759_pp0_iter6_reg == 1'd0))) begin
        write_index_0_fu_114 <= add_ln110_fu_573_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln88_reg_733_pp0_iter4_reg == 1'd0))) begin
        buf0_V_reg_784 <= buf0_V_fu_506_p5;
        buf1_V_reg_789 <= buf1_V_fu_514_p5;
        buf2_V_reg_794 <= buf2_V_fu_522_p5;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (icmp_ln88_reg_733_pp0_iter3_reg == 1'd0))) begin
        buf1_load_reg_770 <= buf1_q0;
        buf2_load_reg_777 <= buf2_q0;
        buf_load_reg_763 <= buf_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (icmp_ln88_reg_733_pp0_iter5_reg == 1'd0))) begin
        call_ret2_reg_799 <= call_ret2_xfExtractPixels_1_12_5_s_fu_432_ap_return;
        call_ret3_reg_805 <= call_ret3_xfExtractPixels_1_12_5_s_fu_437_ap_return;
        call_ret4_reg_811 <= call_ret4_xfExtractPixels_1_12_5_s_fu_443_ap_return;
        select_ln870_reg_822 <= select_ln870_fu_530_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        call_ret2_reg_799_pp0_iter7_reg <= call_ret2_reg_799;
        call_ret3_reg_805_pp0_iter7_reg <= call_ret3_reg_805;
        call_ret4_reg_811_pp0_iter7_reg <= call_ret4_reg_811;
        col_V_reg_294_pp0_iter2_reg <= col_V_reg_294_pp0_iter1_reg;
        icmp_ln870_reg_759_pp0_iter4_reg <= icmp_ln870_reg_759;
        icmp_ln870_reg_759_pp0_iter5_reg <= icmp_ln870_reg_759_pp0_iter4_reg;
        icmp_ln870_reg_759_pp0_iter6_reg <= icmp_ln870_reg_759_pp0_iter5_reg;
        icmp_ln870_reg_759_pp0_iter7_reg <= icmp_ln870_reg_759_pp0_iter6_reg;
        icmp_ln88_reg_733_pp0_iter2_reg <= icmp_ln88_reg_733_pp0_iter1_reg;
        icmp_ln88_reg_733_pp0_iter3_reg <= icmp_ln88_reg_733_pp0_iter2_reg;
        icmp_ln88_reg_733_pp0_iter4_reg <= icmp_ln88_reg_733_pp0_iter3_reg;
        icmp_ln88_reg_733_pp0_iter5_reg <= icmp_ln88_reg_733_pp0_iter4_reg;
        icmp_ln88_reg_733_pp0_iter6_reg <= icmp_ln88_reg_733_pp0_iter5_reg;
        icmp_ln88_reg_733_pp0_iter7_reg <= icmp_ln88_reg_733_pp0_iter6_reg;
        select_ln870_reg_822_pp0_iter7_reg <= select_ln870_reg_822;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln88_reg_733_pp0_iter5_reg == 1'd0))) begin
        call_ret_reg_817 <= call_ret_xFSuppressionRad1_1_5_ap_uint_8_s_fu_419_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        col_V_14_reg_728 <= col_V_14_fu_464_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        col_V_reg_294_pp0_iter1_reg <= col_V_reg_294;
        icmp_ln88_reg_733 <= icmp_ln88_fu_470_p2;
        icmp_ln88_reg_733_pp0_iter1_reg <= icmp_ln88_reg_733;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln88_reg_733_pp0_iter2_reg == 1'd0))) begin
        icmp_ln870_reg_759 <= icmp_ln870_fu_500_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln870_reg_759_pp0_iter6_reg == 1'd0))) begin
        ret_22_reg_827 <= ret_22_fu_567_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op48_read_state3 == 1'b1))) begin
        tmp_V_reg_737 <= thresh_48_dout;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        ap_condition_pp0_exit_iter6_state8 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter6_state8 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln88_fu_470_p2 == 1'd1))) begin
        ap_condition_pp0_flush_enable = 1'b1;
    end else begin
        ap_condition_pp0_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln88_reg_733 == 1'd0))) begin
        ap_phi_mux_col_V_phi_fu_298_p4 = col_V_14_reg_728;
    end else begin
        ap_phi_mux_col_V_phi_fu_298_p4 = col_V_reg_294;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter7 == 1'b1) & (icmp_ln88_reg_733_pp0_iter6_reg == 1'd0))) begin
        ap_phi_mux_l00_buf3_0_phi_fu_310_p4 = call_ret2_reg_799;
    end else begin
        ap_phi_mux_l00_buf3_0_phi_fu_310_p4 = l00_buf3_0_reg_306;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter7 == 1'b1) & (icmp_ln88_reg_733_pp0_iter6_reg == 1'd0))) begin
        ap_phi_mux_l10_buf5_0_phi_fu_335_p4 = call_ret3_reg_805;
    end else begin
        ap_phi_mux_l10_buf5_0_phi_fu_335_p4 = l10_buf5_0_reg_330;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter7 == 1'b1) & (icmp_ln88_reg_733_pp0_iter6_reg == 1'd0))) begin
        ap_phi_mux_l10_buf_0_phi_fu_322_p4 = l10_buf5_0_reg_330;
    end else begin
        ap_phi_mux_l10_buf_0_phi_fu_322_p4 = l10_buf_0_reg_318;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter7 == 1'b1) & (icmp_ln88_reg_733_pp0_iter6_reg == 1'd0))) begin
        ap_phi_mux_l20_buf78_0_phi_fu_347_p4 = call_ret4_reg_811;
    end else begin
        ap_phi_mux_l20_buf78_0_phi_fu_347_p4 = l20_buf78_0_reg_343;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln88_reg_733_pp0_iter7_reg == 1'd0) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        ap_phi_mux_lhs_V_phi_fu_399_p4 = 8'd0;
    end else begin
        ap_phi_mux_lhs_V_phi_fu_399_p4 = lhs_V_reg_395;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln88_reg_733_pp0_iter7_reg == 1'd0) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        ap_phi_mux_lhs_phi_fu_411_p4 = 16'd0;
    end else begin
        ap_phi_mux_lhs_phi_fu_411_p4 = lhs_reg_407;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        buf1_ce0 = 1'b1;
    end else begin
        buf1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        buf1_ce1 = 1'b1;
    end else begin
        buf1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln88_reg_733_pp0_iter1_reg == 1'd0) & (row_ind_read_read_fu_164_p2 == 2'd1) & (flag_offset == 1'd1))) begin
        buf1_we1 = 1'b1;
    end else begin
        buf1_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        buf2_ce0 = 1'b1;
    end else begin
        buf2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        buf2_ce1 = 1'b1;
    end else begin
        buf2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~(row_ind_read_read_fu_164_p2 == 2'd0) & ~(row_ind_read_read_fu_164_p2 == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln88_reg_733_pp0_iter1_reg == 1'd0) & (flag_offset == 1'd1))) begin
        buf2_we1 = 1'b1;
    end else begin
        buf2_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        buf_r_ce0 = 1'b1;
    end else begin
        buf_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        buf_r_ce1 = 1'b1;
    end else begin
        buf_r_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln88_reg_733_pp0_iter1_reg == 1'd0) & (row_ind_read_read_fu_164_p2 == 2'd0) & (flag_offset == 1'd1))) begin
        buf_r_we1 = 1'b1;
    end else begin
        buf_r_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln870_reg_759_pp0_iter7_reg == 1'd0) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        img_out_420_blk_n = img_out_420_full_n;
    end else begin
        img_out_420_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln870_reg_759_pp0_iter7_reg == 1'd0) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        img_out_420_write = 1'b1;
    end else begin
        img_out_420_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (flag_offset == 1'd1) & (icmp_ln88_reg_733 == 1'd0))) begin
        thresh_48_blk_n = thresh_48_empty_n;
    end else begin
        thresh_48_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op48_read_state3 == 1'b1))) begin
        thresh_48_read = 1'b1;
    end else begin
        thresh_48_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b1)) & ~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln110_fu_573_p2 = (write_index_0_fu_114 + 32'd1);

assign add_ln93_fu_475_p2 = (read_index_0_fu_118 + 32'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_enable_reg_pp0_iter1 == 1'b1) & (thresh_48_empty_n == 1'b0) & (ap_predicate_op48_read_state3 == 1'b1)) | ((img_out_420_full_n == 1'b0) & (icmp_ln870_reg_759_pp0_iter7_reg == 1'd0) & (ap_enable_reg_pp0_iter8 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter1 == 1'b1) & (thresh_48_empty_n == 1'b0) & (ap_predicate_op48_read_state3 == 1'b1)) | ((img_out_420_full_n == 1'b0) & (icmp_ln870_reg_759_pp0_iter7_reg == 1'd0) & (ap_enable_reg_pp0_iter8 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter1 == 1'b1) & (thresh_48_empty_n == 1'b0) & (ap_predicate_op48_read_state3 == 1'b1)) | ((img_out_420_full_n == 1'b0) & (icmp_ln870_reg_759_pp0_iter7_reg == 1'd0) & (ap_enable_reg_pp0_iter8 == 1'b1)));
end

always @ (*) begin
    ap_block_state10_pp0_stage0_iter8 = ((img_out_420_full_n == 1'b0) & (icmp_ln870_reg_759_pp0_iter7_reg == 1'd0));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage0_iter1 = ((thresh_48_empty_n == 1'b0) & (ap_predicate_op48_read_state3 == 1'b1));
end

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_predicate_op48_read_state3 = ((flag_offset == 1'd1) & (icmp_ln88_reg_733 == 1'd0));
end

assign ap_return_0 = lhs_V_reg_395;

assign ap_return_1 = lhs_reg_407;

assign ap_return_10 = l20_buf8_0_reg_375;

assign ap_return_11 = Array_0_reg_385;

assign ap_return_2 = read_index_0_fu_118;

assign ap_return_3 = write_index_0_fu_114;

assign ap_return_4 = l00_buf3_0_reg_306;

assign ap_return_5 = l10_buf_0_reg_318;

assign ap_return_6 = l10_buf5_0_reg_330;

assign ap_return_7 = l20_buf78_0_reg_343;

assign ap_return_8 = l00_buf4_0_reg_355;

assign ap_return_9 = l10_buf6_0_reg_365;

assign buf1_address0 = zext_ln534_5_fu_493_p1;

assign buf1_address1 = zext_ln534_fu_486_p1;

assign buf1_d1 = tmp_V_reg_737;

assign buf2_address0 = zext_ln534_5_fu_493_p1;

assign buf2_address1 = zext_ln534_fu_486_p1;

assign buf2_d1 = tmp_V_reg_737;

assign buf_r_address0 = zext_ln534_5_fu_493_p1;

assign buf_r_address1 = zext_ln534_fu_486_p1;

assign buf_r_d1 = tmp_V_reg_737;

assign col_V_14_fu_464_p2 = (ap_phi_mux_col_V_phi_fu_298_p4 + 11'd1);

assign icmp_ln870_fu_500_p2 = ((col_V_reg_294_pp0_iter2_reg == 11'd0) ? 1'b1 : 1'b0);

assign icmp_ln88_fu_470_p2 = ((ap_phi_mux_col_V_phi_fu_298_p4 == img_width) ? 1'b1 : 1'b0);

assign img_out_420_din = ret_22_reg_827;

assign r_fu_563_p1 = shl_ln781_fu_557_p2[7:0];

assign ret_22_fu_567_p2 = (r_fu_563_p1 | ap_phi_mux_lhs_V_phi_fu_399_p4);

assign ret_fu_538_p3 = {{ap_phi_mux_lhs_phi_fu_411_p4}, {3'd0}};

assign row_ind_read_read_fu_164_p2 = row_ind;

assign select_ln546_fu_546_p3 = ((call_ret_reg_817[0:0] == 1'b1) ? 32'd255 : 32'd0);

assign select_ln870_fu_530_p3 = ((call_ret_xFSuppressionRad1_1_5_ap_uint_8_s_fu_419_ap_return[0:0] == 1'b1) ? 8'd255 : 8'd0);

assign shl_ln781_fu_557_p2 = select_ln546_fu_546_p3 << zext_ln546_fu_553_p1;

assign zext_ln534_5_fu_493_p1 = col_V_reg_294_pp0_iter2_reg;

assign zext_ln534_fu_486_p1 = col_V_reg_294_pp0_iter1_reg;

assign zext_ln546_fu_553_p1 = ret_fu_538_p3;

endmodule //cornerHarris_accel_ProcessMax1_5_0_1080_1920_5_0_1_12_1_1920_s
