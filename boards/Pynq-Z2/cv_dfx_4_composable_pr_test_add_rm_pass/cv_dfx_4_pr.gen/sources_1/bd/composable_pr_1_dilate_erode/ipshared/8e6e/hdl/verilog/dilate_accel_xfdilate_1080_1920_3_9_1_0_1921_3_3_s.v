// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2.2 (64-bit)
// Version: 2020.2.2
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module dilate_accel_xfdilate_1080_1920_3_9_1_0_1921_3_3_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        img_in_419_dout,
        img_in_419_empty_n,
        img_in_419_read,
        img_out_420_din,
        img_out_420_full_n,
        img_out_420_write,
        img_height,
        img_width,
        p_read,
        p_read1,
        p_read2,
        p_read3,
        p_read4,
        p_read5,
        p_read6,
        p_read7,
        p_read8
);

parameter    ap_ST_fsm_state1 = 10'd1;
parameter    ap_ST_fsm_state2 = 10'd2;
parameter    ap_ST_fsm_state3 = 10'd4;
parameter    ap_ST_fsm_pp1_stage0 = 10'd8;
parameter    ap_ST_fsm_state7 = 10'd16;
parameter    ap_ST_fsm_pp2_stage0 = 10'd32;
parameter    ap_ST_fsm_state10 = 10'd64;
parameter    ap_ST_fsm_state11 = 10'd128;
parameter    ap_ST_fsm_pp3_stage0 = 10'd256;
parameter    ap_ST_fsm_state24 = 10'd512;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [23:0] img_in_419_dout;
input   img_in_419_empty_n;
output   img_in_419_read;
output  [23:0] img_out_420_din;
input   img_out_420_full_n;
output   img_out_420_write;
input  [15:0] img_height;
input  [15:0] img_width;
input  [7:0] p_read;
input  [7:0] p_read1;
input  [7:0] p_read2;
input  [7:0] p_read3;
input  [7:0] p_read4;
input  [7:0] p_read5;
input  [7:0] p_read6;
input  [7:0] p_read7;
input  [7:0] p_read8;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg img_in_419_read;
reg img_out_420_write;

(* fsm_encoding = "none" *) reg   [9:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    img_in_419_blk_n;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp1_stage0;
reg   [0:0] icmp_ln878_reg_1624;
wire    ap_CS_fsm_pp3_stage0;
reg    ap_enable_reg_pp3_iter1;
wire    ap_block_pp3_stage0;
reg   [0:0] icmp_ln878_4_reg_1741;
reg   [0:0] icmp_ln878_5_reg_1745;
reg   [0:0] cmp_i_i115_i_reg_1718;
reg    img_out_420_blk_n;
reg    ap_enable_reg_pp3_iter11;
reg   [0:0] icmp_ln882_reg_1764;
reg   [0:0] icmp_ln882_reg_1764_pp3_iter10_reg;
reg   [12:0] i_col_046_0_reg_345;
reg   [12:0] i_col_046_0_reg_345_pp1_iter1_reg;
wire    ap_block_state4_pp1_stage0_iter0;
reg    ap_block_state5_pp1_stage0_iter1;
wire    ap_block_state6_pp1_stage0_iter2;
reg    ap_block_pp1_stage0_11001;
reg   [12:0] i_col_V_0_reg_357;
reg   [12:0] col_V_reg_414;
reg   [12:0] col_V_reg_414_pp3_iter1_reg;
wire    ap_block_state12_pp3_stage0_iter0;
reg    ap_predicate_op142_read_state13;
reg    ap_block_state13_pp3_stage0_iter1;
wire    ap_block_state14_pp3_stage0_iter2;
wire    ap_block_state15_pp3_stage0_iter3;
wire    ap_block_state16_pp3_stage0_iter4;
wire    ap_block_state17_pp3_stage0_iter5;
wire    ap_block_state18_pp3_stage0_iter6;
wire    ap_block_state19_pp3_stage0_iter7;
wire    ap_block_state20_pp3_stage0_iter8;
wire    ap_block_state21_pp3_stage0_iter9;
wire    ap_block_state22_pp3_stage0_iter10;
reg    ap_block_state23_pp3_stage0_iter11;
reg    ap_block_pp3_stage0_11001;
reg   [12:0] col_V_reg_414_pp3_iter2_reg;
reg   [23:0] src_buf_V_0_0_reg_426;
reg   [23:0] p_Val2_s_reg_438;
reg   [23:0] src_buf_V_1_0_reg_473;
reg   [23:0] p_Val2_3_reg_485;
reg   [23:0] p_Val2_6_reg_508;
reg   [23:0] src_buf_V_2_0_reg_519;
reg   [23:0] reg_562;
wire   [13:0] empty_fu_570_p1;
reg   [13:0] empty_reg_1591;
wire   [1:0] init_row_ind_fu_574_p2;
wire    ap_CS_fsm_state2;
reg   [12:0] row_ind_V_0_0_load_reg_1601;
reg   [12:0] row_ind_V_1_0_load_reg_1606;
reg   [12:0] row_ind_V_2_0_load_reg_1611;
wire   [12:0] add_ln691_fu_614_p2;
reg   [12:0] add_ln691_reg_1619;
reg    ap_enable_reg_pp1_iter0;
wire   [0:0] icmp_ln878_fu_624_p2;
reg   [0:0] icmp_ln878_reg_1624_pp1_iter1_reg;
wire   [12:0] add_ln691_1_fu_634_p2;
reg   [12:0] add_ln691_1_reg_1628;
wire    ap_CS_fsm_pp2_stage0;
reg    ap_enable_reg_pp2_iter0;
wire    ap_block_state8_pp2_stage0_iter0;
wire    ap_block_state9_pp2_stage0_iter1;
wire    ap_block_pp2_stage0_11001;
wire   [0:0] icmp_ln878_1_fu_644_p2;
reg   [0:0] icmp_ln878_1_reg_1633;
wire   [16:0] op2_assign_fu_657_p2;
reg   [16:0] op2_assign_reg_1637;
wire    ap_CS_fsm_state10;
wire   [13:0] add_ln1616_fu_663_p2;
reg   [13:0] add_ln1616_reg_1642;
wire   [0:0] icmp_ln878_2_fu_678_p2;
reg   [0:0] icmp_ln878_2_reg_1647;
wire   [0:0] tobool_i_i_fu_684_p2;
reg   [0:0] tobool_i_i_reg_1651;
wire   [0:0] tobool_i_i_1116_fu_689_p2;
reg   [0:0] tobool_i_i_1116_reg_1658;
wire   [0:0] tobool_i_i_2125_fu_694_p2;
reg   [0:0] tobool_i_i_2125_reg_1665;
wire   [0:0] tobool_i_i_196_fu_699_p2;
reg   [0:0] tobool_i_i_196_reg_1672;
wire   [0:0] tobool_i_i_196_1_fu_704_p2;
reg   [0:0] tobool_i_i_196_1_reg_1679;
wire   [0:0] tobool_i_i_196_2_fu_709_p2;
reg   [0:0] tobool_i_i_196_2_reg_1686;
wire   [0:0] tobool_i_i_2104_fu_714_p2;
reg   [0:0] tobool_i_i_2104_reg_1693;
wire   [0:0] tobool_i_i_2104_1_fu_719_p2;
reg   [0:0] tobool_i_i_2104_1_reg_1700;
wire   [0:0] tobool_i_i_2104_2_fu_724_p2;
reg   [0:0] tobool_i_i_2104_2_reg_1707;
wire   [0:0] icmp_ln878_3_fu_737_p2;
wire    ap_CS_fsm_state11;
wire   [0:0] cmp_i_i115_i_fu_742_p2;
wire   [1:0] trunc_ln123_fu_747_p1;
reg   [1:0] trunc_ln123_reg_1722;
wire   [1:0] trunc_ln136_fu_751_p1;
reg   [1:0] trunc_ln136_reg_1726;
wire   [1:0] trunc_ln136_1_fu_755_p1;
reg   [1:0] trunc_ln136_1_reg_1731;
wire   [12:0] col_V_1_fu_759_p2;
reg   [12:0] col_V_1_reg_1736;
reg    ap_enable_reg_pp3_iter0;
wire   [0:0] icmp_ln878_4_fu_773_p2;
reg   [0:0] icmp_ln878_4_reg_1741_pp3_iter1_reg;
reg   [0:0] icmp_ln878_4_reg_1741_pp3_iter2_reg;
reg   [0:0] icmp_ln878_4_reg_1741_pp3_iter3_reg;
reg   [0:0] icmp_ln878_4_reg_1741_pp3_iter4_reg;
reg   [0:0] icmp_ln878_4_reg_1741_pp3_iter5_reg;
reg   [0:0] icmp_ln878_4_reg_1741_pp3_iter6_reg;
reg   [0:0] icmp_ln878_4_reg_1741_pp3_iter7_reg;
reg   [0:0] icmp_ln878_4_reg_1741_pp3_iter8_reg;
reg   [0:0] icmp_ln878_4_reg_1741_pp3_iter9_reg;
wire   [0:0] icmp_ln878_5_fu_778_p2;
reg   [0:0] icmp_ln878_5_reg_1745_pp3_iter1_reg;
reg   [0:0] icmp_ln878_5_reg_1745_pp3_iter2_reg;
reg   [0:0] icmp_ln878_5_reg_1745_pp3_iter3_reg;
reg   [0:0] icmp_ln878_5_reg_1745_pp3_iter4_reg;
wire   [0:0] icmp_ln882_fu_804_p2;
reg   [0:0] icmp_ln882_reg_1764_pp3_iter4_reg;
reg   [0:0] icmp_ln882_reg_1764_pp3_iter5_reg;
reg   [0:0] icmp_ln882_reg_1764_pp3_iter6_reg;
reg   [0:0] icmp_ln882_reg_1764_pp3_iter7_reg;
reg   [0:0] icmp_ln882_reg_1764_pp3_iter8_reg;
reg   [0:0] icmp_ln882_reg_1764_pp3_iter9_reg;
wire   [23:0] buf_V_0_q0;
reg   [23:0] buf_V_0_load_reg_1768;
reg    ap_enable_reg_pp3_iter4;
wire   [23:0] buf_V_1_q0;
reg   [23:0] buf_V_1_load_reg_1774;
wire   [23:0] buf_V_2_q0;
reg   [23:0] buf_V_2_load_reg_1780;
wire   [23:0] tmp_fu_819_p5;
wire   [23:0] src_buf_V_0_1_xfExtractPixels_1_9_15_s_fu_544_ap_return;
reg   [23:0] src_buf_V_0_1_reg_1791;
reg    ap_enable_reg_pp3_iter5;
wire   [7:0] max_V_1_fu_856_p3;
reg   [7:0] max_V_1_reg_1796;
wire   [7:0] p_Result_2_fu_863_p1;
reg   [7:0] p_Result_2_reg_1803;
wire   [7:0] max_V_10_fu_908_p3;
reg   [7:0] max_V_10_reg_1809;
reg   [7:0] p_Result_11_reg_1816;
wire   [7:0] max_V_19_fu_966_p3;
reg   [7:0] max_V_19_reg_1822;
reg   [7:0] p_Result_20_reg_1829;
wire   [7:0] max_V_2_fu_993_p3;
reg   [7:0] max_V_2_reg_1835;
wire   [7:0] max_V_11_fu_1009_p3;
reg   [7:0] max_V_11_reg_1842;
wire   [7:0] max_V_20_fu_1025_p3;
reg   [7:0] max_V_20_reg_1849;
wire   [23:0] src_buf_V_1_1_xfExtractPixels_1_9_15_s_fu_550_ap_return;
reg   [23:0] src_buf_V_1_1_reg_1856;
reg    ap_enable_reg_pp3_iter7;
wire   [7:0] max_V_3_fu_1047_p3;
reg   [7:0] max_V_3_reg_1861;
wire   [7:0] p_Result_4_fu_1053_p1;
reg   [7:0] p_Result_4_reg_1867;
wire   [0:0] icmp_ln886_3_fu_1057_p2;
reg   [0:0] icmp_ln886_3_reg_1872;
wire   [7:0] p_Result_5_fu_1063_p1;
reg   [7:0] p_Result_5_reg_1877;
wire   [7:0] max_V_12_fu_1089_p3;
reg   [7:0] max_V_12_reg_1883;
wire   [7:0] p_Result_13_fu_1095_p4;
reg   [7:0] p_Result_13_reg_1889;
wire   [0:0] icmp_ln886_11_fu_1105_p2;
reg   [0:0] icmp_ln886_11_reg_1894;
reg   [7:0] p_Result_14_reg_1899;
wire   [7:0] max_V_21_fu_1143_p3;
reg   [7:0] max_V_21_reg_1905;
wire   [7:0] p_Result_22_fu_1149_p4;
reg   [7:0] p_Result_22_reg_1911;
wire   [0:0] icmp_ln886_19_fu_1159_p2;
reg   [0:0] icmp_ln886_19_reg_1916;
reg   [7:0] p_Result_23_reg_1921;
wire   [7:0] max_V_5_fu_1198_p3;
reg   [7:0] max_V_5_reg_1927;
wire   [7:0] max_V_14_fu_1228_p3;
reg   [7:0] max_V_14_reg_1934;
wire   [7:0] max_V_23_fu_1258_p3;
reg   [7:0] max_V_23_reg_1941;
wire   [23:0] src_buf_V_2_1_xfExtractPixels_1_9_15_s_fu_556_ap_return;
reg   [23:0] src_buf_V_2_1_reg_1948;
reg    ap_enable_reg_pp3_iter9;
wire   [7:0] max_V_6_fu_1281_p3;
reg   [7:0] max_V_6_reg_1953;
wire   [7:0] p_Result_7_fu_1287_p1;
reg   [7:0] p_Result_7_reg_1959;
wire   [0:0] icmp_ln886_6_fu_1291_p2;
reg   [0:0] icmp_ln886_6_reg_1964;
wire   [7:0] p_Result_8_fu_1297_p1;
reg   [7:0] p_Result_8_reg_1969;
wire   [7:0] max_V_15_fu_1323_p3;
reg   [7:0] max_V_15_reg_1975;
wire   [7:0] p_Result_16_fu_1329_p4;
reg   [7:0] p_Result_16_reg_1981;
wire   [0:0] icmp_ln886_14_fu_1339_p2;
reg   [0:0] icmp_ln886_14_reg_1986;
reg   [7:0] p_Result_17_reg_1991;
wire   [7:0] max_V_24_fu_1377_p3;
reg   [7:0] max_V_24_reg_1997;
wire   [7:0] p_Result_25_fu_1383_p4;
reg   [7:0] p_Result_25_reg_2003;
wire   [0:0] icmp_ln886_22_fu_1393_p2;
reg   [0:0] icmp_ln886_22_reg_2008;
reg   [7:0] p_Result_26_reg_2013;
wire   [23:0] p_Result_27_fu_1499_p4;
reg   [23:0] p_Result_27_reg_2019;
wire   [12:0] row_V_1_fu_1509_p2;
wire    ap_CS_fsm_state24;
wire    ap_CS_fsm_state3;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state4;
reg    ap_enable_reg_pp1_iter2;
wire    ap_CS_fsm_state7;
wire    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state8;
reg    ap_enable_reg_pp2_iter1;
reg    ap_block_pp3_stage0_subdone;
reg    ap_condition_pp3_flush_enable;
reg    ap_enable_reg_pp3_iter2;
reg    ap_enable_reg_pp3_iter3;
reg    ap_enable_reg_pp3_iter6;
reg    ap_enable_reg_pp3_iter8;
reg    ap_enable_reg_pp3_iter10;
reg    ap_condition_pp3_exit_iter9_state21;
wire   [10:0] buf_V_0_address0;
reg    buf_V_0_ce0;
reg   [10:0] buf_V_0_address1;
reg    buf_V_0_ce1;
reg    buf_V_0_we1;
reg   [23:0] buf_V_0_d1;
wire   [10:0] buf_V_1_address0;
reg    buf_V_1_ce0;
reg   [10:0] buf_V_1_address1;
reg    buf_V_1_ce1;
reg    buf_V_1_we1;
reg   [23:0] buf_V_1_d1;
wire   [10:0] buf_V_2_address0;
reg    buf_V_2_ce0;
reg   [10:0] buf_V_2_address1;
reg    buf_V_2_ce1;
reg    buf_V_2_we1;
reg   [23:0] buf_V_2_d1;
wire    src_buf_V_0_1_xfExtractPixels_1_9_15_s_fu_544_ap_ready;
wire    src_buf_V_1_1_xfExtractPixels_1_9_15_s_fu_550_ap_ready;
wire    src_buf_V_2_1_xfExtractPixels_1_9_15_s_fu_556_ap_ready;
wire   [1:0] ap_phi_mux_row_ind_V_1_phi_fu_338_p4;
reg   [1:0] row_ind_V_1_reg_334;
wire   [0:0] icmp_ln259_fu_589_p2;
reg   [12:0] ap_phi_mux_i_col_046_0_phi_fu_349_p4;
reg   [12:0] ap_phi_mux_i_col_V_0_phi_fu_361_p4;
wire    ap_block_pp2_stage0;
reg   [12:0] row_ind_V_2_reg_369;
reg   [12:0] row_ind_V_0_reg_390;
reg   [12:0] row_ind_V_1_1_reg_379;
reg   [12:0] row_V_reg_402;
reg   [12:0] ap_phi_mux_col_V_phi_fu_418_p4;
reg   [23:0] ap_phi_mux_src_buf_V_0_0_phi_fu_430_p4;
reg   [23:0] ap_phi_mux_p_Val2_s_phi_fu_442_p4;
wire   [23:0] ap_phi_reg_pp3_iter0_arrayidx396_i180247_load_0_2_reg_450;
reg   [23:0] ap_phi_reg_pp3_iter1_arrayidx396_i180247_load_0_2_reg_450;
reg   [23:0] ap_phi_reg_pp3_iter2_arrayidx396_i180247_load_0_2_reg_450;
reg   [23:0] ap_phi_reg_pp3_iter3_arrayidx396_i180247_load_0_2_reg_450;
reg   [23:0] ap_phi_reg_pp3_iter4_arrayidx396_i180247_load_0_2_reg_450;
reg   [23:0] ap_phi_reg_pp3_iter5_arrayidx396_i180247_load_0_2_reg_450;
reg   [23:0] ap_phi_mux_buf_cop_V_0_0_phi_fu_466_p4;
wire   [23:0] buf_cop_V_0_fu_810_p5;
reg   [23:0] ap_phi_reg_pp3_iter5_buf_cop_V_0_0_reg_462;
wire   [23:0] ap_phi_reg_pp3_iter0_buf_cop_V_0_0_reg_462;
reg   [23:0] ap_phi_reg_pp3_iter1_buf_cop_V_0_0_reg_462;
reg   [23:0] ap_phi_reg_pp3_iter2_buf_cop_V_0_0_reg_462;
reg   [23:0] ap_phi_reg_pp3_iter3_buf_cop_V_0_0_reg_462;
reg   [23:0] ap_phi_reg_pp3_iter4_buf_cop_V_0_0_reg_462;
reg   [23:0] ap_phi_mux_src_buf_V_1_0_phi_fu_477_p4;
reg   [23:0] ap_phi_mux_p_Val2_3_phi_fu_489_p4;
wire   [23:0] ap_phi_reg_pp3_iter0_buf_cop_V_1_reg_497;
reg   [23:0] ap_phi_reg_pp3_iter1_buf_cop_V_1_reg_497;
reg   [23:0] ap_phi_reg_pp3_iter2_buf_cop_V_1_reg_497;
reg   [23:0] ap_phi_reg_pp3_iter3_buf_cop_V_1_reg_497;
reg   [23:0] ap_phi_reg_pp3_iter4_buf_cop_V_1_reg_497;
reg   [23:0] ap_phi_reg_pp3_iter5_buf_cop_V_1_reg_497;
reg   [23:0] ap_phi_reg_pp3_iter6_buf_cop_V_1_reg_497;
reg   [23:0] ap_phi_reg_pp3_iter7_buf_cop_V_1_reg_497;
reg   [23:0] ap_phi_mux_p_Val2_6_phi_fu_512_p4;
reg   [23:0] ap_phi_mux_src_buf_V_2_0_phi_fu_524_p4;
wire   [23:0] ap_phi_reg_pp3_iter0_buf_cop_V_2_reg_532;
reg   [23:0] ap_phi_reg_pp3_iter1_buf_cop_V_2_reg_532;
reg   [23:0] ap_phi_reg_pp3_iter2_buf_cop_V_2_reg_532;
reg   [23:0] ap_phi_reg_pp3_iter3_buf_cop_V_2_reg_532;
reg   [23:0] ap_phi_reg_pp3_iter4_buf_cop_V_2_reg_532;
reg   [23:0] ap_phi_reg_pp3_iter5_buf_cop_V_2_reg_532;
reg   [23:0] ap_phi_reg_pp3_iter6_buf_cop_V_2_reg_532;
reg   [23:0] ap_phi_reg_pp3_iter7_buf_cop_V_2_reg_532;
reg   [23:0] ap_phi_reg_pp3_iter8_buf_cop_V_2_reg_532;
reg   [23:0] ap_phi_reg_pp3_iter9_buf_cop_V_2_reg_532;
wire   [63:0] zext_ln534_fu_629_p1;
wire   [63:0] zext_ln534_1_fu_649_p1;
wire   [63:0] zext_ln534_3_fu_783_p1;
wire   [63:0] zext_ln534_2_fu_790_p1;
wire   [63:0] zext_ln1616_fu_797_p1;
reg   [12:0] row_ind_V_0_0_fu_124;
wire   [12:0] zext_ln301_fu_595_p1;
reg   [12:0] row_ind_V_1_0_fu_128;
reg   [12:0] row_ind_V_2_0_fu_132;
reg    ap_block_pp3_stage0_01001;
wire   [15:0] zext_ln878_fu_620_p1;
wire   [15:0] zext_ln878_1_fu_640_p1;
wire   [16:0] img_height_cast_fu_654_p1;
wire   [15:0] tmp_1_fu_668_p4;
wire   [16:0] zext_ln878_3_fu_733_p1;
wire   [15:0] zext_ln878_2_fu_729_p1;
wire   [13:0] zext_ln878_5_fu_769_p1;
wire   [15:0] zext_ln878_4_fu_765_p1;
wire   [7:0] p_Result_s_fu_827_p1;
wire   [7:0] p_Result_1_fu_838_p1;
wire   [7:0] max_V_fu_831_p3;
wire   [0:0] icmp_ln886_fu_842_p2;
wire   [7:0] select_ln56_fu_848_p3;
wire   [7:0] p_Result_9_fu_867_p4;
wire   [7:0] p_Result_10_fu_884_p4;
wire   [7:0] max_V_9_fu_877_p3;
wire   [0:0] icmp_ln886_8_fu_894_p2;
wire   [7:0] select_ln56_8_fu_900_p3;
wire   [7:0] p_Result_18_fu_925_p4;
wire   [7:0] p_Result_19_fu_942_p4;
wire   [7:0] max_V_18_fu_935_p3;
wire   [0:0] icmp_ln886_16_fu_952_p2;
wire   [7:0] select_ln56_16_fu_958_p3;
wire   [0:0] icmp_ln886_1_fu_983_p2;
wire   [7:0] select_ln56_1_fu_987_p3;
wire   [0:0] icmp_ln886_9_fu_999_p2;
wire   [7:0] select_ln56_9_fu_1003_p3;
wire   [0:0] icmp_ln886_17_fu_1015_p2;
wire   [7:0] select_ln56_17_fu_1019_p3;
wire   [7:0] p_Result_3_fu_1031_p1;
wire   [0:0] icmp_ln886_2_fu_1035_p2;
wire   [7:0] select_ln56_2_fu_1040_p3;
wire   [7:0] p_Result_12_fu_1067_p4;
wire   [0:0] icmp_ln886_10_fu_1077_p2;
wire   [7:0] select_ln56_10_fu_1082_p3;
wire   [7:0] p_Result_21_fu_1121_p4;
wire   [0:0] icmp_ln886_18_fu_1131_p2;
wire   [7:0] select_ln56_18_fu_1136_p3;
wire   [7:0] select_ln56_3_fu_1175_p3;
wire   [7:0] max_V_4_fu_1180_p3;
wire   [0:0] icmp_ln886_4_fu_1186_p2;
wire   [7:0] select_ln56_4_fu_1191_p3;
wire   [7:0] select_ln56_11_fu_1205_p3;
wire   [7:0] max_V_13_fu_1210_p3;
wire   [0:0] icmp_ln886_12_fu_1216_p2;
wire   [7:0] select_ln56_12_fu_1221_p3;
wire   [7:0] select_ln56_19_fu_1235_p3;
wire   [7:0] max_V_22_fu_1240_p3;
wire   [0:0] icmp_ln886_20_fu_1246_p2;
wire   [7:0] select_ln56_20_fu_1251_p3;
wire   [7:0] p_Result_6_fu_1265_p1;
wire   [0:0] icmp_ln886_5_fu_1269_p2;
wire   [7:0] select_ln56_5_fu_1274_p3;
wire   [7:0] p_Result_15_fu_1301_p4;
wire   [0:0] icmp_ln886_13_fu_1311_p2;
wire   [7:0] select_ln56_13_fu_1316_p3;
wire   [7:0] p_Result_24_fu_1355_p4;
wire   [0:0] icmp_ln886_21_fu_1365_p2;
wire   [7:0] select_ln56_21_fu_1370_p3;
wire   [7:0] select_ln56_6_fu_1409_p3;
wire   [7:0] max_V_7_fu_1414_p3;
wire   [0:0] icmp_ln886_7_fu_1420_p2;
wire   [7:0] select_ln56_7_fu_1425_p3;
wire   [7:0] select_ln56_14_fu_1439_p3;
wire   [7:0] max_V_16_fu_1444_p3;
wire   [0:0] icmp_ln886_15_fu_1450_p2;
wire   [7:0] select_ln56_15_fu_1455_p3;
wire   [7:0] select_ln56_22_fu_1469_p3;
wire   [7:0] max_V_25_fu_1474_p3;
wire   [0:0] icmp_ln886_23_fu_1480_p2;
wire   [7:0] select_ln56_23_fu_1485_p3;
wire   [7:0] max_V_26_fu_1492_p3;
wire   [7:0] max_V_17_fu_1462_p3;
wire   [7:0] max_V_8_fu_1432_p3;
reg   [9:0] ap_NS_fsm;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_idle_pp3;
wire    ap_enable_pp3;
reg    ap_condition_652;
reg    ap_condition_288;
reg    ap_condition_86;
reg    ap_condition_165;
reg    ap_condition_1485;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 10'd1;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter11 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter4 = 1'b0;
#0 ap_enable_reg_pp3_iter5 = 1'b0;
#0 ap_enable_reg_pp3_iter7 = 1'b0;
#0 ap_enable_reg_pp3_iter9 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter2 = 1'b0;
#0 ap_enable_reg_pp3_iter3 = 1'b0;
#0 ap_enable_reg_pp3_iter6 = 1'b0;
#0 ap_enable_reg_pp3_iter8 = 1'b0;
#0 ap_enable_reg_pp3_iter10 = 1'b0;
end

dilate_accel_xfdilate_1080_1920_3_9_1_0_1921_3_3_s_buf_V_0 #(
    .DataWidth( 24 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
buf_V_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_V_0_address0),
    .ce0(buf_V_0_ce0),
    .q0(buf_V_0_q0),
    .address1(buf_V_0_address1),
    .ce1(buf_V_0_ce1),
    .we1(buf_V_0_we1),
    .d1(buf_V_0_d1)
);

dilate_accel_xfdilate_1080_1920_3_9_1_0_1921_3_3_s_buf_V_0 #(
    .DataWidth( 24 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
buf_V_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_V_1_address0),
    .ce0(buf_V_1_ce0),
    .q0(buf_V_1_q0),
    .address1(buf_V_1_address1),
    .ce1(buf_V_1_ce1),
    .we1(buf_V_1_we1),
    .d1(buf_V_1_d1)
);

dilate_accel_xfdilate_1080_1920_3_9_1_0_1921_3_3_s_buf_V_0 #(
    .DataWidth( 24 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
buf_V_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_V_2_address0),
    .ce0(buf_V_2_ce0),
    .q0(buf_V_2_q0),
    .address1(buf_V_2_address1),
    .ce1(buf_V_2_ce1),
    .we1(buf_V_2_we1),
    .d1(buf_V_2_d1)
);

dilate_accel_xfExtractPixels_1_9_15_s src_buf_V_0_1_xfExtractPixels_1_9_15_s_fu_544(
    .ap_ready(src_buf_V_0_1_xfExtractPixels_1_9_15_s_fu_544_ap_ready),
    .p_read1(ap_phi_mux_buf_cop_V_0_0_phi_fu_466_p4),
    .ap_return(src_buf_V_0_1_xfExtractPixels_1_9_15_s_fu_544_ap_return)
);

dilate_accel_xfExtractPixels_1_9_15_s src_buf_V_1_1_xfExtractPixels_1_9_15_s_fu_550(
    .ap_ready(src_buf_V_1_1_xfExtractPixels_1_9_15_s_fu_550_ap_ready),
    .p_read1(ap_phi_reg_pp3_iter7_buf_cop_V_1_reg_497),
    .ap_return(src_buf_V_1_1_xfExtractPixels_1_9_15_s_fu_550_ap_return)
);

dilate_accel_xfExtractPixels_1_9_15_s src_buf_V_2_1_xfExtractPixels_1_9_15_s_fu_556(
    .ap_ready(src_buf_V_2_1_xfExtractPixels_1_9_15_s_fu_556_ap_ready),
    .p_read1(ap_phi_reg_pp3_iter9_buf_cop_V_2_reg_532),
    .ap_return(src_buf_V_2_1_xfExtractPixels_1_9_15_s_fu_556_ap_return)
);

dilate_accel_mux_32_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 24 ),
    .din2_WIDTH( 24 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 24 ))
mux_32_24_1_1_U27(
    .din0(buf_V_0_load_reg_1768),
    .din1(buf_V_1_load_reg_1774),
    .din2(buf_V_2_load_reg_1780),
    .din3(trunc_ln136_reg_1726),
    .dout(buf_cop_V_0_fu_810_p5)
);

dilate_accel_mux_32_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 24 ),
    .din2_WIDTH( 24 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 24 ))
mux_32_24_1_1_U28(
    .din0(buf_V_0_load_reg_1768),
    .din1(buf_V_1_load_reg_1774),
    .din2(buf_V_2_load_reg_1780),
    .din3(trunc_ln136_1_reg_1731),
    .dout(tmp_fu_819_p5)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_condition_pp1_exit_iter0_state4))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state4)) begin
                ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state4);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end else if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_enable_reg_pp1_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_condition_pp2_exit_iter0_state8) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state7)) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_condition_pp2_exit_iter0_state8))) begin
            ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state8);
        end else if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
        end else if ((1'b1 == ap_CS_fsm_state7)) begin
            ap_enable_reg_pp2_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp3_flush_enable)) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if (((icmp_ln878_3_fu_737_p2 == 1'd1) & (icmp_ln878_2_reg_1647 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp3_exit_iter9_state21)) begin
                ap_enable_reg_pp3_iter10 <= ap_enable_reg_pp3_iter8;
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp3_iter10 <= ap_enable_reg_pp3_iter9;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter11 <= ap_enable_reg_pp3_iter10;
        end else if (((icmp_ln878_3_fu_737_p2 == 1'd1) & (icmp_ln878_2_reg_1647 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
            ap_enable_reg_pp3_iter11 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter3 <= ap_enable_reg_pp3_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter4 <= ap_enable_reg_pp3_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter5 <= ap_enable_reg_pp3_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter6 <= ap_enable_reg_pp3_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter7 <= ap_enable_reg_pp3_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter8 <= ap_enable_reg_pp3_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter9 <= ap_enable_reg_pp3_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_288)) begin
        if ((1'b1 == ap_condition_652)) begin
            ap_phi_reg_pp3_iter1_arrayidx396_i180247_load_0_2_reg_450 <= 24'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp3_iter1_arrayidx396_i180247_load_0_2_reg_450 <= ap_phi_reg_pp3_iter0_arrayidx396_i180247_load_0_2_reg_450;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_288)) begin
        if (((icmp_ln878_5_fu_778_p2 == 1'd0) & (icmp_ln878_4_fu_773_p2 == 1'd1))) begin
            ap_phi_reg_pp3_iter1_buf_cop_V_0_0_reg_462 <= 24'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp3_iter1_buf_cop_V_0_0_reg_462 <= ap_phi_reg_pp3_iter0_buf_cop_V_0_0_reg_462;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_288)) begin
        if (((icmp_ln878_5_fu_778_p2 == 1'd0) & (icmp_ln878_4_fu_773_p2 == 1'd1))) begin
            ap_phi_reg_pp3_iter1_buf_cop_V_1_reg_497 <= 24'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp3_iter1_buf_cop_V_1_reg_497 <= ap_phi_reg_pp3_iter0_buf_cop_V_1_reg_497;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_288)) begin
        if (((icmp_ln878_5_fu_778_p2 == 1'd0) & (icmp_ln878_4_fu_773_p2 == 1'd1))) begin
            ap_phi_reg_pp3_iter1_buf_cop_V_2_reg_532 <= 24'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp3_iter1_buf_cop_V_2_reg_532 <= ap_phi_reg_pp3_iter0_buf_cop_V_2_reg_532;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_165)) begin
        if ((1'b1 == ap_condition_86)) begin
            ap_phi_reg_pp3_iter2_arrayidx396_i180247_load_0_2_reg_450 <= img_in_419_dout;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp3_iter2_arrayidx396_i180247_load_0_2_reg_450 <= ap_phi_reg_pp3_iter1_arrayidx396_i180247_load_0_2_reg_450;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter5 == 1'b1))) begin
        if (((icmp_ln878_5_reg_1745_pp3_iter4_reg == 1'd1) & (icmp_ln878_4_reg_1741_pp3_iter4_reg == 1'd1))) begin
            ap_phi_reg_pp3_iter6_buf_cop_V_1_reg_497 <= tmp_fu_819_p5;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp3_iter6_buf_cop_V_1_reg_497 <= ap_phi_reg_pp3_iter5_buf_cop_V_1_reg_497;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter5 == 1'b1))) begin
        if (((icmp_ln878_5_reg_1745_pp3_iter4_reg == 1'd1) & (icmp_ln878_4_reg_1741_pp3_iter4_reg == 1'd1))) begin
            ap_phi_reg_pp3_iter6_buf_cop_V_2_reg_532 <= ap_phi_reg_pp3_iter5_arrayidx396_i180247_load_0_2_reg_450;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp3_iter6_buf_cop_V_2_reg_532 <= ap_phi_reg_pp3_iter5_buf_cop_V_2_reg_532;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln878_4_reg_1741 == 1'd1) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        col_V_reg_414 <= col_V_1_reg_1736;
    end else if (((icmp_ln878_3_fu_737_p2 == 1'd1) & (icmp_ln878_2_reg_1647 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        col_V_reg_414 <= 13'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        i_col_046_0_reg_345 <= 13'd0;
    end else if (((icmp_ln878_reg_1624 == 1'd1) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        i_col_046_0_reg_345 <= add_ln691_reg_1619;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        i_col_V_0_reg_357 <= 13'd0;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (icmp_ln878_1_reg_1633 == 1'd1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        i_col_V_0_reg_357 <= add_ln691_1_reg_1628;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter8 == 1'b1) & (icmp_ln878_4_reg_1741_pp3_iter7_reg == 1'd1))) begin
        p_Val2_3_reg_485 <= src_buf_V_1_0_reg_473;
    end else if (((icmp_ln878_3_fu_737_p2 == 1'd1) & (icmp_ln878_2_reg_1647 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        p_Val2_3_reg_485 <= 24'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter10 == 1'b1) & (icmp_ln878_4_reg_1741_pp3_iter9_reg == 1'd1))) begin
        p_Val2_6_reg_508 <= src_buf_V_2_0_reg_519;
    end else if (((icmp_ln878_3_fu_737_p2 == 1'd1) & (icmp_ln878_2_reg_1647 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        p_Val2_6_reg_508 <= 24'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter6 == 1'b1) & (icmp_ln878_4_reg_1741_pp3_iter5_reg == 1'd1))) begin
        p_Val2_s_reg_438 <= src_buf_V_0_0_reg_426;
    end else if (((icmp_ln878_3_fu_737_p2 == 1'd1) & (icmp_ln878_2_reg_1647 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        p_Val2_s_reg_438 <= 24'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        row_V_reg_402 <= row_V_1_fu_1509_p2;
    end else if (((icmp_ln878_2_fu_678_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        row_V_reg_402 <= 13'd1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        row_ind_V_0_reg_390 <= row_ind_V_1_1_reg_379;
    end else if (((icmp_ln878_2_fu_678_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        row_ind_V_0_reg_390 <= row_ind_V_0_0_load_reg_1601;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        row_ind_V_1_1_reg_379 <= row_ind_V_2_reg_369;
    end else if (((icmp_ln878_2_fu_678_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        row_ind_V_1_1_reg_379 <= row_ind_V_1_0_load_reg_1606;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln259_fu_589_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        row_ind_V_1_reg_334 <= init_row_ind_fu_574_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        row_ind_V_1_reg_334 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        row_ind_V_2_reg_369 <= row_ind_V_0_reg_390;
    end else if (((icmp_ln878_2_fu_678_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        row_ind_V_2_reg_369 <= row_ind_V_2_0_load_reg_1611;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter6 == 1'b1) & (icmp_ln878_4_reg_1741_pp3_iter5_reg == 1'd1))) begin
        src_buf_V_0_0_reg_426 <= src_buf_V_0_1_reg_1791;
    end else if (((icmp_ln878_3_fu_737_p2 == 1'd1) & (icmp_ln878_2_reg_1647 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        src_buf_V_0_0_reg_426 <= 24'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter8 == 1'b1) & (icmp_ln878_4_reg_1741_pp3_iter7_reg == 1'd1))) begin
        src_buf_V_1_0_reg_473 <= src_buf_V_1_1_reg_1856;
    end else if (((icmp_ln878_3_fu_737_p2 == 1'd1) & (icmp_ln878_2_reg_1647 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        src_buf_V_1_0_reg_473 <= 24'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter10 == 1'b1) & (icmp_ln878_4_reg_1741_pp3_iter9_reg == 1'd1))) begin
        src_buf_V_2_0_reg_519 <= src_buf_V_2_1_reg_1948;
    end else if (((icmp_ln878_3_fu_737_p2 == 1'd1) & (icmp_ln878_2_reg_1647 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        src_buf_V_2_0_reg_519 <= 24'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        add_ln1616_reg_1642 <= add_ln1616_fu_663_p2;
        icmp_ln878_2_reg_1647 <= icmp_ln878_2_fu_678_p2;
        op2_assign_reg_1637 <= op2_assign_fu_657_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        add_ln691_1_reg_1628 <= add_ln691_1_fu_634_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        add_ln691_reg_1619 <= add_ln691_fu_614_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        ap_phi_reg_pp3_iter2_buf_cop_V_0_0_reg_462 <= ap_phi_reg_pp3_iter1_buf_cop_V_0_0_reg_462;
        ap_phi_reg_pp3_iter2_buf_cop_V_1_reg_497 <= ap_phi_reg_pp3_iter1_buf_cop_V_1_reg_497;
        ap_phi_reg_pp3_iter2_buf_cop_V_2_reg_532 <= ap_phi_reg_pp3_iter1_buf_cop_V_2_reg_532;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter2 == 1'b1))) begin
        ap_phi_reg_pp3_iter3_arrayidx396_i180247_load_0_2_reg_450 <= ap_phi_reg_pp3_iter2_arrayidx396_i180247_load_0_2_reg_450;
        ap_phi_reg_pp3_iter3_buf_cop_V_0_0_reg_462 <= ap_phi_reg_pp3_iter2_buf_cop_V_0_0_reg_462;
        ap_phi_reg_pp3_iter3_buf_cop_V_1_reg_497 <= ap_phi_reg_pp3_iter2_buf_cop_V_1_reg_497;
        ap_phi_reg_pp3_iter3_buf_cop_V_2_reg_532 <= ap_phi_reg_pp3_iter2_buf_cop_V_2_reg_532;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter3 == 1'b1))) begin
        ap_phi_reg_pp3_iter4_arrayidx396_i180247_load_0_2_reg_450 <= ap_phi_reg_pp3_iter3_arrayidx396_i180247_load_0_2_reg_450;
        ap_phi_reg_pp3_iter4_buf_cop_V_0_0_reg_462 <= ap_phi_reg_pp3_iter3_buf_cop_V_0_0_reg_462;
        ap_phi_reg_pp3_iter4_buf_cop_V_1_reg_497 <= ap_phi_reg_pp3_iter3_buf_cop_V_1_reg_497;
        ap_phi_reg_pp3_iter4_buf_cop_V_2_reg_532 <= ap_phi_reg_pp3_iter3_buf_cop_V_2_reg_532;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter4 == 1'b1))) begin
        ap_phi_reg_pp3_iter5_arrayidx396_i180247_load_0_2_reg_450 <= ap_phi_reg_pp3_iter4_arrayidx396_i180247_load_0_2_reg_450;
        ap_phi_reg_pp3_iter5_buf_cop_V_0_0_reg_462 <= ap_phi_reg_pp3_iter4_buf_cop_V_0_0_reg_462;
        ap_phi_reg_pp3_iter5_buf_cop_V_1_reg_497 <= ap_phi_reg_pp3_iter4_buf_cop_V_1_reg_497;
        ap_phi_reg_pp3_iter5_buf_cop_V_2_reg_532 <= ap_phi_reg_pp3_iter4_buf_cop_V_2_reg_532;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter6 == 1'b1))) begin
        ap_phi_reg_pp3_iter7_buf_cop_V_1_reg_497 <= ap_phi_reg_pp3_iter6_buf_cop_V_1_reg_497;
        ap_phi_reg_pp3_iter7_buf_cop_V_2_reg_532 <= ap_phi_reg_pp3_iter6_buf_cop_V_2_reg_532;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter7 == 1'b1))) begin
        ap_phi_reg_pp3_iter8_buf_cop_V_2_reg_532 <= ap_phi_reg_pp3_iter7_buf_cop_V_2_reg_532;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter8 == 1'b1))) begin
        ap_phi_reg_pp3_iter9_buf_cop_V_2_reg_532 <= ap_phi_reg_pp3_iter8_buf_cop_V_2_reg_532;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter4 == 1'b1) & (icmp_ln878_5_reg_1745_pp3_iter3_reg == 1'd1) & (icmp_ln878_4_reg_1741_pp3_iter3_reg == 1'd1))) begin
        buf_V_0_load_reg_1768 <= buf_V_0_q0;
        buf_V_1_load_reg_1774 <= buf_V_1_q0;
        buf_V_2_load_reg_1780 <= buf_V_2_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln878_3_fu_737_p2 == 1'd1) & (icmp_ln878_2_reg_1647 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        cmp_i_i115_i_reg_1718 <= cmp_i_i115_i_fu_742_p2;
        trunc_ln123_reg_1722 <= trunc_ln123_fu_747_p1;
        trunc_ln136_1_reg_1731 <= trunc_ln136_1_fu_755_p1;
        trunc_ln136_reg_1726 <= trunc_ln136_fu_751_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        col_V_1_reg_1736 <= col_V_1_fu_759_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        col_V_reg_414_pp3_iter1_reg <= col_V_reg_414;
        icmp_ln878_4_reg_1741 <= icmp_ln878_4_fu_773_p2;
        icmp_ln878_4_reg_1741_pp3_iter1_reg <= icmp_ln878_4_reg_1741;
        icmp_ln878_5_reg_1745_pp3_iter1_reg <= icmp_ln878_5_reg_1745;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp3_stage0_11001)) begin
        col_V_reg_414_pp3_iter2_reg <= col_V_reg_414_pp3_iter1_reg;
        icmp_ln878_4_reg_1741_pp3_iter2_reg <= icmp_ln878_4_reg_1741_pp3_iter1_reg;
        icmp_ln878_4_reg_1741_pp3_iter3_reg <= icmp_ln878_4_reg_1741_pp3_iter2_reg;
        icmp_ln878_4_reg_1741_pp3_iter4_reg <= icmp_ln878_4_reg_1741_pp3_iter3_reg;
        icmp_ln878_4_reg_1741_pp3_iter5_reg <= icmp_ln878_4_reg_1741_pp3_iter4_reg;
        icmp_ln878_4_reg_1741_pp3_iter6_reg <= icmp_ln878_4_reg_1741_pp3_iter5_reg;
        icmp_ln878_4_reg_1741_pp3_iter7_reg <= icmp_ln878_4_reg_1741_pp3_iter6_reg;
        icmp_ln878_4_reg_1741_pp3_iter8_reg <= icmp_ln878_4_reg_1741_pp3_iter7_reg;
        icmp_ln878_4_reg_1741_pp3_iter9_reg <= icmp_ln878_4_reg_1741_pp3_iter8_reg;
        icmp_ln878_5_reg_1745_pp3_iter2_reg <= icmp_ln878_5_reg_1745_pp3_iter1_reg;
        icmp_ln878_5_reg_1745_pp3_iter3_reg <= icmp_ln878_5_reg_1745_pp3_iter2_reg;
        icmp_ln878_5_reg_1745_pp3_iter4_reg <= icmp_ln878_5_reg_1745_pp3_iter3_reg;
        icmp_ln882_reg_1764_pp3_iter10_reg <= icmp_ln882_reg_1764_pp3_iter9_reg;
        icmp_ln882_reg_1764_pp3_iter4_reg <= icmp_ln882_reg_1764;
        icmp_ln882_reg_1764_pp3_iter5_reg <= icmp_ln882_reg_1764_pp3_iter4_reg;
        icmp_ln882_reg_1764_pp3_iter6_reg <= icmp_ln882_reg_1764_pp3_iter5_reg;
        icmp_ln882_reg_1764_pp3_iter7_reg <= icmp_ln882_reg_1764_pp3_iter6_reg;
        icmp_ln882_reg_1764_pp3_iter8_reg <= icmp_ln882_reg_1764_pp3_iter7_reg;
        icmp_ln882_reg_1764_pp3_iter9_reg <= icmp_ln882_reg_1764_pp3_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        empty_reg_1591 <= empty_fu_570_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        i_col_046_0_reg_345_pp1_iter1_reg <= i_col_046_0_reg_345;
        icmp_ln878_reg_1624 <= icmp_ln878_fu_624_p2;
        icmp_ln878_reg_1624_pp1_iter1_reg <= icmp_ln878_reg_1624;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        icmp_ln878_1_reg_1633 <= icmp_ln878_1_fu_644_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln878_4_fu_773_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        icmp_ln878_5_reg_1745 <= icmp_ln878_5_fu_778_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln878_4_reg_1741_pp3_iter2_reg == 1'd1))) begin
        icmp_ln882_reg_1764 <= icmp_ln882_fu_804_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln878_4_reg_1741_pp3_iter6_reg == 1'd1) & (tobool_i_i_196_1_reg_1679 == 1'd1))) begin
        icmp_ln886_11_reg_1894 <= icmp_ln886_11_fu_1105_p2;
        icmp_ln886_19_reg_1916 <= icmp_ln886_19_fu_1159_p2;
        icmp_ln886_3_reg_1872 <= icmp_ln886_3_fu_1057_p2;
        p_Result_13_reg_1889 <= {{ap_phi_mux_src_buf_V_1_0_phi_fu_477_p4[15:8]}};
        p_Result_22_reg_1911 <= {{ap_phi_mux_src_buf_V_1_0_phi_fu_477_p4[23:16]}};
        p_Result_4_reg_1867 <= p_Result_4_fu_1053_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln878_4_reg_1741_pp3_iter8_reg == 1'd1) & (tobool_i_i_2104_1_reg_1700 == 1'd1))) begin
        icmp_ln886_14_reg_1986 <= icmp_ln886_14_fu_1339_p2;
        icmp_ln886_22_reg_2008 <= icmp_ln886_22_fu_1393_p2;
        icmp_ln886_6_reg_1964 <= icmp_ln886_6_fu_1291_p2;
        p_Result_16_reg_1981 <= {{ap_phi_mux_src_buf_V_2_0_phi_fu_524_p4[15:8]}};
        p_Result_25_reg_2003 <= {{ap_phi_mux_src_buf_V_2_0_phi_fu_524_p4[23:16]}};
        p_Result_7_reg_1959 <= p_Result_7_fu_1287_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln878_4_reg_1741_pp3_iter4_reg == 1'd1))) begin
        max_V_10_reg_1809 <= max_V_10_fu_908_p3;
        max_V_19_reg_1822 <= max_V_19_fu_966_p3;
        max_V_1_reg_1796 <= max_V_1_fu_856_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln878_4_reg_1741_pp3_iter5_reg == 1'd1))) begin
        max_V_11_reg_1842 <= max_V_11_fu_1009_p3;
        max_V_20_reg_1849 <= max_V_20_fu_1025_p3;
        max_V_2_reg_1835 <= max_V_2_fu_993_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln878_4_reg_1741_pp3_iter6_reg == 1'd1))) begin
        max_V_12_reg_1883 <= max_V_12_fu_1089_p3;
        max_V_21_reg_1905 <= max_V_21_fu_1143_p3;
        max_V_3_reg_1861 <= max_V_3_fu_1047_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln878_4_reg_1741_pp3_iter7_reg == 1'd1))) begin
        max_V_14_reg_1934 <= max_V_14_fu_1228_p3;
        max_V_23_reg_1941 <= max_V_23_fu_1258_p3;
        max_V_5_reg_1927 <= max_V_5_fu_1198_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln878_4_reg_1741_pp3_iter8_reg == 1'd1))) begin
        max_V_15_reg_1975 <= max_V_15_fu_1323_p3;
        max_V_24_reg_1997 <= max_V_24_fu_1377_p3;
        max_V_6_reg_1953 <= max_V_6_fu_1281_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln878_4_reg_1741_pp3_iter4_reg == 1'd1) & (tobool_i_i_2125_reg_1665 == 1'd1))) begin
        p_Result_11_reg_1816 <= {{src_buf_V_0_1_xfExtractPixels_1_9_15_s_fu_544_ap_return[15:8]}};
        p_Result_20_reg_1829 <= {{src_buf_V_0_1_xfExtractPixels_1_9_15_s_fu_544_ap_return[23:16]}};
        p_Result_2_reg_1803 <= p_Result_2_fu_863_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln878_4_reg_1741_pp3_iter6_reg == 1'd1) & (tobool_i_i_196_2_reg_1686 == 1'd1))) begin
        p_Result_14_reg_1899 <= {{src_buf_V_1_1_xfExtractPixels_1_9_15_s_fu_550_ap_return[15:8]}};
        p_Result_23_reg_1921 <= {{src_buf_V_1_1_xfExtractPixels_1_9_15_s_fu_550_ap_return[23:16]}};
        p_Result_5_reg_1877 <= p_Result_5_fu_1063_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln878_4_reg_1741_pp3_iter8_reg == 1'd1) & (tobool_i_i_2104_2_reg_1707 == 1'd1))) begin
        p_Result_17_reg_1991 <= {{src_buf_V_2_1_xfExtractPixels_1_9_15_s_fu_556_ap_return[15:8]}};
        p_Result_26_reg_2013 <= {{src_buf_V_2_1_xfExtractPixels_1_9_15_s_fu_556_ap_return[23:16]}};
        p_Result_8_reg_1969 <= p_Result_8_fu_1297_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln878_4_reg_1741_pp3_iter9_reg == 1'd1))) begin
        p_Result_27_reg_2019 <= p_Result_27_fu_1499_p4;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_predicate_op142_read_state13 == 1'b1)) | ((icmp_ln878_reg_1624 == 1'd1) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        reg_562 <= img_in_419_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln259_fu_589_p2 == 1'd0) & (ap_phi_mux_row_ind_V_1_phi_fu_338_p4 == 2'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        row_ind_V_0_0_fu_124[1 : 0] <= zext_ln301_fu_595_p1[1 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        row_ind_V_0_0_load_reg_1601[1 : 0] <= row_ind_V_0_0_fu_124[1 : 0];
        row_ind_V_1_0_load_reg_1606[1 : 0] <= row_ind_V_1_0_fu_128[1 : 0];
        row_ind_V_2_0_load_reg_1611[1 : 0] <= row_ind_V_2_0_fu_132[1 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln259_fu_589_p2 == 1'd0) & (ap_phi_mux_row_ind_V_1_phi_fu_338_p4 == 2'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        row_ind_V_1_0_fu_128[1 : 0] <= zext_ln301_fu_595_p1[1 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((~(ap_phi_mux_row_ind_V_1_phi_fu_338_p4 == 2'd1) & ~(ap_phi_mux_row_ind_V_1_phi_fu_338_p4 == 2'd0) & (icmp_ln259_fu_589_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        row_ind_V_2_0_fu_132[1 : 0] <= zext_ln301_fu_595_p1[1 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter5 == 1'b1) & (icmp_ln878_4_reg_1741_pp3_iter4_reg == 1'd1))) begin
        src_buf_V_0_1_reg_1791 <= src_buf_V_0_1_xfExtractPixels_1_9_15_s_fu_544_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter7 == 1'b1) & (icmp_ln878_4_reg_1741_pp3_iter6_reg == 1'd1))) begin
        src_buf_V_1_1_reg_1856 <= src_buf_V_1_1_xfExtractPixels_1_9_15_s_fu_550_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter9 == 1'b1) & (icmp_ln878_4_reg_1741_pp3_iter8_reg == 1'd1))) begin
        src_buf_V_2_1_reg_1948 <= src_buf_V_2_1_xfExtractPixels_1_9_15_s_fu_556_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln878_2_fu_678_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        tobool_i_i_1116_reg_1658 <= tobool_i_i_1116_fu_689_p2;
        tobool_i_i_196_1_reg_1679 <= tobool_i_i_196_1_fu_704_p2;
        tobool_i_i_196_2_reg_1686 <= tobool_i_i_196_2_fu_709_p2;
        tobool_i_i_196_reg_1672 <= tobool_i_i_196_fu_699_p2;
        tobool_i_i_2104_1_reg_1700 <= tobool_i_i_2104_1_fu_719_p2;
        tobool_i_i_2104_2_reg_1707 <= tobool_i_i_2104_2_fu_724_p2;
        tobool_i_i_2104_reg_1693 <= tobool_i_i_2104_fu_714_p2;
        tobool_i_i_2125_reg_1665 <= tobool_i_i_2125_fu_694_p2;
        tobool_i_i_reg_1651 <= tobool_i_i_fu_684_p2;
    end
end

always @ (*) begin
    if ((icmp_ln878_fu_624_p2 == 1'd0)) begin
        ap_condition_pp1_exit_iter0_state4 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state4 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln878_1_fu_644_p2 == 1'd0)) begin
        ap_condition_pp2_exit_iter0_state8 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state8 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter8 == 1'b0) & (ap_enable_reg_pp3_iter9 == 1'b1))) begin
        ap_condition_pp3_exit_iter9_state21 = 1'b1;
    end else begin
        ap_condition_pp3_exit_iter9_state21 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0_subdone) & (icmp_ln878_4_fu_773_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        ap_condition_pp3_flush_enable = 1'b1;
    end else begin
        ap_condition_pp3_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state11) & ((icmp_ln878_3_fu_737_p2 == 1'd0) | (icmp_ln878_2_reg_1647 == 1'd1))) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter11 == 1'b0) & (ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter10 == 1'b0) & (ap_enable_reg_pp3_iter8 == 1'b0) & (ap_enable_reg_pp3_iter6 == 1'b0) & (ap_enable_reg_pp3_iter3 == 1'b0) & (ap_enable_reg_pp3_iter2 == 1'b0) & (ap_enable_reg_pp3_iter9 == 1'b0) & (ap_enable_reg_pp3_iter7 == 1'b0) & (ap_enable_reg_pp3_iter5 == 1'b0) & (ap_enable_reg_pp3_iter4 == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b0))) begin
        ap_idle_pp3 = 1'b1;
    end else begin
        ap_idle_pp3 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln878_5_reg_1745_pp3_iter4_reg == 1'd1) & (icmp_ln878_4_reg_1741_pp3_iter4_reg == 1'd1))) begin
        ap_phi_mux_buf_cop_V_0_0_phi_fu_466_p4 = buf_cop_V_0_fu_810_p5;
    end else begin
        ap_phi_mux_buf_cop_V_0_0_phi_fu_466_p4 = ap_phi_reg_pp3_iter5_buf_cop_V_0_0_reg_462;
    end
end

always @ (*) begin
    if (((icmp_ln878_4_reg_1741 == 1'd1) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        ap_phi_mux_col_V_phi_fu_418_p4 = col_V_1_reg_1736;
    end else begin
        ap_phi_mux_col_V_phi_fu_418_p4 = col_V_reg_414;
    end
end

always @ (*) begin
    if (((icmp_ln878_reg_1624 == 1'd1) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_phi_mux_i_col_046_0_phi_fu_349_p4 = add_ln691_reg_1619;
    end else begin
        ap_phi_mux_i_col_046_0_phi_fu_349_p4 = i_col_046_0_reg_345;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (icmp_ln878_1_reg_1633 == 1'd1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        ap_phi_mux_i_col_V_0_phi_fu_361_p4 = add_ln691_1_reg_1628;
    end else begin
        ap_phi_mux_i_col_V_0_phi_fu_361_p4 = i_col_V_0_reg_357;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter8 == 1'b1) & (icmp_ln878_4_reg_1741_pp3_iter7_reg == 1'd1))) begin
        ap_phi_mux_p_Val2_3_phi_fu_489_p4 = src_buf_V_1_0_reg_473;
    end else begin
        ap_phi_mux_p_Val2_3_phi_fu_489_p4 = p_Val2_3_reg_485;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter10 == 1'b1) & (icmp_ln878_4_reg_1741_pp3_iter9_reg == 1'd1))) begin
        ap_phi_mux_p_Val2_6_phi_fu_512_p4 = src_buf_V_2_0_reg_519;
    end else begin
        ap_phi_mux_p_Val2_6_phi_fu_512_p4 = p_Val2_6_reg_508;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter6 == 1'b1) & (icmp_ln878_4_reg_1741_pp3_iter5_reg == 1'd1))) begin
        ap_phi_mux_p_Val2_s_phi_fu_442_p4 = src_buf_V_0_0_reg_426;
    end else begin
        ap_phi_mux_p_Val2_s_phi_fu_442_p4 = p_Val2_s_reg_438;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter6 == 1'b1) & (icmp_ln878_4_reg_1741_pp3_iter5_reg == 1'd1))) begin
        ap_phi_mux_src_buf_V_0_0_phi_fu_430_p4 = src_buf_V_0_1_reg_1791;
    end else begin
        ap_phi_mux_src_buf_V_0_0_phi_fu_430_p4 = src_buf_V_0_0_reg_426;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter8 == 1'b1) & (icmp_ln878_4_reg_1741_pp3_iter7_reg == 1'd1))) begin
        ap_phi_mux_src_buf_V_1_0_phi_fu_477_p4 = src_buf_V_1_1_reg_1856;
    end else begin
        ap_phi_mux_src_buf_V_1_0_phi_fu_477_p4 = src_buf_V_1_0_reg_473;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter10 == 1'b1) & (icmp_ln878_4_reg_1741_pp3_iter9_reg == 1'd1))) begin
        ap_phi_mux_src_buf_V_2_0_phi_fu_524_p4 = src_buf_V_2_1_reg_1948;
    end else begin
        ap_phi_mux_src_buf_V_2_0_phi_fu_524_p4 = src_buf_V_2_0_reg_519;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) & ((icmp_ln878_3_fu_737_p2 == 1'd0) | (icmp_ln878_2_reg_1647 == 1'd1)))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((cmp_i_i115_i_reg_1718 == 1'd1) & (1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter2 == 1'b1) & (icmp_ln878_5_reg_1745_pp3_iter1_reg == 1'd1) & (icmp_ln878_4_reg_1741_pp3_iter1_reg == 1'd1) & (trunc_ln123_reg_1722 == 2'd0))) begin
        buf_V_0_address1 = zext_ln534_2_fu_790_p1;
    end else if (((cmp_i_i115_i_reg_1718 == 1'd0) & (1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter2 == 1'b1) & (icmp_ln878_5_reg_1745_pp3_iter1_reg == 1'd1) & (icmp_ln878_4_reg_1741_pp3_iter1_reg == 1'd1) & (trunc_ln123_reg_1722 == 2'd0))) begin
        buf_V_0_address1 = zext_ln534_3_fu_783_p1;
    end else if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        buf_V_0_address1 = zext_ln534_1_fu_649_p1;
    end else begin
        buf_V_0_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter3 == 1'b1))) begin
        buf_V_0_ce0 = 1'b1;
    end else begin
        buf_V_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((cmp_i_i115_i_reg_1718 == 1'd1) & (1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter2 == 1'b1) & (icmp_ln878_5_reg_1745_pp3_iter1_reg == 1'd1) & (icmp_ln878_4_reg_1741_pp3_iter1_reg == 1'd1) & (trunc_ln123_reg_1722 == 2'd0)) | ((cmp_i_i115_i_reg_1718 == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter2 == 1'b1) & (icmp_ln878_5_reg_1745_pp3_iter1_reg == 1'd1) & (icmp_ln878_4_reg_1741_pp3_iter1_reg == 1'd1) & (trunc_ln123_reg_1722 == 2'd0)) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)))) begin
        buf_V_0_ce1 = 1'b1;
    end else begin
        buf_V_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((cmp_i_i115_i_reg_1718 == 1'd1) & (1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter2 == 1'b1) & (icmp_ln878_5_reg_1745_pp3_iter1_reg == 1'd1) & (icmp_ln878_4_reg_1741_pp3_iter1_reg == 1'd1) & (trunc_ln123_reg_1722 == 2'd0))) begin
        buf_V_0_d1 = reg_562;
    end else if ((((cmp_i_i115_i_reg_1718 == 1'd0) & (1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter2 == 1'b1) & (icmp_ln878_5_reg_1745_pp3_iter1_reg == 1'd1) & (icmp_ln878_4_reg_1741_pp3_iter1_reg == 1'd1) & (trunc_ln123_reg_1722 == 2'd0)) | ((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)))) begin
        buf_V_0_d1 = 24'd0;
    end else begin
        buf_V_0_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((cmp_i_i115_i_reg_1718 == 1'd1) & (1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter2 == 1'b1) & (icmp_ln878_5_reg_1745_pp3_iter1_reg == 1'd1) & (icmp_ln878_4_reg_1741_pp3_iter1_reg == 1'd1) & (trunc_ln123_reg_1722 == 2'd0)) | ((cmp_i_i115_i_reg_1718 == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter2 == 1'b1) & (icmp_ln878_5_reg_1745_pp3_iter1_reg == 1'd1) & (icmp_ln878_4_reg_1741_pp3_iter1_reg == 1'd1) & (trunc_ln123_reg_1722 == 2'd0)) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (icmp_ln878_1_reg_1633 == 1'd1) & (1'b1 == ap_CS_fsm_pp2_stage0)))) begin
        buf_V_0_we1 = 1'b1;
    end else begin
        buf_V_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((cmp_i_i115_i_reg_1718 == 1'd1) & (1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter2 == 1'b1) & (icmp_ln878_5_reg_1745_pp3_iter1_reg == 1'd1) & (icmp_ln878_4_reg_1741_pp3_iter1_reg == 1'd1) & (trunc_ln123_reg_1722 == 2'd1))) begin
        buf_V_1_address1 = zext_ln534_2_fu_790_p1;
    end else if (((cmp_i_i115_i_reg_1718 == 1'd0) & (1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter2 == 1'b1) & (icmp_ln878_5_reg_1745_pp3_iter1_reg == 1'd1) & (icmp_ln878_4_reg_1741_pp3_iter1_reg == 1'd1) & (trunc_ln123_reg_1722 == 2'd1))) begin
        buf_V_1_address1 = zext_ln534_3_fu_783_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        buf_V_1_address1 = zext_ln534_fu_629_p1;
    end else begin
        buf_V_1_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter3 == 1'b1))) begin
        buf_V_1_ce0 = 1'b1;
    end else begin
        buf_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((cmp_i_i115_i_reg_1718 == 1'd1) & (1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter2 == 1'b1) & (icmp_ln878_5_reg_1745_pp3_iter1_reg == 1'd1) & (icmp_ln878_4_reg_1741_pp3_iter1_reg == 1'd1) & (trunc_ln123_reg_1722 == 2'd1)) | ((cmp_i_i115_i_reg_1718 == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter2 == 1'b1) & (icmp_ln878_5_reg_1745_pp3_iter1_reg == 1'd1) & (icmp_ln878_4_reg_1741_pp3_iter1_reg == 1'd1) & (trunc_ln123_reg_1722 == 2'd1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)))) begin
        buf_V_1_ce1 = 1'b1;
    end else begin
        buf_V_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((cmp_i_i115_i_reg_1718 == 1'd0) & (1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter2 == 1'b1) & (icmp_ln878_5_reg_1745_pp3_iter1_reg == 1'd1) & (icmp_ln878_4_reg_1741_pp3_iter1_reg == 1'd1) & (trunc_ln123_reg_1722 == 2'd1))) begin
        buf_V_1_d1 = 24'd0;
    end else if ((((cmp_i_i115_i_reg_1718 == 1'd1) & (1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter2 == 1'b1) & (icmp_ln878_5_reg_1745_pp3_iter1_reg == 1'd1) & (icmp_ln878_4_reg_1741_pp3_iter1_reg == 1'd1) & (trunc_ln123_reg_1722 == 2'd1)) | ((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter2 == 1'b1)))) begin
        buf_V_1_d1 = reg_562;
    end else begin
        buf_V_1_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((cmp_i_i115_i_reg_1718 == 1'd1) & (1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter2 == 1'b1) & (icmp_ln878_5_reg_1745_pp3_iter1_reg == 1'd1) & (icmp_ln878_4_reg_1741_pp3_iter1_reg == 1'd1) & (trunc_ln123_reg_1722 == 2'd1)) | ((cmp_i_i115_i_reg_1718 == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter2 == 1'b1) & (icmp_ln878_5_reg_1745_pp3_iter1_reg == 1'd1) & (icmp_ln878_4_reg_1741_pp3_iter1_reg == 1'd1) & (trunc_ln123_reg_1722 == 2'd1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1) & (icmp_ln878_reg_1624_pp1_iter1_reg == 1'd1)))) begin
        buf_V_1_we1 = 1'b1;
    end else begin
        buf_V_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_1485)) begin
        if ((cmp_i_i115_i_reg_1718 == 1'd1)) begin
            buf_V_2_address1 = zext_ln534_2_fu_790_p1;
        end else if ((cmp_i_i115_i_reg_1718 == 1'd0)) begin
            buf_V_2_address1 = zext_ln534_3_fu_783_p1;
        end else begin
            buf_V_2_address1 = 'bx;
        end
    end else begin
        buf_V_2_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter3 == 1'b1))) begin
        buf_V_2_ce0 = 1'b1;
    end else begin
        buf_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((~(trunc_ln123_reg_1722 == 2'd0) & ~(trunc_ln123_reg_1722 == 2'd1) & (cmp_i_i115_i_reg_1718 == 1'd1) & (1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter2 == 1'b1) & (icmp_ln878_5_reg_1745_pp3_iter1_reg == 1'd1) & (icmp_ln878_4_reg_1741_pp3_iter1_reg == 1'd1)) | (~(trunc_ln123_reg_1722 == 2'd0) & ~(trunc_ln123_reg_1722 == 2'd1) & (cmp_i_i115_i_reg_1718 == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter2 == 1'b1) & (icmp_ln878_5_reg_1745_pp3_iter1_reg == 1'd1) & (icmp_ln878_4_reg_1741_pp3_iter1_reg == 1'd1)))) begin
        buf_V_2_ce1 = 1'b1;
    end else begin
        buf_V_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_1485)) begin
        if ((cmp_i_i115_i_reg_1718 == 1'd1)) begin
            buf_V_2_d1 = reg_562;
        end else if ((cmp_i_i115_i_reg_1718 == 1'd0)) begin
            buf_V_2_d1 = 24'd0;
        end else begin
            buf_V_2_d1 = 'bx;
        end
    end else begin
        buf_V_2_d1 = 'bx;
    end
end

always @ (*) begin
    if (((~(trunc_ln123_reg_1722 == 2'd0) & ~(trunc_ln123_reg_1722 == 2'd1) & (cmp_i_i115_i_reg_1718 == 1'd1) & (1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter2 == 1'b1) & (icmp_ln878_5_reg_1745_pp3_iter1_reg == 1'd1) & (icmp_ln878_4_reg_1741_pp3_iter1_reg == 1'd1)) | (~(trunc_ln123_reg_1722 == 2'd0) & ~(trunc_ln123_reg_1722 == 2'd1) & (cmp_i_i115_i_reg_1718 == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter2 == 1'b1) & (icmp_ln878_5_reg_1745_pp3_iter1_reg == 1'd1) & (icmp_ln878_4_reg_1741_pp3_iter1_reg == 1'd1)))) begin
        buf_V_2_we1 = 1'b1;
    end else begin
        buf_V_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((((cmp_i_i115_i_reg_1718 == 1'd1) & (icmp_ln878_5_reg_1745 == 1'd1) & (icmp_ln878_4_reg_1741 == 1'd1) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((icmp_ln878_reg_1624 == 1'd1) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        img_in_419_blk_n = img_in_419_empty_n;
    end else begin
        img_in_419_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_predicate_op142_read_state13 == 1'b1)) | ((icmp_ln878_reg_1624 == 1'd1) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        img_in_419_read = 1'b1;
    end else begin
        img_in_419_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln882_reg_1764_pp3_iter10_reg == 1'd0) & (ap_enable_reg_pp3_iter11 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        img_out_420_blk_n = img_out_420_full_n;
    end else begin
        img_out_420_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln882_reg_1764_pp3_iter10_reg == 1'd0) & (ap_enable_reg_pp3_iter11 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        img_out_420_write = 1'b1;
    end else begin
        img_out_420_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln259_fu_589_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0) & (icmp_ln878_fu_624_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1)) & ~((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0) & (icmp_ln878_fu_624_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if (~((1'b0 == ap_block_pp2_stage0_subdone) & (icmp_ln878_1_fu_644_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if (((1'b0 == ap_block_pp2_stage0_subdone) & (icmp_ln878_1_fu_644_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            if (((1'b1 == ap_CS_fsm_state11) & ((icmp_ln878_3_fu_737_p2 == 1'd0) | (icmp_ln878_2_reg_1647 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_pp3_stage0 : begin
            if ((~((1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter10 == 1'b0) & (ap_enable_reg_pp3_iter8 == 1'b0) & (ap_enable_reg_pp3_iter9 == 1'b1)) & ~((ap_enable_reg_pp3_iter11 == 1'b1) & (1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter10 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if ((((ap_enable_reg_pp3_iter11 == 1'b1) & (1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter10 == 1'b0)) | ((1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter10 == 1'b0) & (ap_enable_reg_pp3_iter8 == 1'b0) & (ap_enable_reg_pp3_iter9 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1616_fu_663_p2 = (empty_reg_1591 + 14'd1);

assign add_ln691_1_fu_634_p2 = (ap_phi_mux_i_col_V_0_phi_fu_361_p4 + 13'd1);

assign add_ln691_fu_614_p2 = (ap_phi_mux_i_col_046_0_phi_fu_349_p4 + 13'd1);

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd4];

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_11001 = ((icmp_ln878_reg_1624 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (img_in_419_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = ((icmp_ln878_reg_1624 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (img_in_419_empty_n == 1'b0));
end

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp3_stage0_01001 = (((icmp_ln882_reg_1764_pp3_iter10_reg == 1'd0) & (ap_enable_reg_pp3_iter11 == 1'b1) & (img_out_420_full_n == 1'b0)) | ((ap_enable_reg_pp3_iter1 == 1'b1) & (img_in_419_empty_n == 1'b0) & (ap_predicate_op142_read_state13 == 1'b1)));
end

always @ (*) begin
    ap_block_pp3_stage0_11001 = (((icmp_ln882_reg_1764_pp3_iter10_reg == 1'd0) & (ap_enable_reg_pp3_iter11 == 1'b1) & (img_out_420_full_n == 1'b0)) | ((ap_enable_reg_pp3_iter1 == 1'b1) & (img_in_419_empty_n == 1'b0) & (ap_predicate_op142_read_state13 == 1'b1)));
end

always @ (*) begin
    ap_block_pp3_stage0_subdone = (((icmp_ln882_reg_1764_pp3_iter10_reg == 1'd0) & (ap_enable_reg_pp3_iter11 == 1'b1) & (img_out_420_full_n == 1'b0)) | ((ap_enable_reg_pp3_iter1 == 1'b1) & (img_in_419_empty_n == 1'b0) & (ap_predicate_op142_read_state13 == 1'b1)));
end

assign ap_block_state12_pp3_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state13_pp3_stage0_iter1 = ((img_in_419_empty_n == 1'b0) & (ap_predicate_op142_read_state13 == 1'b1));
end

assign ap_block_state14_pp3_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp3_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp3_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp3_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp3_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp3_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp3_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp3_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp3_stage0_iter10 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state23_pp3_stage0_iter11 = ((icmp_ln882_reg_1764_pp3_iter10_reg == 1'd0) & (img_out_420_full_n == 1'b0));
end

assign ap_block_state4_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state5_pp1_stage0_iter1 = ((icmp_ln878_reg_1624 == 1'd1) & (img_in_419_empty_n == 1'b0));
end

assign ap_block_state6_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_1485 = (~(trunc_ln123_reg_1722 == 2'd0) & ~(trunc_ln123_reg_1722 == 2'd1) & (1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter2 == 1'b1) & (icmp_ln878_5_reg_1745_pp3_iter1_reg == 1'd1) & (icmp_ln878_4_reg_1741_pp3_iter1_reg == 1'd1));
end

always @ (*) begin
    ap_condition_165 = ((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0));
end

always @ (*) begin
    ap_condition_288 = ((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0));
end

always @ (*) begin
    ap_condition_652 = ((cmp_i_i115_i_reg_1718 == 1'd0) & (icmp_ln878_5_fu_778_p2 == 1'd1) & (icmp_ln878_4_fu_773_p2 == 1'd1));
end

always @ (*) begin
    ap_condition_86 = ((cmp_i_i115_i_reg_1718 == 1'd1) & (icmp_ln878_5_reg_1745 == 1'd1) & (icmp_ln878_4_reg_1741 == 1'd1));
end

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_enable_pp3 = (ap_idle_pp3 ^ 1'b1);

assign ap_phi_mux_row_ind_V_1_phi_fu_338_p4 = row_ind_V_1_reg_334;

assign ap_phi_reg_pp3_iter0_arrayidx396_i180247_load_0_2_reg_450 = 'bx;

assign ap_phi_reg_pp3_iter0_buf_cop_V_0_0_reg_462 = 'bx;

assign ap_phi_reg_pp3_iter0_buf_cop_V_1_reg_497 = 'bx;

assign ap_phi_reg_pp3_iter0_buf_cop_V_2_reg_532 = 'bx;

always @ (*) begin
    ap_predicate_op142_read_state13 = ((cmp_i_i115_i_reg_1718 == 1'd1) & (icmp_ln878_5_reg_1745 == 1'd1) & (icmp_ln878_4_reg_1741 == 1'd1));
end

assign buf_V_0_address0 = zext_ln1616_fu_797_p1;

assign buf_V_1_address0 = zext_ln1616_fu_797_p1;

assign buf_V_2_address0 = zext_ln1616_fu_797_p1;

assign cmp_i_i115_i_fu_742_p2 = ((zext_ln878_2_fu_729_p1 < img_height) ? 1'b1 : 1'b0);

assign col_V_1_fu_759_p2 = (ap_phi_mux_col_V_phi_fu_418_p4 + 13'd1);

assign empty_fu_570_p1 = img_width[13:0];

assign icmp_ln259_fu_589_p2 = ((row_ind_V_1_reg_334 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln878_1_fu_644_p2 = ((zext_ln878_1_fu_640_p1 < img_width) ? 1'b1 : 1'b0);

assign icmp_ln878_2_fu_678_p2 = ((tmp_1_fu_668_p4 == 16'd0) ? 1'b1 : 1'b0);

assign icmp_ln878_3_fu_737_p2 = ((zext_ln878_3_fu_733_p1 < op2_assign_reg_1637) ? 1'b1 : 1'b0);

assign icmp_ln878_4_fu_773_p2 = ((zext_ln878_5_fu_769_p1 < add_ln1616_reg_1642) ? 1'b1 : 1'b0);

assign icmp_ln878_5_fu_778_p2 = ((zext_ln878_4_fu_765_p1 < img_width) ? 1'b1 : 1'b0);

assign icmp_ln878_fu_624_p2 = ((zext_ln878_fu_620_p1 < img_width) ? 1'b1 : 1'b0);

assign icmp_ln882_fu_804_p2 = ((col_V_reg_414_pp3_iter2_reg == 13'd0) ? 1'b1 : 1'b0);

assign icmp_ln886_10_fu_1077_p2 = ((p_Result_12_fu_1067_p4 > max_V_11_reg_1842) ? 1'b1 : 1'b0);

assign icmp_ln886_11_fu_1105_p2 = ((p_Result_13_fu_1095_p4 > max_V_12_fu_1089_p3) ? 1'b1 : 1'b0);

assign icmp_ln886_12_fu_1216_p2 = ((p_Result_14_reg_1899 > max_V_13_fu_1210_p3) ? 1'b1 : 1'b0);

assign icmp_ln886_13_fu_1311_p2 = ((p_Result_15_fu_1301_p4 > max_V_14_reg_1934) ? 1'b1 : 1'b0);

assign icmp_ln886_14_fu_1339_p2 = ((p_Result_16_fu_1329_p4 > max_V_15_fu_1323_p3) ? 1'b1 : 1'b0);

assign icmp_ln886_15_fu_1450_p2 = ((p_Result_17_reg_1991 > max_V_16_fu_1444_p3) ? 1'b1 : 1'b0);

assign icmp_ln886_16_fu_952_p2 = ((p_Result_19_fu_942_p4 > max_V_18_fu_935_p3) ? 1'b1 : 1'b0);

assign icmp_ln886_17_fu_1015_p2 = ((p_Result_20_reg_1829 > max_V_19_reg_1822) ? 1'b1 : 1'b0);

assign icmp_ln886_18_fu_1131_p2 = ((p_Result_21_fu_1121_p4 > max_V_20_reg_1849) ? 1'b1 : 1'b0);

assign icmp_ln886_19_fu_1159_p2 = ((p_Result_22_fu_1149_p4 > max_V_21_fu_1143_p3) ? 1'b1 : 1'b0);

assign icmp_ln886_1_fu_983_p2 = ((p_Result_2_reg_1803 > max_V_1_reg_1796) ? 1'b1 : 1'b0);

assign icmp_ln886_20_fu_1246_p2 = ((p_Result_23_reg_1921 > max_V_22_fu_1240_p3) ? 1'b1 : 1'b0);

assign icmp_ln886_21_fu_1365_p2 = ((p_Result_24_fu_1355_p4 > max_V_23_reg_1941) ? 1'b1 : 1'b0);

assign icmp_ln886_22_fu_1393_p2 = ((p_Result_25_fu_1383_p4 > max_V_24_fu_1377_p3) ? 1'b1 : 1'b0);

assign icmp_ln886_23_fu_1480_p2 = ((p_Result_26_reg_2013 > max_V_25_fu_1474_p3) ? 1'b1 : 1'b0);

assign icmp_ln886_2_fu_1035_p2 = ((p_Result_3_fu_1031_p1 > max_V_2_reg_1835) ? 1'b1 : 1'b0);

assign icmp_ln886_3_fu_1057_p2 = ((p_Result_4_fu_1053_p1 > max_V_3_fu_1047_p3) ? 1'b1 : 1'b0);

assign icmp_ln886_4_fu_1186_p2 = ((p_Result_5_reg_1877 > max_V_4_fu_1180_p3) ? 1'b1 : 1'b0);

assign icmp_ln886_5_fu_1269_p2 = ((p_Result_6_fu_1265_p1 > max_V_5_reg_1927) ? 1'b1 : 1'b0);

assign icmp_ln886_6_fu_1291_p2 = ((p_Result_7_fu_1287_p1 > max_V_6_fu_1281_p3) ? 1'b1 : 1'b0);

assign icmp_ln886_7_fu_1420_p2 = ((p_Result_8_reg_1969 > max_V_7_fu_1414_p3) ? 1'b1 : 1'b0);

assign icmp_ln886_8_fu_894_p2 = ((p_Result_10_fu_884_p4 > max_V_9_fu_877_p3) ? 1'b1 : 1'b0);

assign icmp_ln886_9_fu_999_p2 = ((p_Result_11_reg_1816 > max_V_10_reg_1809) ? 1'b1 : 1'b0);

assign icmp_ln886_fu_842_p2 = ((p_Result_1_fu_838_p1 > max_V_fu_831_p3) ? 1'b1 : 1'b0);

assign img_height_cast_fu_654_p1 = img_height;

assign img_out_420_din = p_Result_27_reg_2019;

assign init_row_ind_fu_574_p2 = (row_ind_V_1_reg_334 + 2'd1);

assign max_V_10_fu_908_p3 = ((tobool_i_i_1116_reg_1658[0:0] == 1'b1) ? select_ln56_8_fu_900_p3 : max_V_9_fu_877_p3);

assign max_V_11_fu_1009_p3 = ((tobool_i_i_2125_reg_1665[0:0] == 1'b1) ? select_ln56_9_fu_1003_p3 : max_V_10_reg_1809);

assign max_V_12_fu_1089_p3 = ((tobool_i_i_196_reg_1672[0:0] == 1'b1) ? select_ln56_10_fu_1082_p3 : max_V_11_reg_1842);

assign max_V_13_fu_1210_p3 = ((tobool_i_i_196_1_reg_1679[0:0] == 1'b1) ? select_ln56_11_fu_1205_p3 : max_V_12_reg_1883);

assign max_V_14_fu_1228_p3 = ((tobool_i_i_196_2_reg_1686[0:0] == 1'b1) ? select_ln56_12_fu_1221_p3 : max_V_13_fu_1210_p3);

assign max_V_15_fu_1323_p3 = ((tobool_i_i_2104_reg_1693[0:0] == 1'b1) ? select_ln56_13_fu_1316_p3 : max_V_14_reg_1934);

assign max_V_16_fu_1444_p3 = ((tobool_i_i_2104_1_reg_1700[0:0] == 1'b1) ? select_ln56_14_fu_1439_p3 : max_V_15_reg_1975);

assign max_V_17_fu_1462_p3 = ((tobool_i_i_2104_2_reg_1707[0:0] == 1'b1) ? select_ln56_15_fu_1455_p3 : max_V_16_fu_1444_p3);

assign max_V_18_fu_935_p3 = ((tobool_i_i_reg_1651[0:0] == 1'b1) ? p_Result_18_fu_925_p4 : 8'd0);

assign max_V_19_fu_966_p3 = ((tobool_i_i_1116_reg_1658[0:0] == 1'b1) ? select_ln56_16_fu_958_p3 : max_V_18_fu_935_p3);

assign max_V_1_fu_856_p3 = ((tobool_i_i_1116_reg_1658[0:0] == 1'b1) ? select_ln56_fu_848_p3 : max_V_fu_831_p3);

assign max_V_20_fu_1025_p3 = ((tobool_i_i_2125_reg_1665[0:0] == 1'b1) ? select_ln56_17_fu_1019_p3 : max_V_19_reg_1822);

assign max_V_21_fu_1143_p3 = ((tobool_i_i_196_reg_1672[0:0] == 1'b1) ? select_ln56_18_fu_1136_p3 : max_V_20_reg_1849);

assign max_V_22_fu_1240_p3 = ((tobool_i_i_196_1_reg_1679[0:0] == 1'b1) ? select_ln56_19_fu_1235_p3 : max_V_21_reg_1905);

assign max_V_23_fu_1258_p3 = ((tobool_i_i_196_2_reg_1686[0:0] == 1'b1) ? select_ln56_20_fu_1251_p3 : max_V_22_fu_1240_p3);

assign max_V_24_fu_1377_p3 = ((tobool_i_i_2104_reg_1693[0:0] == 1'b1) ? select_ln56_21_fu_1370_p3 : max_V_23_reg_1941);

assign max_V_25_fu_1474_p3 = ((tobool_i_i_2104_1_reg_1700[0:0] == 1'b1) ? select_ln56_22_fu_1469_p3 : max_V_24_reg_1997);

assign max_V_26_fu_1492_p3 = ((tobool_i_i_2104_2_reg_1707[0:0] == 1'b1) ? select_ln56_23_fu_1485_p3 : max_V_25_fu_1474_p3);

assign max_V_2_fu_993_p3 = ((tobool_i_i_2125_reg_1665[0:0] == 1'b1) ? select_ln56_1_fu_987_p3 : max_V_1_reg_1796);

assign max_V_3_fu_1047_p3 = ((tobool_i_i_196_reg_1672[0:0] == 1'b1) ? select_ln56_2_fu_1040_p3 : max_V_2_reg_1835);

assign max_V_4_fu_1180_p3 = ((tobool_i_i_196_1_reg_1679[0:0] == 1'b1) ? select_ln56_3_fu_1175_p3 : max_V_3_reg_1861);

assign max_V_5_fu_1198_p3 = ((tobool_i_i_196_2_reg_1686[0:0] == 1'b1) ? select_ln56_4_fu_1191_p3 : max_V_4_fu_1180_p3);

assign max_V_6_fu_1281_p3 = ((tobool_i_i_2104_reg_1693[0:0] == 1'b1) ? select_ln56_5_fu_1274_p3 : max_V_5_reg_1927);

assign max_V_7_fu_1414_p3 = ((tobool_i_i_2104_1_reg_1700[0:0] == 1'b1) ? select_ln56_6_fu_1409_p3 : max_V_6_reg_1953);

assign max_V_8_fu_1432_p3 = ((tobool_i_i_2104_2_reg_1707[0:0] == 1'b1) ? select_ln56_7_fu_1425_p3 : max_V_7_fu_1414_p3);

assign max_V_9_fu_877_p3 = ((tobool_i_i_reg_1651[0:0] == 1'b1) ? p_Result_9_fu_867_p4 : 8'd0);

assign max_V_fu_831_p3 = ((tobool_i_i_reg_1651[0:0] == 1'b1) ? p_Result_s_fu_827_p1 : 8'd0);

assign op2_assign_fu_657_p2 = (img_height_cast_fu_654_p1 + 17'd1);

assign p_Result_10_fu_884_p4 = {{ap_phi_mux_src_buf_V_0_0_phi_fu_430_p4[15:8]}};

assign p_Result_12_fu_1067_p4 = {{ap_phi_mux_p_Val2_3_phi_fu_489_p4[15:8]}};

assign p_Result_13_fu_1095_p4 = {{ap_phi_mux_src_buf_V_1_0_phi_fu_477_p4[15:8]}};

assign p_Result_15_fu_1301_p4 = {{ap_phi_mux_p_Val2_6_phi_fu_512_p4[15:8]}};

assign p_Result_16_fu_1329_p4 = {{ap_phi_mux_src_buf_V_2_0_phi_fu_524_p4[15:8]}};

assign p_Result_18_fu_925_p4 = {{ap_phi_mux_p_Val2_s_phi_fu_442_p4[23:16]}};

assign p_Result_19_fu_942_p4 = {{ap_phi_mux_src_buf_V_0_0_phi_fu_430_p4[23:16]}};

assign p_Result_1_fu_838_p1 = ap_phi_mux_src_buf_V_0_0_phi_fu_430_p4[7:0];

assign p_Result_21_fu_1121_p4 = {{ap_phi_mux_p_Val2_3_phi_fu_489_p4[23:16]}};

assign p_Result_22_fu_1149_p4 = {{ap_phi_mux_src_buf_V_1_0_phi_fu_477_p4[23:16]}};

assign p_Result_24_fu_1355_p4 = {{ap_phi_mux_p_Val2_6_phi_fu_512_p4[23:16]}};

assign p_Result_25_fu_1383_p4 = {{ap_phi_mux_src_buf_V_2_0_phi_fu_524_p4[23:16]}};

assign p_Result_27_fu_1499_p4 = {{{max_V_26_fu_1492_p3}, {max_V_17_fu_1462_p3}}, {max_V_8_fu_1432_p3}};

assign p_Result_2_fu_863_p1 = src_buf_V_0_1_xfExtractPixels_1_9_15_s_fu_544_ap_return[7:0];

assign p_Result_3_fu_1031_p1 = ap_phi_mux_p_Val2_3_phi_fu_489_p4[7:0];

assign p_Result_4_fu_1053_p1 = ap_phi_mux_src_buf_V_1_0_phi_fu_477_p4[7:0];

assign p_Result_5_fu_1063_p1 = src_buf_V_1_1_xfExtractPixels_1_9_15_s_fu_550_ap_return[7:0];

assign p_Result_6_fu_1265_p1 = ap_phi_mux_p_Val2_6_phi_fu_512_p4[7:0];

assign p_Result_7_fu_1287_p1 = ap_phi_mux_src_buf_V_2_0_phi_fu_524_p4[7:0];

assign p_Result_8_fu_1297_p1 = src_buf_V_2_1_xfExtractPixels_1_9_15_s_fu_556_ap_return[7:0];

assign p_Result_9_fu_867_p4 = {{ap_phi_mux_p_Val2_s_phi_fu_442_p4[15:8]}};

assign p_Result_s_fu_827_p1 = ap_phi_mux_p_Val2_s_phi_fu_442_p4[7:0];

assign row_V_1_fu_1509_p2 = (row_V_reg_402 + 13'd1);

assign select_ln56_10_fu_1082_p3 = ((icmp_ln886_10_fu_1077_p2[0:0] == 1'b1) ? p_Result_12_fu_1067_p4 : max_V_11_reg_1842);

assign select_ln56_11_fu_1205_p3 = ((icmp_ln886_11_reg_1894[0:0] == 1'b1) ? p_Result_13_reg_1889 : max_V_12_reg_1883);

assign select_ln56_12_fu_1221_p3 = ((icmp_ln886_12_fu_1216_p2[0:0] == 1'b1) ? p_Result_14_reg_1899 : max_V_13_fu_1210_p3);

assign select_ln56_13_fu_1316_p3 = ((icmp_ln886_13_fu_1311_p2[0:0] == 1'b1) ? p_Result_15_fu_1301_p4 : max_V_14_reg_1934);

assign select_ln56_14_fu_1439_p3 = ((icmp_ln886_14_reg_1986[0:0] == 1'b1) ? p_Result_16_reg_1981 : max_V_15_reg_1975);

assign select_ln56_15_fu_1455_p3 = ((icmp_ln886_15_fu_1450_p2[0:0] == 1'b1) ? p_Result_17_reg_1991 : max_V_16_fu_1444_p3);

assign select_ln56_16_fu_958_p3 = ((icmp_ln886_16_fu_952_p2[0:0] == 1'b1) ? p_Result_19_fu_942_p4 : max_V_18_fu_935_p3);

assign select_ln56_17_fu_1019_p3 = ((icmp_ln886_17_fu_1015_p2[0:0] == 1'b1) ? p_Result_20_reg_1829 : max_V_19_reg_1822);

assign select_ln56_18_fu_1136_p3 = ((icmp_ln886_18_fu_1131_p2[0:0] == 1'b1) ? p_Result_21_fu_1121_p4 : max_V_20_reg_1849);

assign select_ln56_19_fu_1235_p3 = ((icmp_ln886_19_reg_1916[0:0] == 1'b1) ? p_Result_22_reg_1911 : max_V_21_reg_1905);

assign select_ln56_1_fu_987_p3 = ((icmp_ln886_1_fu_983_p2[0:0] == 1'b1) ? p_Result_2_reg_1803 : max_V_1_reg_1796);

assign select_ln56_20_fu_1251_p3 = ((icmp_ln886_20_fu_1246_p2[0:0] == 1'b1) ? p_Result_23_reg_1921 : max_V_22_fu_1240_p3);

assign select_ln56_21_fu_1370_p3 = ((icmp_ln886_21_fu_1365_p2[0:0] == 1'b1) ? p_Result_24_fu_1355_p4 : max_V_23_reg_1941);

assign select_ln56_22_fu_1469_p3 = ((icmp_ln886_22_reg_2008[0:0] == 1'b1) ? p_Result_25_reg_2003 : max_V_24_reg_1997);

assign select_ln56_23_fu_1485_p3 = ((icmp_ln886_23_fu_1480_p2[0:0] == 1'b1) ? p_Result_26_reg_2013 : max_V_25_fu_1474_p3);

assign select_ln56_2_fu_1040_p3 = ((icmp_ln886_2_fu_1035_p2[0:0] == 1'b1) ? p_Result_3_fu_1031_p1 : max_V_2_reg_1835);

assign select_ln56_3_fu_1175_p3 = ((icmp_ln886_3_reg_1872[0:0] == 1'b1) ? p_Result_4_reg_1867 : max_V_3_reg_1861);

assign select_ln56_4_fu_1191_p3 = ((icmp_ln886_4_fu_1186_p2[0:0] == 1'b1) ? p_Result_5_reg_1877 : max_V_4_fu_1180_p3);

assign select_ln56_5_fu_1274_p3 = ((icmp_ln886_5_fu_1269_p2[0:0] == 1'b1) ? p_Result_6_fu_1265_p1 : max_V_5_reg_1927);

assign select_ln56_6_fu_1409_p3 = ((icmp_ln886_6_reg_1964[0:0] == 1'b1) ? p_Result_7_reg_1959 : max_V_6_reg_1953);

assign select_ln56_7_fu_1425_p3 = ((icmp_ln886_7_fu_1420_p2[0:0] == 1'b1) ? p_Result_8_reg_1969 : max_V_7_fu_1414_p3);

assign select_ln56_8_fu_900_p3 = ((icmp_ln886_8_fu_894_p2[0:0] == 1'b1) ? p_Result_10_fu_884_p4 : max_V_9_fu_877_p3);

assign select_ln56_9_fu_1003_p3 = ((icmp_ln886_9_fu_999_p2[0:0] == 1'b1) ? p_Result_11_reg_1816 : max_V_10_reg_1809);

assign select_ln56_fu_848_p3 = ((icmp_ln886_fu_842_p2[0:0] == 1'b1) ? p_Result_1_fu_838_p1 : max_V_fu_831_p3);

assign tmp_1_fu_668_p4 = {{op2_assign_fu_657_p2[16:1]}};

assign tobool_i_i_1116_fu_689_p2 = ((p_read1 != 8'd0) ? 1'b1 : 1'b0);

assign tobool_i_i_196_1_fu_704_p2 = ((p_read4 != 8'd0) ? 1'b1 : 1'b0);

assign tobool_i_i_196_2_fu_709_p2 = ((p_read5 != 8'd0) ? 1'b1 : 1'b0);

assign tobool_i_i_196_fu_699_p2 = ((p_read3 != 8'd0) ? 1'b1 : 1'b0);

assign tobool_i_i_2104_1_fu_719_p2 = ((p_read7 != 8'd0) ? 1'b1 : 1'b0);

assign tobool_i_i_2104_2_fu_724_p2 = ((p_read8 != 8'd0) ? 1'b1 : 1'b0);

assign tobool_i_i_2104_fu_714_p2 = ((p_read6 != 8'd0) ? 1'b1 : 1'b0);

assign tobool_i_i_2125_fu_694_p2 = ((p_read2 != 8'd0) ? 1'b1 : 1'b0);

assign tobool_i_i_fu_684_p2 = ((p_read != 8'd0) ? 1'b1 : 1'b0);

assign trunc_ln123_fu_747_p1 = row_ind_V_2_reg_369[1:0];

assign trunc_ln136_1_fu_755_p1 = row_ind_V_1_1_reg_379[1:0];

assign trunc_ln136_fu_751_p1 = row_ind_V_0_reg_390[1:0];

assign zext_ln1616_fu_797_p1 = col_V_reg_414_pp3_iter2_reg;

assign zext_ln301_fu_595_p1 = row_ind_V_1_reg_334;

assign zext_ln534_1_fu_649_p1 = i_col_V_0_reg_357;

assign zext_ln534_2_fu_790_p1 = col_V_reg_414_pp3_iter1_reg;

assign zext_ln534_3_fu_783_p1 = col_V_reg_414_pp3_iter1_reg;

assign zext_ln534_fu_629_p1 = i_col_046_0_reg_345_pp1_iter1_reg;

assign zext_ln878_1_fu_640_p1 = ap_phi_mux_i_col_V_0_phi_fu_361_p4;

assign zext_ln878_2_fu_729_p1 = row_V_reg_402;

assign zext_ln878_3_fu_733_p1 = row_V_reg_402;

assign zext_ln878_4_fu_765_p1 = ap_phi_mux_col_V_phi_fu_418_p4;

assign zext_ln878_5_fu_769_p1 = ap_phi_mux_col_V_phi_fu_418_p4;

assign zext_ln878_fu_620_p1 = ap_phi_mux_i_col_046_0_phi_fu_349_p4;

always @ (posedge ap_clk) begin
    row_ind_V_0_0_load_reg_1601[12:2] <= 11'b00000000000;
    row_ind_V_1_0_load_reg_1606[12:2] <= 11'b00000000000;
    row_ind_V_2_0_load_reg_1611[12:2] <= 11'b00000000000;
    row_ind_V_0_0_fu_124[12:2] <= 11'b00000000000;
    row_ind_V_1_0_fu_128[12:2] <= 11'b00000000000;
    row_ind_V_2_0_fu_132[12:2] <= 11'b00000000000;
end

endmodule //dilate_accel_xfdilate_1080_1920_3_9_1_0_1921_3_3_s
