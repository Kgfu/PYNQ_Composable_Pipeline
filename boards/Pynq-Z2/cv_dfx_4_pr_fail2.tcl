#*****************************************************************************************
# Vivado (TM) v2020.2.2 (64-bit)
#
# cv_dfx_4_pr_fail2.tcl: Tcl script for re-creating project 'cv_dfx_4_pr'
#
# Generated by Vivado on Fri Mar 18 17:32:35 CST 2022
# IP Build 3115676 on Tue Feb  9 10:48:11 MST 2021
#
# This file contains the Vivado Tcl commands for re-creating the project to the state*
# when this script was generated. In order to re-create the project, please source this
# file in the Vivado Tcl Shell.
#
# * Note that the runs in the created project will be configured the same way as the
#   original project, however they will not be launched automatically. To regenerate the
#   run results please launch the synthesis/implementation runs as needed.
#
#*****************************************************************************************
# NOTE: In order to use this script for source control purposes, please make sure that the
#       following files are added to the source control system:-
#
# 1. This project restoration tcl script (cv_dfx_4_pr_fail2.tcl) that was generated.
#
# 2. The following source(s) files that were local or imported into the original project.
#    (Please see the '$orig_proj_dir' and '$origin_dir' variable setting below at the start of the script)
#
#    <none>
#
# 3. The following remote source files that were added to the original project:-
#
#    <none>
#
#*****************************************************************************************

# Check file required for this script exists
proc checkRequiredFiles { origin_dir} {
  set status true
  set paths [list \
   [file normalize "$origin_dir/ip"] \
   [file normalize "$origin_dir/../ip/boards/ip"] \
  ]
  foreach ipath $paths {
    if { ![file isdirectory $ipath] } {
      puts " Could not access $ipath "
      set status false
    }
  }

  return $status
}
# Set the reference directory for source file relative paths (by default the value is script directory path)
set origin_dir "."

# Use origin directory path location variable, if specified in the tcl shell
if { [info exists ::origin_dir_loc] } {
  set origin_dir $::origin_dir_loc
}

# Set the project name
set _xil_proj_name_ "cv_dfx_4_pr"

# Use project name variable, if specified in the tcl shell
if { [info exists ::user_project_name] } {
  set _xil_proj_name_ $::user_project_name
}

variable script_file
set script_file "cv_dfx_4_pr_fail2.tcl"

# Help information for this script
proc print_help {} {
  variable script_file
  puts "\nDescription:"
  puts "Recreate a Vivado project from this script. The created project will be"
  puts "functionally equivalent to the original project for which this script was"
  puts "generated. The script contains commands for creating a project, filesets,"
  puts "runs, adding/importing sources and setting properties on various objects.\n"
  puts "Syntax:"
  puts "$script_file"
  puts "$script_file -tclargs \[--origin_dir <path>\]"
  puts "$script_file -tclargs \[--project_name <name>\]"
  puts "$script_file -tclargs \[--help\]\n"
  puts "Usage:"
  puts "Name                   Description"
  puts "-------------------------------------------------------------------------"
  puts "\[--origin_dir <path>\]  Determine source file paths wrt this path. Default"
  puts "                       origin_dir path value is \".\", otherwise, the value"
  puts "                       that was set with the \"-paths_relative_to\" switch"
  puts "                       when this script was generated.\n"
  puts "\[--project_name <name>\] Create project with the specified name. Default"
  puts "                       name is the name of the project from where this"
  puts "                       script was generated.\n"
  puts "\[--help\]               Print help information for this script"
  puts "-------------------------------------------------------------------------\n"
  exit 0
}

if { $::argc > 0 } {
  for {set i 0} {$i < $::argc} {incr i} {
    set option [string trim [lindex $::argv $i]]
    switch -regexp -- $option {
      "--origin_dir"   { incr i; set origin_dir [lindex $::argv $i] }
      "--project_name" { incr i; set _xil_proj_name_ [lindex $::argv $i] }
      "--help"         { print_help }
      default {
        if { [regexp {^-} $option] } {
          puts "ERROR: Unknown option '$option' specified, please type '$script_file -tclargs --help' for usage info.\n"
          return 1
        }
      }
    }
  }
}

# Set the directory path for the original project from where this script was exported
set orig_proj_dir "[file normalize "$origin_dir/cv_dfx_4_pr"]"

# Check for paths and files needed for project creation
set validate_required 0
if { $validate_required } {
  if { [checkRequiredFiles $origin_dir] } {
    puts "Tcl file $script_file is valid. All files required for project creation is accesable. "
  } else {
    puts "Tcl file $script_file is not valid. Not all files required for project creation is accesable. "
    return
  }
}

# Create project
create_project ${_xil_proj_name_} ./${_xil_proj_name_} -part xc7z020clg400-1

# Set the directory path for the new project
set proj_dir [get_property directory [current_project]]

# Set project properties
set obj [current_project]
set_property -name "board_part_repo_paths" -value "[file normalize "$origin_dir/../../../../.Xilinx/Vivado/2020.2/xhub/board_store/xilinx_board_store/XilinxBoardStore/Vivado/2020.2/boards"]" -objects $obj
set_property -name "board_part" -value "tul.com.tw:pynq-z2:part0:1.0" -objects $obj
set_property -name "default_lib" -value "xil_defaultlib" -objects $obj
set_property -name "enable_vhdl_2008" -value "1" -objects $obj
set_property -name "ip_cache_permissions" -value "read write" -objects $obj
set_property -name "ip_output_repo" -value "$proj_dir/${_xil_proj_name_}.cache/ip" -objects $obj
set_property -name "mem.enable_memory_map_generation" -value "1" -objects $obj
set_property -name "platform.board_id" -value "pynq-z2" -objects $obj
set_property -name "pr_flow" -value "1" -objects $obj
set_property -name "sim.central_dir" -value "$proj_dir/${_xil_proj_name_}.ip_user_files" -objects $obj
set_property -name "sim.ip.auto_export_scripts" -value "1" -objects $obj
set_property -name "simulator_language" -value "Mixed" -objects $obj
set_property -name "xpm_libraries" -value "XPM_CDC XPM_FIFO XPM_MEMORY" -objects $obj

# Create 'sources_1' fileset (if not found)
if {[string equal [get_filesets -quiet sources_1] ""]} {
  create_fileset -srcset sources_1
}

# Set IP repository paths
set obj [get_filesets sources_1]
if { $obj != {} } {
   set_property "ip_repo_paths" "[file normalize "$origin_dir/ip"] [file normalize "$origin_dir/../ip/boards/ip"]" $obj

   # Rebuild user ip_repo's index before adding any source files
   update_ip_catalog -rebuild
}

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
# Set 'sources_1' fileset file properties for remote files
# None

# Set 'sources_1' fileset file properties for local files
# None

# Set 'sources_1' fileset properties
set obj [get_filesets sources_1]
set_property -name "top" -value "video_cp_wrapper" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj

# Create 'constrs_1' fileset (if not found)
if {[string equal [get_filesets -quiet constrs_1] ""]} {
  create_fileset -constrset constrs_1
}

# Set 'constrs_1' fileset object
set obj [get_filesets constrs_1]

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/cv_dfx_4_pr.xdc"]"
set file_added [add_files -norecurse -fileset $obj [list $file]]
set file "$origin_dir/cv_dfx_4_pr.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/pinout.xdc"]"
set file_added [add_files -norecurse -fileset $obj [list $file]]
set file "$origin_dir/pinout.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj

# Set 'constrs_1' fileset properties
set obj [get_filesets constrs_1]

# Create 'sim_1' fileset (if not found)
if {[string equal [get_filesets -quiet sim_1] ""]} {
  create_fileset -simset sim_1
}

# Set 'sim_1' fileset object
set obj [get_filesets sim_1]
# Empty (no sources present)

# Set 'sim_1' fileset properties
set obj [get_filesets sim_1]
set_property -name "hbs.configure_design_for_hier_access" -value "1" -objects $obj
set_property -name "top" -value "video_cp_wrapper" -objects $obj
set_property -name "top_lib" -value "xil_defaultlib" -objects $obj

# Set 'utils_1' fileset object
set obj [get_filesets utils_1]
# Empty (no sources present)

# Set 'utils_1' fileset properties
set obj [get_filesets utils_1]

# Create 'pr_0' partition definition
create_partition_def -name pr_0 -module composable_pr_0_dilate_erode
set obj [get_partition_defs pr_0]
set_property -name "name" -value "pr_0" -objects $obj
set_property -name "use_blackbox_stub" -value "1" -objects $obj

# Create 'pr_1' partition definition
create_partition_def -name pr_1 -module composable_pr_1_dilate_erode
set obj [get_partition_defs pr_1]
set_property -name "name" -value "pr_1" -objects $obj
set_property -name "use_blackbox_stub" -value "1" -objects $obj

# Create 'pr_fork' partition definition
create_partition_def -name pr_fork -module composable_pr_fork_duplicate
set obj [get_partition_defs pr_fork]
set_property -name "name" -value "pr_fork" -objects $obj
set_property -name "use_blackbox_stub" -value "1" -objects $obj

# Create 'pr_join' partition definition
create_partition_def -name pr_join -module composable_pr_join_subtract
set obj [get_partition_defs pr_join]
set_property -name "name" -value "pr_join" -objects $obj
set_property -name "use_blackbox_stub" -value "1" -objects $obj



# Proc to create BD composable_pr_0_dilate_erode
proc cr_bd_composable_pr_0_dilate_erode { parentCell } {

  # CHANGE DESIGN NAME HERE
  set design_name composable_pr_0_dilate_erode

  common::send_gid_msg -ssname BD::TCL -id 2010 -severity "INFO" "Currently there is no design <$design_name> in project, so creating one..."

  create_bd_design $design_name

  set bCheckIPsPassed 1
  ##################################################################
  # CHECK IPs
  ##################################################################
  set bCheckIPs 1
  if { $bCheckIPs == 1 } {
     set list_check_ips "\ 
  xilinx.com:hls:dilate_accel:1.0\
  xilinx.com:hls:erode_accel:1.0\
  "

   set list_ips_missing ""
   common::send_gid_msg -ssname BD::TCL -id 2011 -severity "INFO" "Checking if the following IPs exist in the project's IP catalog: $list_check_ips ."

   foreach ip_vlnv $list_check_ips {
      set ip_obj [get_ipdefs -all $ip_vlnv]
      if { $ip_obj eq "" } {
         lappend list_ips_missing $ip_vlnv
      }
   }

   if { $list_ips_missing ne "" } {
      catch {common::send_gid_msg -ssname BD::TCL -id 2012 -severity "ERROR" "The following IPs are not found in the IP Catalog:\n  $list_ips_missing\n\nResolution: Please add the repository containing the IP(s) to the project." }
      set bCheckIPsPassed 0
   }

  }

  if { $bCheckIPsPassed != 1 } {
    common::send_gid_msg -ssname BD::TCL -id 2023 -severity "WARNING" "Will not continue with creation of design due to the error(s) above."
    return 3
  }

  variable script_folder

  if { $parentCell eq "" } {
     set parentCell [get_bd_cells /]
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj


  # Create interface ports
  set s_axi_control0 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 s_axi_control0 ]
  set_property -dict [ list \
   CONFIG.ADDR_WIDTH {31} \
   CONFIG.ARUSER_WIDTH {0} \
   CONFIG.AWUSER_WIDTH {0} \
   CONFIG.BUSER_WIDTH {0} \
   CONFIG.DATA_WIDTH {32} \
   CONFIG.FREQ_HZ {142857132} \
   CONFIG.HAS_BRESP {1} \
   CONFIG.HAS_BURST {0} \
   CONFIG.HAS_CACHE {0} \
   CONFIG.HAS_LOCK {0} \
   CONFIG.HAS_PROT {0} \
   CONFIG.HAS_QOS {0} \
   CONFIG.HAS_REGION {0} \
   CONFIG.HAS_RRESP {1} \
   CONFIG.HAS_WSTRB {1} \
   CONFIG.ID_WIDTH {0} \
   CONFIG.MAX_BURST_LENGTH {1} \
   CONFIG.NUM_READ_OUTSTANDING {1} \
   CONFIG.NUM_READ_THREADS {1} \
   CONFIG.NUM_WRITE_OUTSTANDING {1} \
   CONFIG.NUM_WRITE_THREADS {1} \
   CONFIG.PROTOCOL {AXI4LITE} \
   CONFIG.READ_WRITE_MODE {READ_WRITE} \
   CONFIG.RUSER_BITS_PER_BYTE {0} \
   CONFIG.RUSER_WIDTH {0} \
   CONFIG.SUPPORTS_NARROW_BURST {0} \
   CONFIG.WUSER_BITS_PER_BYTE {0} \
   CONFIG.WUSER_WIDTH {0} \
   ] $s_axi_control0

  set s_axi_control1 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 s_axi_control1 ]
  set_property -dict [ list \
   CONFIG.ADDR_WIDTH {31} \
   CONFIG.ARUSER_WIDTH {0} \
   CONFIG.AWUSER_WIDTH {0} \
   CONFIG.BUSER_WIDTH {0} \
   CONFIG.DATA_WIDTH {32} \
   CONFIG.FREQ_HZ {142857132} \
   CONFIG.HAS_BRESP {1} \
   CONFIG.HAS_BURST {0} \
   CONFIG.HAS_CACHE {0} \
   CONFIG.HAS_LOCK {0} \
   CONFIG.HAS_PROT {0} \
   CONFIG.HAS_QOS {0} \
   CONFIG.HAS_REGION {0} \
   CONFIG.HAS_RRESP {1} \
   CONFIG.HAS_WSTRB {1} \
   CONFIG.ID_WIDTH {0} \
   CONFIG.MAX_BURST_LENGTH {1} \
   CONFIG.NUM_READ_OUTSTANDING {1} \
   CONFIG.NUM_READ_THREADS {1} \
   CONFIG.NUM_WRITE_OUTSTANDING {1} \
   CONFIG.NUM_WRITE_THREADS {1} \
   CONFIG.PROTOCOL {AXI4LITE} \
   CONFIG.READ_WRITE_MODE {READ_WRITE} \
   CONFIG.RUSER_BITS_PER_BYTE {0} \
   CONFIG.RUSER_WIDTH {0} \
   CONFIG.SUPPORTS_NARROW_BURST {0} \
   CONFIG.WUSER_BITS_PER_BYTE {0} \
   CONFIG.WUSER_WIDTH {0} \
   ] $s_axi_control1

  set stream_in0 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 stream_in0 ]
  set_property -dict [ list \
   CONFIG.FREQ_HZ {142857132} \
   CONFIG.HAS_TKEEP {1} \
   CONFIG.HAS_TLAST {1} \
   CONFIG.HAS_TREADY {1} \
   CONFIG.HAS_TSTRB {1} \
   CONFIG.LAYERED_METADATA {undef} \
   CONFIG.TDATA_NUM_BYTES {3} \
   CONFIG.TDEST_WIDTH {1} \
   CONFIG.TID_WIDTH {1} \
   CONFIG.TUSER_WIDTH {1} \
   ] $stream_in0

  set stream_in1 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 stream_in1 ]
  set_property -dict [ list \
   CONFIG.FREQ_HZ {142857132} \
   CONFIG.HAS_TKEEP {1} \
   CONFIG.HAS_TLAST {1} \
   CONFIG.HAS_TREADY {1} \
   CONFIG.HAS_TSTRB {1} \
   CONFIG.LAYERED_METADATA {undef} \
   CONFIG.TDATA_NUM_BYTES {3} \
   CONFIG.TDEST_WIDTH {1} \
   CONFIG.TID_WIDTH {1} \
   CONFIG.TUSER_WIDTH {1} \
   ] $stream_in1

  set stream_out0 [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 stream_out0 ]
  set_property -dict [ list \
   CONFIG.FREQ_HZ {142857132} \
   ] $stream_out0

  set stream_out1 [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 stream_out1 ]
  set_property -dict [ list \
   CONFIG.FREQ_HZ {142857132} \
   ] $stream_out1


  # Create ports
  set clk_142M [ create_bd_port -dir I -type clk -freq_hz 142857132 clk_142M ]
  set_property -dict [ list \
   CONFIG.ASSOCIATED_BUSIF {s_axi_control0:s_axi_control1:stream_in0:stream_in1:stream_out0:stream_out1} \
 ] $clk_142M
  set periph_resetn_clk142M [ create_bd_port -dir I -type rst periph_resetn_clk142M ]

  # Create instance: dilate_accel, and set properties
  set dilate_accel [ create_bd_cell -type ip -vlnv xilinx.com:hls:dilate_accel:1.0 dilate_accel ]

  # Create instance: erode_accel, and set properties
  set erode_accel [ create_bd_cell -type ip -vlnv xilinx.com:hls:erode_accel:1.0 erode_accel ]

  # Create interface connections
  connect_bd_intf_net -intf_net dilate_accel_stream_out [get_bd_intf_ports stream_out0] [get_bd_intf_pins erode_accel/stream_out]
  connect_bd_intf_net -intf_net erode_accel_stream_out [get_bd_intf_ports stream_out1] [get_bd_intf_pins dilate_accel/stream_out]
  connect_bd_intf_net -intf_net s_axi_control0_1 [get_bd_intf_ports s_axi_control0] [get_bd_intf_pins erode_accel/s_axi_control]
  connect_bd_intf_net -intf_net s_axi_control1_1 [get_bd_intf_ports s_axi_control1] [get_bd_intf_pins dilate_accel/s_axi_control]
  connect_bd_intf_net -intf_net stream_in0_1 [get_bd_intf_ports stream_in0] [get_bd_intf_pins erode_accel/stream_in]
  connect_bd_intf_net -intf_net stream_in1_1 [get_bd_intf_ports stream_in1] [get_bd_intf_pins dilate_accel/stream_in]

  # Create port connections
  connect_bd_net -net clk_142M_1 [get_bd_ports clk_142M] [get_bd_pins dilate_accel/ap_clk] [get_bd_pins erode_accel/ap_clk]
  connect_bd_net -net periph_resetn_clk142M_1 [get_bd_ports periph_resetn_clk142M] [get_bd_pins dilate_accel/ap_rst_n] [get_bd_pins erode_accel/ap_rst_n]

  # Create address segments
  assign_bd_address -offset 0x00000000 -range 0x00008000 -target_address_space [get_bd_addr_spaces s_axi_control1] [get_bd_addr_segs dilate_accel/s_axi_control/Reg] -force
  assign_bd_address -offset 0x00000000 -range 0x00008000 -target_address_space [get_bd_addr_spaces s_axi_control0] [get_bd_addr_segs erode_accel/s_axi_control/Reg] -force


  # Restore current instance
  current_bd_instance $oldCurInst

  validate_bd_design
  save_bd_design
  close_bd_design $design_name 
}
# End of cr_bd_composable_pr_0_dilate_erode()
cr_bd_composable_pr_0_dilate_erode ""
set_property REGISTERED_WITH_MANAGER "1" [get_files composable_pr_0_dilate_erode.bd ] 
set_property SYNTH_CHECKPOINT_MODE "Hierarchical" [get_files composable_pr_0_dilate_erode.bd ] 

# Create 'composable_pr_0_dilate_erode' reconfigurable module
set partitionDef [get_partition_defs pr_0]
create_reconfig_module -name composable_pr_0_dilate_erode -partition_def $partitionDef
set_property default_rm composable_pr_0_dilate_erode $partitionDef
set obj [get_reconfig_modules composable_pr_0_dilate_erode]
set_property -name "module_name" -value "composable_pr_0_dilate_erode" -objects $obj

 move_files [ get_files composable_pr_0_dilate_erode.bd ] -of_objects [get_reconfig_modules composable_pr_0_dilate_erode]
# Set 'composable_pr_0_dilate_erode' fileset file properties for remote files
# None

# Set 'composable_pr_0_dilate_erode' fileset file properties for local files
# None



# Proc to create BD composable_pr_0_fast_fifo
proc cr_bd_composable_pr_0_fast_fifo { parentCell } {

  # CHANGE DESIGN NAME HERE
  set design_name composable_pr_0_fast_fifo

  common::send_gid_msg -ssname BD::TCL -id 2010 -severity "INFO" "Currently there is no design <$design_name> in project, so creating one..."

  create_bd_design $design_name

  set bCheckIPsPassed 1
  ##################################################################
  # CHECK IPs
  ##################################################################
  set bCheckIPs 1
  if { $bCheckIPs == 1 } {
     set list_check_ips "\ 
  xilinx.com:ip:axis_data_fifo:2.0\
  xilinx.com:hls:fast_accel:1.0\
  "

   set list_ips_missing ""
   common::send_gid_msg -ssname BD::TCL -id 2011 -severity "INFO" "Checking if the following IPs exist in the project's IP catalog: $list_check_ips ."

   foreach ip_vlnv $list_check_ips {
      set ip_obj [get_ipdefs -all $ip_vlnv]
      if { $ip_obj eq "" } {
         lappend list_ips_missing $ip_vlnv
      }
   }

   if { $list_ips_missing ne "" } {
      catch {common::send_gid_msg -ssname BD::TCL -id 2012 -severity "ERROR" "The following IPs are not found in the IP Catalog:\n  $list_ips_missing\n\nResolution: Please add the repository containing the IP(s) to the project." }
      set bCheckIPsPassed 0
   }

  }

  if { $bCheckIPsPassed != 1 } {
    common::send_gid_msg -ssname BD::TCL -id 2023 -severity "WARNING" "Will not continue with creation of design due to the error(s) above."
    return 3
  }

  variable script_folder

  if { $parentCell eq "" } {
     set parentCell [get_bd_cells /]
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj


  # Create interface ports
  set s_axi_control0 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 -portmaps { \
   ARADDR { physical_name s_axi_control0_araddr direction I left 6 right 0 } \
   ARREADY { physical_name s_axi_control0_arready direction O } \
   ARVALID { physical_name s_axi_control0_arvalid direction I } \
   AWADDR { physical_name s_axi_control0_awaddr direction I left 6 right 0 } \
   AWREADY { physical_name s_axi_control0_awready direction O } \
   AWVALID { physical_name s_axi_control0_awvalid direction I } \
   BREADY { physical_name s_axi_control0_bready direction I } \
   BRESP { physical_name s_axi_control0_bresp direction O left 1 right 0 } \
   BVALID { physical_name s_axi_control0_bvalid direction O } \
   RDATA { physical_name s_axi_control0_rdata direction O left 31 right 0 } \
   RREADY { physical_name s_axi_control0_rready direction I } \
   RRESP { physical_name s_axi_control0_rresp direction O left 1 right 0 } \
   RVALID { physical_name s_axi_control0_rvalid direction O } \
   WDATA { physical_name s_axi_control0_wdata direction I left 31 right 0 } \
   WREADY { physical_name s_axi_control0_wready direction O } \
   WSTRB { physical_name s_axi_control0_wstrb direction I left 3 right 0 } \
   WVALID { physical_name s_axi_control0_wvalid direction I } \
   } \
  s_axi_control0 ]
  set_property -dict [ list \
   CONFIG.ADDR_WIDTH {31} \
   CONFIG.ARUSER_WIDTH {0} \
   CONFIG.AWUSER_WIDTH {0} \
   CONFIG.BUSER_WIDTH {0} \
   CONFIG.DATA_WIDTH {32} \
   CONFIG.FREQ_HZ {142857132} \
   CONFIG.HAS_BRESP {1} \
   CONFIG.HAS_BURST {0} \
   CONFIG.HAS_CACHE {0} \
   CONFIG.HAS_LOCK {0} \
   CONFIG.HAS_PROT {0} \
   CONFIG.HAS_QOS {0} \
   CONFIG.HAS_REGION {0} \
   CONFIG.HAS_RRESP {1} \
   CONFIG.HAS_WSTRB {1} \
   CONFIG.ID_WIDTH {0} \
   CONFIG.MAX_BURST_LENGTH {1} \
   CONFIG.NUM_READ_OUTSTANDING {1} \
   CONFIG.NUM_READ_THREADS {1} \
   CONFIG.NUM_WRITE_OUTSTANDING {1} \
   CONFIG.NUM_WRITE_THREADS {1} \
   CONFIG.PROTOCOL {AXI4LITE} \
   CONFIG.READ_WRITE_MODE {READ_WRITE} \
   CONFIG.RUSER_BITS_PER_BYTE {0} \
   CONFIG.RUSER_WIDTH {0} \
   CONFIG.SUPPORTS_NARROW_BURST {0} \
   CONFIG.WUSER_BITS_PER_BYTE {0} \
   CONFIG.WUSER_WIDTH {0} \
   ] $s_axi_control0

  set s_axi_control1 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 -portmaps { \
   ARADDR { physical_name s_axi_control1_araddr direction I left 6 right 0 } \
   ARREADY { physical_name s_axi_control1_arready direction O } \
   ARVALID { physical_name s_axi_control1_arvalid direction I } \
   AWADDR { physical_name s_axi_control1_awaddr direction I left 6 right 0 } \
   AWREADY { physical_name s_axi_control1_awready direction O } \
   AWVALID { physical_name s_axi_control1_awvalid direction I } \
   BREADY { physical_name s_axi_control1_bready direction I } \
   BRESP { physical_name s_axi_control1_bresp direction O left 1 right 0 } \
   BVALID { physical_name s_axi_control1_bvalid direction O } \
   RDATA { physical_name s_axi_control1_rdata direction O left 31 right 0 } \
   RREADY { physical_name s_axi_control1_rready direction I } \
   RRESP { physical_name s_axi_control1_rresp direction O left 1 right 0 } \
   RVALID { physical_name s_axi_control1_rvalid direction O } \
   WDATA { physical_name s_axi_control1_wdata direction I left 31 right 0 } \
   WREADY { physical_name s_axi_control1_wready direction O } \
   WSTRB { physical_name s_axi_control1_wstrb direction I left 3 right 0 } \
   WVALID { physical_name s_axi_control1_wvalid direction I } \
   } \
  s_axi_control1 ]
  set_property -dict [ list \
   CONFIG.ADDR_WIDTH {31} \
   CONFIG.ARUSER_WIDTH {0} \
   CONFIG.AWUSER_WIDTH {0} \
   CONFIG.BUSER_WIDTH {0} \
   CONFIG.DATA_WIDTH {32} \
   CONFIG.FREQ_HZ {142857132} \
   CONFIG.HAS_BRESP {1} \
   CONFIG.HAS_BURST {0} \
   CONFIG.HAS_CACHE {0} \
   CONFIG.HAS_LOCK {0} \
   CONFIG.HAS_PROT {0} \
   CONFIG.HAS_QOS {0} \
   CONFIG.HAS_REGION {0} \
   CONFIG.HAS_RRESP {1} \
   CONFIG.HAS_WSTRB {1} \
   CONFIG.ID_WIDTH {0} \
   CONFIG.MAX_BURST_LENGTH {1} \
   CONFIG.NUM_READ_OUTSTANDING {1} \
   CONFIG.NUM_READ_THREADS {1} \
   CONFIG.NUM_WRITE_OUTSTANDING {1} \
   CONFIG.NUM_WRITE_THREADS {1} \
   CONFIG.PROTOCOL {AXI4LITE} \
   CONFIG.READ_WRITE_MODE {READ_WRITE} \
   CONFIG.RUSER_BITS_PER_BYTE {0} \
   CONFIG.RUSER_WIDTH {0} \
   CONFIG.SUPPORTS_NARROW_BURST {0} \
   CONFIG.WUSER_BITS_PER_BYTE {0} \
   CONFIG.WUSER_WIDTH {0} \
   ] $s_axi_control1

  set stream_in0 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 -portmaps { \
   TDATA { physical_name stream_in0_tdata direction I left 23 right 0 } \
   TDEST { physical_name stream_in0_tdest direction I left 0 right 0 } \
   TID { physical_name stream_in0_tid direction I left 0 right 0 } \
   TKEEP { physical_name stream_in0_tkeep direction I left 2 right 0 } \
   TLAST { physical_name stream_in0_tlast direction I left 0 right 0 } \
   TREADY { physical_name stream_in0_tready direction O } \
   TSTRB { physical_name stream_in0_tstrb direction I left 2 right 0 } \
   TUSER { physical_name stream_in0_tuser direction I left 0 right 0 } \
   TVALID { physical_name stream_in0_tvalid direction I } \
   } \
  stream_in0 ]
  set_property -dict [ list \
   CONFIG.FREQ_HZ {142857132} \
   CONFIG.HAS_TKEEP {1} \
   CONFIG.HAS_TLAST {1} \
   CONFIG.HAS_TREADY {1} \
   CONFIG.HAS_TSTRB {1} \
   CONFIG.LAYERED_METADATA {undef} \
   CONFIG.TDATA_NUM_BYTES {3} \
   CONFIG.TDEST_WIDTH {1} \
   CONFIG.TID_WIDTH {1} \
   CONFIG.TUSER_WIDTH {1} \
   ] $stream_in0

  set stream_in1 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 -portmaps { \
   TDATA { physical_name stream_in1_tdata direction I left 23 right 0 } \
   TDEST { physical_name stream_in1_tdest direction I left 0 right 0 } \
   TID { physical_name stream_in1_tid direction I left 0 right 0 } \
   TKEEP { physical_name stream_in1_tkeep direction I left 2 right 0 } \
   TLAST { physical_name stream_in1_tlast direction I left 0 right 0 } \
   TREADY { physical_name stream_in1_tready direction O } \
   TSTRB { physical_name stream_in1_tstrb direction I left 2 right 0 } \
   TUSER { physical_name stream_in1_tuser direction I left 0 right 0 } \
   TVALID { physical_name stream_in1_tvalid direction I } \
   } \
  stream_in1 ]
  set_property -dict [ list \
   CONFIG.FREQ_HZ {142857132} \
   CONFIG.HAS_TKEEP {1} \
   CONFIG.HAS_TLAST {1} \
   CONFIG.HAS_TREADY {1} \
   CONFIG.HAS_TSTRB {1} \
   CONFIG.LAYERED_METADATA {undef} \
   CONFIG.TDATA_NUM_BYTES {3} \
   CONFIG.TDEST_WIDTH {1} \
   CONFIG.TID_WIDTH {1} \
   CONFIG.TUSER_WIDTH {1} \
   ] $stream_in1

  set stream_out0 [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 -portmaps { \
   TDATA { physical_name stream_out0_tdata direction O left 23 right 0 } \
   TDEST { physical_name stream_out0_tdest direction O left 0 right 0 } \
   TID { physical_name stream_out0_tid direction O left 0 right 0 } \
   TKEEP { physical_name stream_out0_tkeep direction O left 2 right 0 } \
   TLAST { physical_name stream_out0_tlast direction O left 0 right 0 } \
   TREADY { physical_name stream_out0_tready direction I } \
   TSTRB { physical_name stream_out0_tstrb direction O left 2 right 0 } \
   TUSER { physical_name stream_out0_tuser direction O left 0 right 0 } \
   TVALID { physical_name stream_out0_tvalid direction O } \
   } \
  stream_out0 ]
  set_property -dict [ list \
   CONFIG.FREQ_HZ {142857132} \
   ] $stream_out0

  set stream_out1 [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 -portmaps { \
   TDATA { physical_name stream_out1_tdata direction O left 23 right 0 } \
   TDEST { physical_name stream_out1_tdest direction O left 0 right 0 } \
   TID { physical_name stream_out1_tid direction O left 0 right 0 } \
   TKEEP { physical_name stream_out1_tkeep direction O left 2 right 0 } \
   TLAST { physical_name stream_out1_tlast direction O left 0 right 0 } \
   TREADY { physical_name stream_out1_tready direction I } \
   TSTRB { physical_name stream_out1_tstrb direction O left 2 right 0 } \
   TUSER { physical_name stream_out1_tuser direction O left 0 right 0 } \
   TVALID { physical_name stream_out1_tvalid direction O } \
   } \
  stream_out1 ]
  set_property -dict [ list \
   CONFIG.FREQ_HZ {142857132} \
   ] $stream_out1


  # Create ports
  set clk_142M [ create_bd_port -dir I -type clk -freq_hz 142857132 clk_142M ]
  set_property -dict [ list \
   CONFIG.ASSOCIATED_BUSIF {s_axi_control0:s_axi_control1:stream_in0:stream_in1:stream_out0:stream_out1} \
 ] $clk_142M
  set periph_resetn_clk142M [ create_bd_port -dir I -type rst periph_resetn_clk142M ]

  # Create instance: axis_data_fifo_0, and set properties
  set axis_data_fifo_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_data_fifo:2.0 axis_data_fifo_0 ]
  set_property -dict [ list \
   CONFIG.FIFO_DEPTH {4096} \
   CONFIG.FIFO_MEMORY_TYPE {block} \
   CONFIG.HAS_TLAST {1} \
   CONFIG.TDATA_NUM_BYTES {3} \
   CONFIG.TUSER_WIDTH {1} \
 ] $axis_data_fifo_0

  # Create instance: fast_accel, and set properties
  set fast_accel [ create_bd_cell -type ip -vlnv xilinx.com:hls:fast_accel:1.0 fast_accel ]

  # Create interface connections
  connect_bd_intf_net -intf_net axis_data_fifo_0_M_AXIS [get_bd_intf_ports stream_out1] [get_bd_intf_pins axis_data_fifo_0/M_AXIS]
  connect_bd_intf_net -intf_net fast_accel_stream_out [get_bd_intf_ports stream_out0] [get_bd_intf_pins fast_accel/stream_out]
  connect_bd_intf_net -intf_net s_axi_control0_1 [get_bd_intf_ports s_axi_control0] [get_bd_intf_pins fast_accel/s_axi_control]
  connect_bd_intf_net -intf_net stream_in0_1 [get_bd_intf_ports stream_in0] [get_bd_intf_pins fast_accel/stream_in]
  connect_bd_intf_net -intf_net stream_in1_1 [get_bd_intf_ports stream_in1] [get_bd_intf_pins axis_data_fifo_0/S_AXIS]

  # Create port connections
  connect_bd_net -net clk_142M_1 [get_bd_ports clk_142M] [get_bd_pins axis_data_fifo_0/s_axis_aclk] [get_bd_pins fast_accel/ap_clk]
  connect_bd_net -net periph_resetn_clk142M_1 [get_bd_ports periph_resetn_clk142M] [get_bd_pins axis_data_fifo_0/s_axis_aresetn] [get_bd_pins fast_accel/ap_rst_n]

  # Create address segments
  assign_bd_address -offset 0x00000000 -range 0x00008000 -target_address_space [get_bd_addr_spaces s_axi_control0] [get_bd_addr_segs fast_accel/s_axi_control/Reg] -force


  # Restore current instance
  current_bd_instance $oldCurInst

  validate_bd_design

  set_property HDL_ATTRIBUTE.LOCKED {TRUE} [get_bd_intf_ports s_axi_control0]
  set_property HDL_ATTRIBUTE.LOCKED {TRUE} [get_bd_intf_ports s_axi_control1]
  set_property HDL_ATTRIBUTE.LOCKED {TRUE} [get_bd_intf_ports stream_in0]
  set_property HDL_ATTRIBUTE.LOCKED {TRUE} [get_bd_intf_ports stream_in1]
  set_property HDL_ATTRIBUTE.LOCKED {TRUE} [get_bd_intf_ports stream_out0]
  set_property HDL_ATTRIBUTE.LOCKED {TRUE} [get_bd_intf_ports stream_out1]

  # The first validate above is to propagate values prior to the set command(s)
  # above. Need second validate call to ensure design is validated.
  validate_bd_design

  save_bd_design
  close_bd_design $design_name 
}
# End of cr_bd_composable_pr_0_fast_fifo()
cr_bd_composable_pr_0_fast_fifo ""
set_property REGISTERED_WITH_MANAGER "1" [get_files composable_pr_0_fast_fifo.bd ] 
set_property SYNTH_CHECKPOINT_MODE "Hierarchical" [get_files composable_pr_0_fast_fifo.bd ] 

# Create 'composable_pr_0_fast_fifo' reconfigurable module
set partitionDef [get_partition_defs pr_0]
create_reconfig_module -name composable_pr_0_fast_fifo -partition_def $partitionDef
set obj [get_reconfig_modules composable_pr_0_fast_fifo]
set_property -name "module_name" -value "composable_pr_0_fast_fifo" -objects $obj

 move_files [ get_files composable_pr_0_fast_fifo.bd ] -of_objects [get_reconfig_modules composable_pr_0_fast_fifo]
# Set 'composable_pr_0_fast_fifo' fileset file properties for remote files
# None

# Set 'composable_pr_0_fast_fifo' fileset file properties for local files
# None



# Proc to create BD composable_pr_0_filter2d_fifo
proc cr_bd_composable_pr_0_filter2d_fifo { parentCell } {

  # CHANGE DESIGN NAME HERE
  set design_name composable_pr_0_filter2d_fifo

  common::send_gid_msg -ssname BD::TCL -id 2010 -severity "INFO" "Currently there is no design <$design_name> in project, so creating one..."

  create_bd_design $design_name

  set bCheckIPsPassed 1
  ##################################################################
  # CHECK IPs
  ##################################################################
  set bCheckIPs 1
  if { $bCheckIPs == 1 } {
     set list_check_ips "\ 
  xilinx.com:ip:axis_data_fifo:2.0\
  xilinx.com:hls:filter2d_accel:1.0\
  "

   set list_ips_missing ""
   common::send_gid_msg -ssname BD::TCL -id 2011 -severity "INFO" "Checking if the following IPs exist in the project's IP catalog: $list_check_ips ."

   foreach ip_vlnv $list_check_ips {
      set ip_obj [get_ipdefs -all $ip_vlnv]
      if { $ip_obj eq "" } {
         lappend list_ips_missing $ip_vlnv
      }
   }

   if { $list_ips_missing ne "" } {
      catch {common::send_gid_msg -ssname BD::TCL -id 2012 -severity "ERROR" "The following IPs are not found in the IP Catalog:\n  $list_ips_missing\n\nResolution: Please add the repository containing the IP(s) to the project." }
      set bCheckIPsPassed 0
   }

  }

  if { $bCheckIPsPassed != 1 } {
    common::send_gid_msg -ssname BD::TCL -id 2023 -severity "WARNING" "Will not continue with creation of design due to the error(s) above."
    return 3
  }

  variable script_folder

  if { $parentCell eq "" } {
     set parentCell [get_bd_cells /]
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj


  # Create interface ports
  set s_axi_control0 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 -portmaps { \
   ARADDR { physical_name s_axi_control0_araddr direction I left 6 right 0 } \
   ARREADY { physical_name s_axi_control0_arready direction O } \
   ARVALID { physical_name s_axi_control0_arvalid direction I } \
   AWADDR { physical_name s_axi_control0_awaddr direction I left 6 right 0 } \
   AWREADY { physical_name s_axi_control0_awready direction O } \
   AWVALID { physical_name s_axi_control0_awvalid direction I } \
   BREADY { physical_name s_axi_control0_bready direction I } \
   BRESP { physical_name s_axi_control0_bresp direction O left 1 right 0 } \
   BVALID { physical_name s_axi_control0_bvalid direction O } \
   RDATA { physical_name s_axi_control0_rdata direction O left 31 right 0 } \
   RREADY { physical_name s_axi_control0_rready direction I } \
   RRESP { physical_name s_axi_control0_rresp direction O left 1 right 0 } \
   RVALID { physical_name s_axi_control0_rvalid direction O } \
   WDATA { physical_name s_axi_control0_wdata direction I left 31 right 0 } \
   WREADY { physical_name s_axi_control0_wready direction O } \
   WSTRB { physical_name s_axi_control0_wstrb direction I left 3 right 0 } \
   WVALID { physical_name s_axi_control0_wvalid direction I } \
   } \
  s_axi_control0 ]
  set_property -dict [ list \
   CONFIG.ADDR_WIDTH {31} \
   CONFIG.ARUSER_WIDTH {0} \
   CONFIG.AWUSER_WIDTH {0} \
   CONFIG.BUSER_WIDTH {0} \
   CONFIG.DATA_WIDTH {32} \
   CONFIG.FREQ_HZ {142857132} \
   CONFIG.HAS_BRESP {1} \
   CONFIG.HAS_BURST {0} \
   CONFIG.HAS_CACHE {0} \
   CONFIG.HAS_LOCK {0} \
   CONFIG.HAS_PROT {0} \
   CONFIG.HAS_QOS {0} \
   CONFIG.HAS_REGION {0} \
   CONFIG.HAS_RRESP {1} \
   CONFIG.HAS_WSTRB {1} \
   CONFIG.ID_WIDTH {0} \
   CONFIG.MAX_BURST_LENGTH {1} \
   CONFIG.NUM_READ_OUTSTANDING {1} \
   CONFIG.NUM_READ_THREADS {1} \
   CONFIG.NUM_WRITE_OUTSTANDING {1} \
   CONFIG.NUM_WRITE_THREADS {1} \
   CONFIG.PROTOCOL {AXI4LITE} \
   CONFIG.READ_WRITE_MODE {READ_WRITE} \
   CONFIG.RUSER_BITS_PER_BYTE {0} \
   CONFIG.RUSER_WIDTH {0} \
   CONFIG.SUPPORTS_NARROW_BURST {0} \
   CONFIG.WUSER_BITS_PER_BYTE {0} \
   CONFIG.WUSER_WIDTH {0} \
   ] $s_axi_control0

  set s_axi_control1 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 -portmaps { \
   ARADDR { physical_name s_axi_control1_araddr direction I left 6 right 0 } \
   ARREADY { physical_name s_axi_control1_arready direction O } \
   ARVALID { physical_name s_axi_control1_arvalid direction I } \
   AWADDR { physical_name s_axi_control1_awaddr direction I left 6 right 0 } \
   AWREADY { physical_name s_axi_control1_awready direction O } \
   AWVALID { physical_name s_axi_control1_awvalid direction I } \
   BREADY { physical_name s_axi_control1_bready direction I } \
   BRESP { physical_name s_axi_control1_bresp direction O left 1 right 0 } \
   BVALID { physical_name s_axi_control1_bvalid direction O } \
   RDATA { physical_name s_axi_control1_rdata direction O left 31 right 0 } \
   RREADY { physical_name s_axi_control1_rready direction I } \
   RRESP { physical_name s_axi_control1_rresp direction O left 1 right 0 } \
   RVALID { physical_name s_axi_control1_rvalid direction O } \
   WDATA { physical_name s_axi_control1_wdata direction I left 31 right 0 } \
   WREADY { physical_name s_axi_control1_wready direction O } \
   WSTRB { physical_name s_axi_control1_wstrb direction I left 3 right 0 } \
   WVALID { physical_name s_axi_control1_wvalid direction I } \
   } \
  s_axi_control1 ]
  set_property -dict [ list \
   CONFIG.ADDR_WIDTH {31} \
   CONFIG.ARUSER_WIDTH {0} \
   CONFIG.AWUSER_WIDTH {0} \
   CONFIG.BUSER_WIDTH {0} \
   CONFIG.DATA_WIDTH {32} \
   CONFIG.FREQ_HZ {142857132} \
   CONFIG.HAS_BRESP {1} \
   CONFIG.HAS_BURST {0} \
   CONFIG.HAS_CACHE {0} \
   CONFIG.HAS_LOCK {0} \
   CONFIG.HAS_PROT {0} \
   CONFIG.HAS_QOS {0} \
   CONFIG.HAS_REGION {0} \
   CONFIG.HAS_RRESP {1} \
   CONFIG.HAS_WSTRB {1} \
   CONFIG.ID_WIDTH {0} \
   CONFIG.MAX_BURST_LENGTH {1} \
   CONFIG.NUM_READ_OUTSTANDING {1} \
   CONFIG.NUM_READ_THREADS {1} \
   CONFIG.NUM_WRITE_OUTSTANDING {1} \
   CONFIG.NUM_WRITE_THREADS {1} \
   CONFIG.PROTOCOL {AXI4LITE} \
   CONFIG.READ_WRITE_MODE {READ_WRITE} \
   CONFIG.RUSER_BITS_PER_BYTE {0} \
   CONFIG.RUSER_WIDTH {0} \
   CONFIG.SUPPORTS_NARROW_BURST {0} \
   CONFIG.WUSER_BITS_PER_BYTE {0} \
   CONFIG.WUSER_WIDTH {0} \
   ] $s_axi_control1

  set stream_in0 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 -portmaps { \
   TDATA { physical_name stream_in0_tdata direction I left 23 right 0 } \
   TDEST { physical_name stream_in0_tdest direction I left 0 right 0 } \
   TID { physical_name stream_in0_tid direction I left 0 right 0 } \
   TKEEP { physical_name stream_in0_tkeep direction I left 2 right 0 } \
   TLAST { physical_name stream_in0_tlast direction I left 0 right 0 } \
   TREADY { physical_name stream_in0_tready direction O } \
   TSTRB { physical_name stream_in0_tstrb direction I left 2 right 0 } \
   TUSER { physical_name stream_in0_tuser direction I left 0 right 0 } \
   TVALID { physical_name stream_in0_tvalid direction I } \
   } \
  stream_in0 ]
  set_property -dict [ list \
   CONFIG.FREQ_HZ {142857132} \
   CONFIG.HAS_TKEEP {1} \
   CONFIG.HAS_TLAST {1} \
   CONFIG.HAS_TREADY {1} \
   CONFIG.HAS_TSTRB {1} \
   CONFIG.LAYERED_METADATA {undef} \
   CONFIG.TDATA_NUM_BYTES {3} \
   CONFIG.TDEST_WIDTH {1} \
   CONFIG.TID_WIDTH {1} \
   CONFIG.TUSER_WIDTH {1} \
   ] $stream_in0

  set stream_in1 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 -portmaps { \
   TDATA { physical_name stream_in1_tdata direction I left 23 right 0 } \
   TDEST { physical_name stream_in1_tdest direction I left 0 right 0 } \
   TID { physical_name stream_in1_tid direction I left 0 right 0 } \
   TKEEP { physical_name stream_in1_tkeep direction I left 2 right 0 } \
   TLAST { physical_name stream_in1_tlast direction I left 0 right 0 } \
   TREADY { physical_name stream_in1_tready direction O } \
   TSTRB { physical_name stream_in1_tstrb direction I left 2 right 0 } \
   TUSER { physical_name stream_in1_tuser direction I left 0 right 0 } \
   TVALID { physical_name stream_in1_tvalid direction I } \
   } \
  stream_in1 ]
  set_property -dict [ list \
   CONFIG.FREQ_HZ {142857132} \
   CONFIG.HAS_TKEEP {1} \
   CONFIG.HAS_TLAST {1} \
   CONFIG.HAS_TREADY {1} \
   CONFIG.HAS_TSTRB {1} \
   CONFIG.LAYERED_METADATA {undef} \
   CONFIG.TDATA_NUM_BYTES {3} \
   CONFIG.TDEST_WIDTH {1} \
   CONFIG.TID_WIDTH {1} \
   CONFIG.TUSER_WIDTH {1} \
   ] $stream_in1

  set stream_out0 [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 -portmaps { \
   TDATA { physical_name stream_out0_tdata direction O left 23 right 0 } \
   TDEST { physical_name stream_out0_tdest direction O left 0 right 0 } \
   TID { physical_name stream_out0_tid direction O left 0 right 0 } \
   TKEEP { physical_name stream_out0_tkeep direction O left 2 right 0 } \
   TLAST { physical_name stream_out0_tlast direction O left 0 right 0 } \
   TREADY { physical_name stream_out0_tready direction I } \
   TSTRB { physical_name stream_out0_tstrb direction O left 2 right 0 } \
   TUSER { physical_name stream_out0_tuser direction O left 0 right 0 } \
   TVALID { physical_name stream_out0_tvalid direction O } \
   } \
  stream_out0 ]
  set_property -dict [ list \
   CONFIG.FREQ_HZ {142857132} \
   ] $stream_out0

  set stream_out1 [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 -portmaps { \
   TDATA { physical_name stream_out1_tdata direction O left 23 right 0 } \
   TDEST { physical_name stream_out1_tdest direction O left 0 right 0 } \
   TID { physical_name stream_out1_tid direction O left 0 right 0 } \
   TKEEP { physical_name stream_out1_tkeep direction O left 2 right 0 } \
   TLAST { physical_name stream_out1_tlast direction O left 0 right 0 } \
   TREADY { physical_name stream_out1_tready direction I } \
   TSTRB { physical_name stream_out1_tstrb direction O left 2 right 0 } \
   TUSER { physical_name stream_out1_tuser direction O left 0 right 0 } \
   TVALID { physical_name stream_out1_tvalid direction O } \
   } \
  stream_out1 ]
  set_property -dict [ list \
   CONFIG.FREQ_HZ {142857132} \
   ] $stream_out1


  # Create ports
  set clk_142M [ create_bd_port -dir I -type clk -freq_hz 142857132 clk_142M ]
  set_property -dict [ list \
   CONFIG.ASSOCIATED_BUSIF {s_axi_control0:s_axi_control1:stream_in0:stream_in1:stream_out0:stream_out1} \
 ] $clk_142M
  set periph_resetn_clk142M [ create_bd_port -dir I -type rst periph_resetn_clk142M ]

  # Create instance: axis_data_fifo_1, and set properties
  set axis_data_fifo_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_data_fifo:2.0 axis_data_fifo_1 ]
  set_property -dict [ list \
   CONFIG.FIFO_DEPTH {4096} \
   CONFIG.FIFO_MEMORY_TYPE {block} \
   CONFIG.HAS_TLAST {1} \
   CONFIG.TDATA_NUM_BYTES {3} \
   CONFIG.TUSER_WIDTH {1} \
 ] $axis_data_fifo_1

  # Create instance: filter2d_accel, and set properties
  set filter2d_accel [ create_bd_cell -type ip -vlnv xilinx.com:hls:filter2d_accel:1.0 filter2d_accel ]

  # Create interface connections
  connect_bd_intf_net -intf_net axis_data_fifo_1_M_AXIS [get_bd_intf_ports stream_out1] [get_bd_intf_pins axis_data_fifo_1/M_AXIS]
  connect_bd_intf_net -intf_net filter2d_accel_stream_out [get_bd_intf_ports stream_out0] [get_bd_intf_pins filter2d_accel/stream_out]
  connect_bd_intf_net -intf_net s_axi_control0_1 [get_bd_intf_ports s_axi_control0] [get_bd_intf_pins filter2d_accel/s_axi_control]
  connect_bd_intf_net -intf_net stream_in0_1 [get_bd_intf_ports stream_in0] [get_bd_intf_pins filter2d_accel/stream_in]
  connect_bd_intf_net -intf_net stream_in1_1 [get_bd_intf_ports stream_in1] [get_bd_intf_pins axis_data_fifo_1/S_AXIS]

  # Create port connections
  connect_bd_net -net clk_142M_1 [get_bd_ports clk_142M] [get_bd_pins axis_data_fifo_1/s_axis_aclk] [get_bd_pins filter2d_accel/ap_clk]
  connect_bd_net -net periph_resetn_clk142M_1 [get_bd_ports periph_resetn_clk142M] [get_bd_pins axis_data_fifo_1/s_axis_aresetn] [get_bd_pins filter2d_accel/ap_rst_n]

  # Create address segments
  assign_bd_address -offset 0x00000000 -range 0x00008000 -target_address_space [get_bd_addr_spaces s_axi_control0] [get_bd_addr_segs filter2d_accel/s_axi_control/Reg] -force


  # Restore current instance
  current_bd_instance $oldCurInst

  validate_bd_design

  set_property HDL_ATTRIBUTE.LOCKED {TRUE} [get_bd_intf_ports s_axi_control0]
  set_property HDL_ATTRIBUTE.LOCKED {TRUE} [get_bd_intf_ports s_axi_control1]
  set_property HDL_ATTRIBUTE.LOCKED {TRUE} [get_bd_intf_ports stream_in0]
  set_property HDL_ATTRIBUTE.LOCKED {TRUE} [get_bd_intf_ports stream_in1]
  set_property HDL_ATTRIBUTE.LOCKED {TRUE} [get_bd_intf_ports stream_out0]
  set_property HDL_ATTRIBUTE.LOCKED {TRUE} [get_bd_intf_ports stream_out1]

  # The first validate above is to propagate values prior to the set command(s)
  # above. Need second validate call to ensure design is validated.
  validate_bd_design

  save_bd_design
  close_bd_design $design_name 
}
# End of cr_bd_composable_pr_0_filter2d_fifo()
cr_bd_composable_pr_0_filter2d_fifo ""
set_property REGISTERED_WITH_MANAGER "1" [get_files composable_pr_0_filter2d_fifo.bd ] 
set_property SYNTH_CHECKPOINT_MODE "Hierarchical" [get_files composable_pr_0_filter2d_fifo.bd ] 

# Create 'composable_pr_0_filter2d_fifo' reconfigurable module
set partitionDef [get_partition_defs pr_0]
create_reconfig_module -name composable_pr_0_filter2d_fifo -partition_def $partitionDef
set obj [get_reconfig_modules composable_pr_0_filter2d_fifo]
set_property -name "module_name" -value "composable_pr_0_filter2d_fifo" -objects $obj

 move_files [ get_files composable_pr_0_filter2d_fifo.bd ] -of_objects [get_reconfig_modules composable_pr_0_filter2d_fifo]
# Set 'composable_pr_0_filter2d_fifo' fileset file properties for remote files
# None

# Set 'composable_pr_0_filter2d_fifo' fileset file properties for local files
# None



# Proc to create BD composable_pr_1_cornerharris_fifo
proc cr_bd_composable_pr_1_cornerharris_fifo { parentCell } {

  # CHANGE DESIGN NAME HERE
  set design_name composable_pr_1_cornerharris_fifo

  common::send_gid_msg -ssname BD::TCL -id 2010 -severity "INFO" "Currently there is no design <$design_name> in project, so creating one..."

  create_bd_design $design_name

  set bCheckIPsPassed 1
  ##################################################################
  # CHECK IPs
  ##################################################################
  set bCheckIPs 1
  if { $bCheckIPs == 1 } {
     set list_check_ips "\ 
  xilinx.com:ip:axis_data_fifo:2.0\
  xilinx.com:hls:cornerHarris_accel:1.0\
  "

   set list_ips_missing ""
   common::send_gid_msg -ssname BD::TCL -id 2011 -severity "INFO" "Checking if the following IPs exist in the project's IP catalog: $list_check_ips ."

   foreach ip_vlnv $list_check_ips {
      set ip_obj [get_ipdefs -all $ip_vlnv]
      if { $ip_obj eq "" } {
         lappend list_ips_missing $ip_vlnv
      }
   }

   if { $list_ips_missing ne "" } {
      catch {common::send_gid_msg -ssname BD::TCL -id 2012 -severity "ERROR" "The following IPs are not found in the IP Catalog:\n  $list_ips_missing\n\nResolution: Please add the repository containing the IP(s) to the project." }
      set bCheckIPsPassed 0
   }

  }

  if { $bCheckIPsPassed != 1 } {
    common::send_gid_msg -ssname BD::TCL -id 2023 -severity "WARNING" "Will not continue with creation of design due to the error(s) above."
    return 3
  }

  variable script_folder

  if { $parentCell eq "" } {
     set parentCell [get_bd_cells /]
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj


  # Create interface ports
  set s_axi_control0 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 -portmaps { \
   ARADDR { physical_name s_axi_control0_araddr direction I left 6 right 0 } \
   ARREADY { physical_name s_axi_control0_arready direction O } \
   ARVALID { physical_name s_axi_control0_arvalid direction I } \
   AWADDR { physical_name s_axi_control0_awaddr direction I left 6 right 0 } \
   AWREADY { physical_name s_axi_control0_awready direction O } \
   AWVALID { physical_name s_axi_control0_awvalid direction I } \
   BREADY { physical_name s_axi_control0_bready direction I } \
   BRESP { physical_name s_axi_control0_bresp direction O left 1 right 0 } \
   BVALID { physical_name s_axi_control0_bvalid direction O } \
   RDATA { physical_name s_axi_control0_rdata direction O left 31 right 0 } \
   RREADY { physical_name s_axi_control0_rready direction I } \
   RRESP { physical_name s_axi_control0_rresp direction O left 1 right 0 } \
   RVALID { physical_name s_axi_control0_rvalid direction O } \
   WDATA { physical_name s_axi_control0_wdata direction I left 31 right 0 } \
   WREADY { physical_name s_axi_control0_wready direction O } \
   WSTRB { physical_name s_axi_control0_wstrb direction I left 3 right 0 } \
   WVALID { physical_name s_axi_control0_wvalid direction I } \
   } \
  s_axi_control0 ]
  set_property -dict [ list \
   CONFIG.ADDR_WIDTH {31} \
   CONFIG.ARUSER_WIDTH {0} \
   CONFIG.AWUSER_WIDTH {0} \
   CONFIG.BUSER_WIDTH {0} \
   CONFIG.DATA_WIDTH {32} \
   CONFIG.FREQ_HZ {142857132} \
   CONFIG.HAS_BRESP {1} \
   CONFIG.HAS_BURST {0} \
   CONFIG.HAS_CACHE {0} \
   CONFIG.HAS_LOCK {0} \
   CONFIG.HAS_PROT {0} \
   CONFIG.HAS_QOS {0} \
   CONFIG.HAS_REGION {0} \
   CONFIG.HAS_RRESP {1} \
   CONFIG.HAS_WSTRB {1} \
   CONFIG.ID_WIDTH {0} \
   CONFIG.MAX_BURST_LENGTH {1} \
   CONFIG.NUM_READ_OUTSTANDING {1} \
   CONFIG.NUM_READ_THREADS {1} \
   CONFIG.NUM_WRITE_OUTSTANDING {1} \
   CONFIG.NUM_WRITE_THREADS {1} \
   CONFIG.PROTOCOL {AXI4LITE} \
   CONFIG.READ_WRITE_MODE {READ_WRITE} \
   CONFIG.RUSER_BITS_PER_BYTE {0} \
   CONFIG.RUSER_WIDTH {0} \
   CONFIG.SUPPORTS_NARROW_BURST {0} \
   CONFIG.WUSER_BITS_PER_BYTE {0} \
   CONFIG.WUSER_WIDTH {0} \
   ] $s_axi_control0

  set s_axi_control1 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 -portmaps { \
   ARADDR { physical_name s_axi_control1_araddr direction I left 6 right 0 } \
   ARREADY { physical_name s_axi_control1_arready direction O } \
   ARVALID { physical_name s_axi_control1_arvalid direction I } \
   AWADDR { physical_name s_axi_control1_awaddr direction I left 6 right 0 } \
   AWREADY { physical_name s_axi_control1_awready direction O } \
   AWVALID { physical_name s_axi_control1_awvalid direction I } \
   BREADY { physical_name s_axi_control1_bready direction I } \
   BRESP { physical_name s_axi_control1_bresp direction O left 1 right 0 } \
   BVALID { physical_name s_axi_control1_bvalid direction O } \
   RDATA { physical_name s_axi_control1_rdata direction O left 31 right 0 } \
   RREADY { physical_name s_axi_control1_rready direction I } \
   RRESP { physical_name s_axi_control1_rresp direction O left 1 right 0 } \
   RVALID { physical_name s_axi_control1_rvalid direction O } \
   WDATA { physical_name s_axi_control1_wdata direction I left 31 right 0 } \
   WREADY { physical_name s_axi_control1_wready direction O } \
   WSTRB { physical_name s_axi_control1_wstrb direction I left 3 right 0 } \
   WVALID { physical_name s_axi_control1_wvalid direction I } \
   } \
  s_axi_control1 ]
  set_property -dict [ list \
   CONFIG.ADDR_WIDTH {31} \
   CONFIG.ARUSER_WIDTH {0} \
   CONFIG.AWUSER_WIDTH {0} \
   CONFIG.BUSER_WIDTH {0} \
   CONFIG.DATA_WIDTH {32} \
   CONFIG.FREQ_HZ {142857132} \
   CONFIG.HAS_BRESP {1} \
   CONFIG.HAS_BURST {0} \
   CONFIG.HAS_CACHE {0} \
   CONFIG.HAS_LOCK {0} \
   CONFIG.HAS_PROT {0} \
   CONFIG.HAS_QOS {0} \
   CONFIG.HAS_REGION {0} \
   CONFIG.HAS_RRESP {1} \
   CONFIG.HAS_WSTRB {1} \
   CONFIG.ID_WIDTH {0} \
   CONFIG.MAX_BURST_LENGTH {1} \
   CONFIG.NUM_READ_OUTSTANDING {1} \
   CONFIG.NUM_READ_THREADS {1} \
   CONFIG.NUM_WRITE_OUTSTANDING {1} \
   CONFIG.NUM_WRITE_THREADS {1} \
   CONFIG.PROTOCOL {AXI4LITE} \
   CONFIG.READ_WRITE_MODE {READ_WRITE} \
   CONFIG.RUSER_BITS_PER_BYTE {0} \
   CONFIG.RUSER_WIDTH {0} \
   CONFIG.SUPPORTS_NARROW_BURST {0} \
   CONFIG.WUSER_BITS_PER_BYTE {0} \
   CONFIG.WUSER_WIDTH {0} \
   ] $s_axi_control1

  set stream_in0 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 -portmaps { \
   TDATA { physical_name stream_in0_tdata direction I left 23 right 0 } \
   TDEST { physical_name stream_in0_tdest direction I left 0 right 0 } \
   TID { physical_name stream_in0_tid direction I left 0 right 0 } \
   TKEEP { physical_name stream_in0_tkeep direction I left 2 right 0 } \
   TLAST { physical_name stream_in0_tlast direction I left 0 right 0 } \
   TREADY { physical_name stream_in0_tready direction O } \
   TSTRB { physical_name stream_in0_tstrb direction I left 2 right 0 } \
   TUSER { physical_name stream_in0_tuser direction I left 0 right 0 } \
   TVALID { physical_name stream_in0_tvalid direction I } \
   } \
  stream_in0 ]
  set_property -dict [ list \
   CONFIG.FREQ_HZ {142857132} \
   CONFIG.HAS_TKEEP {1} \
   CONFIG.HAS_TLAST {1} \
   CONFIG.HAS_TREADY {1} \
   CONFIG.HAS_TSTRB {1} \
   CONFIG.LAYERED_METADATA {undef} \
   CONFIG.TDATA_NUM_BYTES {3} \
   CONFIG.TDEST_WIDTH {1} \
   CONFIG.TID_WIDTH {1} \
   CONFIG.TUSER_WIDTH {1} \
   ] $stream_in0

  set stream_in1 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 -portmaps { \
   TDATA { physical_name stream_in1_tdata direction I left 23 right 0 } \
   TDEST { physical_name stream_in1_tdest direction I left 0 right 0 } \
   TID { physical_name stream_in1_tid direction I left 0 right 0 } \
   TKEEP { physical_name stream_in1_tkeep direction I left 2 right 0 } \
   TLAST { physical_name stream_in1_tlast direction I left 0 right 0 } \
   TREADY { physical_name stream_in1_tready direction O } \
   TSTRB { physical_name stream_in1_tstrb direction I left 2 right 0 } \
   TUSER { physical_name stream_in1_tuser direction I left 0 right 0 } \
   TVALID { physical_name stream_in1_tvalid direction I } \
   } \
  stream_in1 ]
  set_property -dict [ list \
   CONFIG.FREQ_HZ {142857132} \
   CONFIG.HAS_TKEEP {1} \
   CONFIG.HAS_TLAST {1} \
   CONFIG.HAS_TREADY {1} \
   CONFIG.HAS_TSTRB {1} \
   CONFIG.LAYERED_METADATA {undef} \
   CONFIG.TDATA_NUM_BYTES {3} \
   CONFIG.TDEST_WIDTH {1} \
   CONFIG.TID_WIDTH {1} \
   CONFIG.TUSER_WIDTH {1} \
   ] $stream_in1

  set stream_out0 [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 -portmaps { \
   TDATA { physical_name stream_out0_tdata direction O left 23 right 0 } \
   TDEST { physical_name stream_out0_tdest direction O left 0 right 0 } \
   TID { physical_name stream_out0_tid direction O left 0 right 0 } \
   TKEEP { physical_name stream_out0_tkeep direction O left 2 right 0 } \
   TLAST { physical_name stream_out0_tlast direction O left 0 right 0 } \
   TREADY { physical_name stream_out0_tready direction I } \
   TSTRB { physical_name stream_out0_tstrb direction O left 2 right 0 } \
   TUSER { physical_name stream_out0_tuser direction O left 0 right 0 } \
   TVALID { physical_name stream_out0_tvalid direction O } \
   } \
  stream_out0 ]
  set_property -dict [ list \
   CONFIG.FREQ_HZ {142857132} \
   ] $stream_out0

  set stream_out1 [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 -portmaps { \
   TDATA { physical_name stream_out1_tdata direction O left 23 right 0 } \
   TDEST { physical_name stream_out1_tdest direction O left 0 right 0 } \
   TID { physical_name stream_out1_tid direction O left 0 right 0 } \
   TKEEP { physical_name stream_out1_tkeep direction O left 2 right 0 } \
   TLAST { physical_name stream_out1_tlast direction O left 0 right 0 } \
   TREADY { physical_name stream_out1_tready direction I } \
   TSTRB { physical_name stream_out1_tstrb direction O left 2 right 0 } \
   TUSER { physical_name stream_out1_tuser direction O left 0 right 0 } \
   TVALID { physical_name stream_out1_tvalid direction O } \
   } \
  stream_out1 ]
  set_property -dict [ list \
   CONFIG.FREQ_HZ {142857132} \
   ] $stream_out1


  # Create ports
  set clk_142M [ create_bd_port -dir I -type clk -freq_hz 142857132 clk_142M ]
  set_property -dict [ list \
   CONFIG.ASSOCIATED_BUSIF {s_axi_control0:s_axi_control1:stream_in0:stream_in1:stream_out0:stream_out1} \
 ] $clk_142M
  set periph_resetn_clk142M [ create_bd_port -dir I -type rst periph_resetn_clk142M ]

  # Create instance: axis_data_fifo_0, and set properties
  set axis_data_fifo_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_data_fifo:2.0 axis_data_fifo_0 ]
  set_property -dict [ list \
   CONFIG.FIFO_DEPTH {4096} \
   CONFIG.FIFO_MEMORY_TYPE {block} \
   CONFIG.HAS_TLAST {1} \
   CONFIG.TDATA_NUM_BYTES {3} \
   CONFIG.TUSER_WIDTH {1} \
 ] $axis_data_fifo_0

  # Create instance: cornerHarris_accel, and set properties
  set cornerHarris_accel [ create_bd_cell -type ip -vlnv xilinx.com:hls:cornerHarris_accel:1.0 cornerHarris_accel ]

  # Create interface connections
  connect_bd_intf_net -intf_net axis_data_fifo_0_M_AXIS [get_bd_intf_ports stream_out1] [get_bd_intf_pins axis_data_fifo_0/M_AXIS]
  connect_bd_intf_net -intf_net cornerHarris_accel_stream_out [get_bd_intf_ports stream_out0] [get_bd_intf_pins cornerHarris_accel/stream_out]
  connect_bd_intf_net -intf_net s_axi_control0_1 [get_bd_intf_ports s_axi_control0] [get_bd_intf_pins cornerHarris_accel/s_axi_control]
  connect_bd_intf_net -intf_net stream_in0_1 [get_bd_intf_ports stream_in0] [get_bd_intf_pins cornerHarris_accel/stream_in]
  connect_bd_intf_net -intf_net stream_in1_1 [get_bd_intf_ports stream_in1] [get_bd_intf_pins axis_data_fifo_0/S_AXIS]

  # Create port connections
  connect_bd_net -net clk_142M_1 [get_bd_ports clk_142M] [get_bd_pins axis_data_fifo_0/s_axis_aclk] [get_bd_pins cornerHarris_accel/ap_clk]
  connect_bd_net -net periph_resetn_clk142M_1 [get_bd_ports periph_resetn_clk142M] [get_bd_pins axis_data_fifo_0/s_axis_aresetn] [get_bd_pins cornerHarris_accel/ap_rst_n]

  # Create address segments
  assign_bd_address -offset 0x00000000 -range 0x00008000 -target_address_space [get_bd_addr_spaces s_axi_control0] [get_bd_addr_segs cornerHarris_accel/s_axi_control/Reg] -force


  # Restore current instance
  current_bd_instance $oldCurInst

  validate_bd_design

  set_property HDL_ATTRIBUTE.LOCKED {TRUE} [get_bd_intf_ports s_axi_control0]
  set_property HDL_ATTRIBUTE.LOCKED {TRUE} [get_bd_intf_ports s_axi_control1]
  set_property HDL_ATTRIBUTE.LOCKED {TRUE} [get_bd_intf_ports stream_in0]
  set_property HDL_ATTRIBUTE.LOCKED {TRUE} [get_bd_intf_ports stream_in1]
  set_property HDL_ATTRIBUTE.LOCKED {TRUE} [get_bd_intf_ports stream_out0]
  set_property HDL_ATTRIBUTE.LOCKED {TRUE} [get_bd_intf_ports stream_out1]

  # The first validate above is to propagate values prior to the set command(s)
  # above. Need second validate call to ensure design is validated.
  validate_bd_design

  save_bd_design
  close_bd_design $design_name 
}
# End of cr_bd_composable_pr_1_cornerharris_fifo()
cr_bd_composable_pr_1_cornerharris_fifo ""
set_property REGISTERED_WITH_MANAGER "1" [get_files composable_pr_1_cornerharris_fifo.bd ] 
set_property SYNTH_CHECKPOINT_MODE "Hierarchical" [get_files composable_pr_1_cornerharris_fifo.bd ] 

# Create 'composable_pr_1_cornerharris_fifo' reconfigurable module
set partitionDef [get_partition_defs pr_1]
create_reconfig_module -name composable_pr_1_cornerharris_fifo -partition_def $partitionDef
set obj [get_reconfig_modules composable_pr_1_cornerharris_fifo]
set_property -name "module_name" -value "composable_pr_1_cornerharris_fifo" -objects $obj

 move_files [ get_files composable_pr_1_cornerharris_fifo.bd ] -of_objects [get_reconfig_modules composable_pr_1_cornerharris_fifo]
# Set 'composable_pr_1_cornerharris_fifo' fileset file properties for remote files
# None

# Set 'composable_pr_1_cornerharris_fifo' fileset file properties for local files
# None



# Proc to create BD composable_pr_1_dilate_erode
proc cr_bd_composable_pr_1_dilate_erode { parentCell } {

  # CHANGE DESIGN NAME HERE
  set design_name composable_pr_1_dilate_erode

  common::send_gid_msg -ssname BD::TCL -id 2010 -severity "INFO" "Currently there is no design <$design_name> in project, so creating one..."

  create_bd_design $design_name

  set bCheckIPsPassed 1
  ##################################################################
  # CHECK IPs
  ##################################################################
  set bCheckIPs 1
  if { $bCheckIPs == 1 } {
     set list_check_ips "\ 
  xilinx.com:hls:dilate_accel:1.0\
  xilinx.com:hls:erode_accel:1.0\
  "

   set list_ips_missing ""
   common::send_gid_msg -ssname BD::TCL -id 2011 -severity "INFO" "Checking if the following IPs exist in the project's IP catalog: $list_check_ips ."

   foreach ip_vlnv $list_check_ips {
      set ip_obj [get_ipdefs -all $ip_vlnv]
      if { $ip_obj eq "" } {
         lappend list_ips_missing $ip_vlnv
      }
   }

   if { $list_ips_missing ne "" } {
      catch {common::send_gid_msg -ssname BD::TCL -id 2012 -severity "ERROR" "The following IPs are not found in the IP Catalog:\n  $list_ips_missing\n\nResolution: Please add the repository containing the IP(s) to the project." }
      set bCheckIPsPassed 0
   }

  }

  if { $bCheckIPsPassed != 1 } {
    common::send_gid_msg -ssname BD::TCL -id 2023 -severity "WARNING" "Will not continue with creation of design due to the error(s) above."
    return 3
  }

  variable script_folder

  if { $parentCell eq "" } {
     set parentCell [get_bd_cells /]
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj


  # Create interface ports
  set s_axi_control0 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 s_axi_control0 ]
  set_property -dict [ list \
   CONFIG.ADDR_WIDTH {31} \
   CONFIG.ARUSER_WIDTH {0} \
   CONFIG.AWUSER_WIDTH {0} \
   CONFIG.BUSER_WIDTH {0} \
   CONFIG.DATA_WIDTH {32} \
   CONFIG.FREQ_HZ {142857132} \
   CONFIG.HAS_BRESP {1} \
   CONFIG.HAS_BURST {0} \
   CONFIG.HAS_CACHE {0} \
   CONFIG.HAS_LOCK {0} \
   CONFIG.HAS_PROT {0} \
   CONFIG.HAS_QOS {0} \
   CONFIG.HAS_REGION {0} \
   CONFIG.HAS_RRESP {1} \
   CONFIG.HAS_WSTRB {1} \
   CONFIG.ID_WIDTH {0} \
   CONFIG.MAX_BURST_LENGTH {1} \
   CONFIG.NUM_READ_OUTSTANDING {1} \
   CONFIG.NUM_READ_THREADS {1} \
   CONFIG.NUM_WRITE_OUTSTANDING {1} \
   CONFIG.NUM_WRITE_THREADS {1} \
   CONFIG.PROTOCOL {AXI4LITE} \
   CONFIG.READ_WRITE_MODE {READ_WRITE} \
   CONFIG.RUSER_BITS_PER_BYTE {0} \
   CONFIG.RUSER_WIDTH {0} \
   CONFIG.SUPPORTS_NARROW_BURST {0} \
   CONFIG.WUSER_BITS_PER_BYTE {0} \
   CONFIG.WUSER_WIDTH {0} \
   ] $s_axi_control0

  set s_axi_control1 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 s_axi_control1 ]
  set_property -dict [ list \
   CONFIG.ADDR_WIDTH {31} \
   CONFIG.ARUSER_WIDTH {0} \
   CONFIG.AWUSER_WIDTH {0} \
   CONFIG.BUSER_WIDTH {0} \
   CONFIG.DATA_WIDTH {32} \
   CONFIG.FREQ_HZ {142857132} \
   CONFIG.HAS_BRESP {1} \
   CONFIG.HAS_BURST {0} \
   CONFIG.HAS_CACHE {0} \
   CONFIG.HAS_LOCK {0} \
   CONFIG.HAS_PROT {0} \
   CONFIG.HAS_QOS {0} \
   CONFIG.HAS_REGION {0} \
   CONFIG.HAS_RRESP {1} \
   CONFIG.HAS_WSTRB {1} \
   CONFIG.ID_WIDTH {0} \
   CONFIG.MAX_BURST_LENGTH {1} \
   CONFIG.NUM_READ_OUTSTANDING {1} \
   CONFIG.NUM_READ_THREADS {1} \
   CONFIG.NUM_WRITE_OUTSTANDING {1} \
   CONFIG.NUM_WRITE_THREADS {1} \
   CONFIG.PROTOCOL {AXI4LITE} \
   CONFIG.READ_WRITE_MODE {READ_WRITE} \
   CONFIG.RUSER_BITS_PER_BYTE {0} \
   CONFIG.RUSER_WIDTH {0} \
   CONFIG.SUPPORTS_NARROW_BURST {0} \
   CONFIG.WUSER_BITS_PER_BYTE {0} \
   CONFIG.WUSER_WIDTH {0} \
   ] $s_axi_control1

  set stream_in0 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 stream_in0 ]
  set_property -dict [ list \
   CONFIG.FREQ_HZ {142857132} \
   CONFIG.HAS_TKEEP {1} \
   CONFIG.HAS_TLAST {1} \
   CONFIG.HAS_TREADY {1} \
   CONFIG.HAS_TSTRB {1} \
   CONFIG.LAYERED_METADATA {undef} \
   CONFIG.TDATA_NUM_BYTES {3} \
   CONFIG.TDEST_WIDTH {1} \
   CONFIG.TID_WIDTH {1} \
   CONFIG.TUSER_WIDTH {1} \
   ] $stream_in0

  set stream_in1 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 stream_in1 ]
  set_property -dict [ list \
   CONFIG.FREQ_HZ {142857132} \
   CONFIG.HAS_TKEEP {1} \
   CONFIG.HAS_TLAST {1} \
   CONFIG.HAS_TREADY {1} \
   CONFIG.HAS_TSTRB {1} \
   CONFIG.LAYERED_METADATA {undef} \
   CONFIG.TDATA_NUM_BYTES {3} \
   CONFIG.TDEST_WIDTH {1} \
   CONFIG.TID_WIDTH {1} \
   CONFIG.TUSER_WIDTH {1} \
   ] $stream_in1

  set stream_out0 [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 stream_out0 ]
  set_property -dict [ list \
   CONFIG.FREQ_HZ {142857132} \
   ] $stream_out0

  set stream_out1 [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 stream_out1 ]
  set_property -dict [ list \
   CONFIG.FREQ_HZ {142857132} \
   ] $stream_out1


  # Create ports
  set clk_142M [ create_bd_port -dir I -type clk -freq_hz 142857132 clk_142M ]
  set_property -dict [ list \
   CONFIG.ASSOCIATED_BUSIF {s_axi_control0:s_axi_control1:stream_in0:stream_in1:stream_out0:stream_out1} \
 ] $clk_142M
  set periph_resetn_clk142M [ create_bd_port -dir I -type rst periph_resetn_clk142M ]

  # Create instance: dilate_accel, and set properties
  set dilate_accel [ create_bd_cell -type ip -vlnv xilinx.com:hls:dilate_accel:1.0 dilate_accel ]

  # Create instance: erode_accel, and set properties
  set erode_accel [ create_bd_cell -type ip -vlnv xilinx.com:hls:erode_accel:1.0 erode_accel ]

  # Create interface connections
  connect_bd_intf_net -intf_net dilate_accel_stream_out [get_bd_intf_ports stream_out0] [get_bd_intf_pins dilate_accel/stream_out]
  connect_bd_intf_net -intf_net erode_accel_stream_out [get_bd_intf_ports stream_out1] [get_bd_intf_pins erode_accel/stream_out]
  connect_bd_intf_net -intf_net s_axi_control0_1 [get_bd_intf_ports s_axi_control0] [get_bd_intf_pins dilate_accel/s_axi_control]
  connect_bd_intf_net -intf_net s_axi_control1_1 [get_bd_intf_ports s_axi_control1] [get_bd_intf_pins erode_accel/s_axi_control]
  connect_bd_intf_net -intf_net stream_in0_1 [get_bd_intf_ports stream_in0] [get_bd_intf_pins dilate_accel/stream_in]
  connect_bd_intf_net -intf_net stream_in1_1 [get_bd_intf_ports stream_in1] [get_bd_intf_pins erode_accel/stream_in]

  # Create port connections
  connect_bd_net -net clk_142M_1 [get_bd_ports clk_142M] [get_bd_pins dilate_accel/ap_clk] [get_bd_pins erode_accel/ap_clk]
  connect_bd_net -net periph_resetn_clk142M_1 [get_bd_ports periph_resetn_clk142M] [get_bd_pins dilate_accel/ap_rst_n] [get_bd_pins erode_accel/ap_rst_n]

  # Create address segments
  assign_bd_address -offset 0x00000000 -range 0x00008000 -target_address_space [get_bd_addr_spaces s_axi_control0] [get_bd_addr_segs dilate_accel/s_axi_control/Reg] -force
  assign_bd_address -offset 0x00000000 -range 0x00008000 -target_address_space [get_bd_addr_spaces s_axi_control1] [get_bd_addr_segs erode_accel/s_axi_control/Reg] -force


  # Restore current instance
  current_bd_instance $oldCurInst

  validate_bd_design
  save_bd_design
  close_bd_design $design_name 
}
# End of cr_bd_composable_pr_1_dilate_erode()
cr_bd_composable_pr_1_dilate_erode ""
set_property REGISTERED_WITH_MANAGER "1" [get_files composable_pr_1_dilate_erode.bd ] 
set_property SYNTH_CHECKPOINT_MODE "Hierarchical" [get_files composable_pr_1_dilate_erode.bd ] 

# Create 'composable_pr_1_dilate_erode' reconfigurable module
set partitionDef [get_partition_defs pr_1]
create_reconfig_module -name composable_pr_1_dilate_erode -partition_def $partitionDef
set_property default_rm composable_pr_1_dilate_erode $partitionDef
set obj [get_reconfig_modules composable_pr_1_dilate_erode]
set_property -name "module_name" -value "composable_pr_1_dilate_erode" -objects $obj

 move_files [ get_files composable_pr_1_dilate_erode.bd ] -of_objects [get_reconfig_modules composable_pr_1_dilate_erode]
# Set 'composable_pr_1_dilate_erode' fileset file properties for remote files
# None

# Set 'composable_pr_1_dilate_erode' fileset file properties for local files
# None



# Proc to create BD composable_pr_fork_duplicate
proc cr_bd_composable_pr_fork_duplicate { parentCell } {

  # CHANGE DESIGN NAME HERE
  set design_name composable_pr_fork_duplicate

  common::send_gid_msg -ssname BD::TCL -id 2010 -severity "INFO" "Currently there is no design <$design_name> in project, so creating one..."

  create_bd_design $design_name

  set bCheckIPsPassed 1
  ##################################################################
  # CHECK IPs
  ##################################################################
  set bCheckIPs 1
  if { $bCheckIPs == 1 } {
     set list_check_ips "\ 
  xilinx.com:hls:duplicate_accel:1.0\
  "

   set list_ips_missing ""
   common::send_gid_msg -ssname BD::TCL -id 2011 -severity "INFO" "Checking if the following IPs exist in the project's IP catalog: $list_check_ips ."

   foreach ip_vlnv $list_check_ips {
      set ip_obj [get_ipdefs -all $ip_vlnv]
      if { $ip_obj eq "" } {
         lappend list_ips_missing $ip_vlnv
      }
   }

   if { $list_ips_missing ne "" } {
      catch {common::send_gid_msg -ssname BD::TCL -id 2012 -severity "ERROR" "The following IPs are not found in the IP Catalog:\n  $list_ips_missing\n\nResolution: Please add the repository containing the IP(s) to the project." }
      set bCheckIPsPassed 0
   }

  }

  if { $bCheckIPsPassed != 1 } {
    common::send_gid_msg -ssname BD::TCL -id 2023 -severity "WARNING" "Will not continue with creation of design due to the error(s) above."
    return 3
  }

  variable script_folder

  if { $parentCell eq "" } {
     set parentCell [get_bd_cells /]
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj


  # Create interface ports
  set s_axi_control [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 s_axi_control ]
  set_property -dict [ list \
   CONFIG.ADDR_WIDTH {31} \
   CONFIG.ARUSER_WIDTH {0} \
   CONFIG.AWUSER_WIDTH {0} \
   CONFIG.BUSER_WIDTH {0} \
   CONFIG.DATA_WIDTH {32} \
   CONFIG.HAS_BRESP {1} \
   CONFIG.HAS_BURST {0} \
   CONFIG.HAS_CACHE {0} \
   CONFIG.HAS_LOCK {0} \
   CONFIG.HAS_PROT {0} \
   CONFIG.HAS_QOS {0} \
   CONFIG.HAS_REGION {0} \
   CONFIG.HAS_RRESP {1} \
   CONFIG.HAS_WSTRB {1} \
   CONFIG.ID_WIDTH {0} \
   CONFIG.MAX_BURST_LENGTH {1} \
   CONFIG.NUM_READ_OUTSTANDING {1} \
   CONFIG.NUM_READ_THREADS {1} \
   CONFIG.NUM_WRITE_OUTSTANDING {1} \
   CONFIG.NUM_WRITE_THREADS {1} \
   CONFIG.PROTOCOL {AXI4LITE} \
   CONFIG.READ_WRITE_MODE {READ_WRITE} \
   CONFIG.RUSER_BITS_PER_BYTE {0} \
   CONFIG.RUSER_WIDTH {0} \
   CONFIG.SUPPORTS_NARROW_BURST {0} \
   CONFIG.WUSER_BITS_PER_BYTE {0} \
   CONFIG.WUSER_WIDTH {0} \
   ] $s_axi_control

  set stream_in0 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 stream_in0 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {1} \
   CONFIG.HAS_TLAST {1} \
   CONFIG.HAS_TREADY {1} \
   CONFIG.HAS_TSTRB {1} \
   CONFIG.LAYERED_METADATA {undef} \
   CONFIG.TDATA_NUM_BYTES {3} \
   CONFIG.TDEST_WIDTH {1} \
   CONFIG.TID_WIDTH {1} \
   CONFIG.TUSER_WIDTH {1} \
   ] $stream_in0

  set stream_out0 [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 stream_out0 ]

  set stream_out1 [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 stream_out1 ]


  # Create ports
  set clk_142M [ create_bd_port -dir I -type clk -freq_hz 142857132 clk_142M ]
  set_property -dict [ list \
   CONFIG.ASSOCIATED_BUSIF {s_axi_control:stream_in0:stream_out0:stream_out1} \
 ] $clk_142M
  set periph_resetn_clk142M [ create_bd_port -dir I -type rst periph_resetn_clk142M ]

  # Create instance: duplicate_accel, and set properties
  set duplicate_accel [ create_bd_cell -type ip -vlnv xilinx.com:hls:duplicate_accel:1.0 duplicate_accel ]

  # Create interface connections
  connect_bd_intf_net -intf_net Conn1 [get_bd_intf_ports stream_in0] [get_bd_intf_pins duplicate_accel/stream_in]
  connect_bd_intf_net -intf_net Conn2 [get_bd_intf_ports s_axi_control] [get_bd_intf_pins duplicate_accel/s_axi_control]
  connect_bd_intf_net -intf_net Conn3 [get_bd_intf_ports stream_out0] [get_bd_intf_pins duplicate_accel/stream_out]
  connect_bd_intf_net -intf_net Conn4 [get_bd_intf_ports stream_out1] [get_bd_intf_pins duplicate_accel/stream_out1]

  # Create port connections
  connect_bd_net -net ps7_0_FCLK_CLK1 [get_bd_ports clk_142M] [get_bd_pins duplicate_accel/ap_clk]
  connect_bd_net -net rst_ps7_0_fclk1_peripheral_aresetn [get_bd_ports periph_resetn_clk142M] [get_bd_pins duplicate_accel/ap_rst_n]

  # Create address segments
  assign_bd_address -offset 0x00000000 -range 0x00010000 -target_address_space [get_bd_addr_spaces s_axi_control] [get_bd_addr_segs duplicate_accel/s_axi_control/Reg] -force


  # Restore current instance
  current_bd_instance $oldCurInst

  validate_bd_design
  save_bd_design
  close_bd_design $design_name 
}
# End of cr_bd_composable_pr_fork_duplicate()
cr_bd_composable_pr_fork_duplicate ""
set_property REGISTERED_WITH_MANAGER "1" [get_files composable_pr_fork_duplicate.bd ] 
set_property SYNTH_CHECKPOINT_MODE "Hierarchical" [get_files composable_pr_fork_duplicate.bd ] 

# Create 'composable_pr_fork_duplicate' reconfigurable module
set partitionDef [get_partition_defs pr_fork]
create_reconfig_module -name composable_pr_fork_duplicate -partition_def $partitionDef
set_property default_rm composable_pr_fork_duplicate $partitionDef
set obj [get_reconfig_modules composable_pr_fork_duplicate]
set_property -name "module_name" -value "composable_pr_fork_duplicate" -objects $obj

 move_files [ get_files composable_pr_fork_duplicate.bd ] -of_objects [get_reconfig_modules composable_pr_fork_duplicate]
# Set 'composable_pr_fork_duplicate' fileset file properties for remote files
# None

# Set 'composable_pr_fork_duplicate' fileset file properties for local files
# None



# Proc to create BD composable_pr_fork_rgb2xyz
proc cr_bd_composable_pr_fork_rgb2xyz { parentCell } {

  # CHANGE DESIGN NAME HERE
  set design_name composable_pr_fork_rgb2xyz

  common::send_gid_msg -ssname BD::TCL -id 2010 -severity "INFO" "Currently there is no design <$design_name> in project, so creating one..."

  create_bd_design $design_name

  set bCheckIPsPassed 1
  ##################################################################
  # CHECK IPs
  ##################################################################
  set bCheckIPs 1
  if { $bCheckIPs == 1 } {
     set list_check_ips "\ 
  xilinx.com:hls:rgb2xyz_accel:1.0\
  "

   set list_ips_missing ""
   common::send_gid_msg -ssname BD::TCL -id 2011 -severity "INFO" "Checking if the following IPs exist in the project's IP catalog: $list_check_ips ."

   foreach ip_vlnv $list_check_ips {
      set ip_obj [get_ipdefs -all $ip_vlnv]
      if { $ip_obj eq "" } {
         lappend list_ips_missing $ip_vlnv
      }
   }

   if { $list_ips_missing ne "" } {
      catch {common::send_gid_msg -ssname BD::TCL -id 2012 -severity "ERROR" "The following IPs are not found in the IP Catalog:\n  $list_ips_missing\n\nResolution: Please add the repository containing the IP(s) to the project." }
      set bCheckIPsPassed 0
   }

  }

  if { $bCheckIPsPassed != 1 } {
    common::send_gid_msg -ssname BD::TCL -id 2023 -severity "WARNING" "Will not continue with creation of design due to the error(s) above."
    return 3
  }

  variable script_folder

  if { $parentCell eq "" } {
     set parentCell [get_bd_cells /]
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj


  # Create interface ports
  set s_axi_control [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 -portmaps { \
   ARADDR { physical_name s_axi_control_araddr direction I left 8 right 0 } \
   ARREADY { physical_name s_axi_control_arready direction O } \
   ARVALID { physical_name s_axi_control_arvalid direction I } \
   AWADDR { physical_name s_axi_control_awaddr direction I left 8 right 0 } \
   AWREADY { physical_name s_axi_control_awready direction O } \
   AWVALID { physical_name s_axi_control_awvalid direction I } \
   BREADY { physical_name s_axi_control_bready direction I } \
   BRESP { physical_name s_axi_control_bresp direction O left 1 right 0 } \
   BVALID { physical_name s_axi_control_bvalid direction O } \
   RDATA { physical_name s_axi_control_rdata direction O left 31 right 0 } \
   RREADY { physical_name s_axi_control_rready direction I } \
   RRESP { physical_name s_axi_control_rresp direction O left 1 right 0 } \
   RVALID { physical_name s_axi_control_rvalid direction O } \
   WDATA { physical_name s_axi_control_wdata direction I left 31 right 0 } \
   WREADY { physical_name s_axi_control_wready direction O } \
   WSTRB { physical_name s_axi_control_wstrb direction I left 3 right 0 } \
   WVALID { physical_name s_axi_control_wvalid direction I } \
   } \
  s_axi_control ]
  set_property -dict [ list \
   CONFIG.ADDR_WIDTH {31} \
   CONFIG.ARUSER_WIDTH {0} \
   CONFIG.AWUSER_WIDTH {0} \
   CONFIG.BUSER_WIDTH {0} \
   CONFIG.DATA_WIDTH {32} \
   CONFIG.HAS_BRESP {1} \
   CONFIG.HAS_BURST {0} \
   CONFIG.HAS_CACHE {0} \
   CONFIG.HAS_LOCK {0} \
   CONFIG.HAS_PROT {0} \
   CONFIG.HAS_QOS {0} \
   CONFIG.HAS_REGION {0} \
   CONFIG.HAS_RRESP {1} \
   CONFIG.HAS_WSTRB {1} \
   CONFIG.ID_WIDTH {0} \
   CONFIG.MAX_BURST_LENGTH {1} \
   CONFIG.NUM_READ_OUTSTANDING {1} \
   CONFIG.NUM_READ_THREADS {1} \
   CONFIG.NUM_WRITE_OUTSTANDING {1} \
   CONFIG.NUM_WRITE_THREADS {1} \
   CONFIG.PROTOCOL {AXI4LITE} \
   CONFIG.READ_WRITE_MODE {READ_WRITE} \
   CONFIG.RUSER_BITS_PER_BYTE {0} \
   CONFIG.RUSER_WIDTH {0} \
   CONFIG.SUPPORTS_NARROW_BURST {0} \
   CONFIG.WUSER_BITS_PER_BYTE {0} \
   CONFIG.WUSER_WIDTH {0} \
   ] $s_axi_control

  set stream_in0 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 -portmaps { \
   TDATA { physical_name stream_in0_tdata direction I left 23 right 0 } \
   TDEST { physical_name stream_in0_tdest direction I left 0 right 0 } \
   TID { physical_name stream_in0_tid direction I left 0 right 0 } \
   TKEEP { physical_name stream_in0_tkeep direction I left 2 right 0 } \
   TLAST { physical_name stream_in0_tlast direction I left 0 right 0 } \
   TREADY { physical_name stream_in0_tready direction O } \
   TSTRB { physical_name stream_in0_tstrb direction I left 2 right 0 } \
   TUSER { physical_name stream_in0_tuser direction I left 0 right 0 } \
   TVALID { physical_name stream_in0_tvalid direction I } \
   } \
  stream_in0 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {1} \
   CONFIG.HAS_TLAST {1} \
   CONFIG.HAS_TREADY {1} \
   CONFIG.HAS_TSTRB {1} \
   CONFIG.LAYERED_METADATA {undef} \
   CONFIG.TDATA_NUM_BYTES {3} \
   CONFIG.TDEST_WIDTH {1} \
   CONFIG.TID_WIDTH {1} \
   CONFIG.TUSER_WIDTH {1} \
   ] $stream_in0

  set stream_out0 [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 -portmaps { \
   TDATA { physical_name stream_out0_tdata direction O left 23 right 0 } \
   TDEST { physical_name stream_out0_tdest direction O left 0 right 0 } \
   TID { physical_name stream_out0_tid direction O left 0 right 0 } \
   TKEEP { physical_name stream_out0_tkeep direction O left 2 right 0 } \
   TLAST { physical_name stream_out0_tlast direction O left 0 right 0 } \
   TREADY { physical_name stream_out0_tready direction I } \
   TSTRB { physical_name stream_out0_tstrb direction O left 2 right 0 } \
   TUSER { physical_name stream_out0_tuser direction O left 0 right 0 } \
   TVALID { physical_name stream_out0_tvalid direction O } \
   } \
  stream_out0 ]

  set stream_out1 [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 -portmaps { \
   TDATA { physical_name stream_out1_tdata direction O left 23 right 0 } \
   TDEST { physical_name stream_out1_tdest direction O left 0 right 0 } \
   TID { physical_name stream_out1_tid direction O left 0 right 0 } \
   TKEEP { physical_name stream_out1_tkeep direction O left 2 right 0 } \
   TLAST { physical_name stream_out1_tlast direction O left 0 right 0 } \
   TREADY { physical_name stream_out1_tready direction I } \
   TSTRB { physical_name stream_out1_tstrb direction O left 2 right 0 } \
   TUSER { physical_name stream_out1_tuser direction O left 0 right 0 } \
   TVALID { physical_name stream_out1_tvalid direction O } \
   } \
  stream_out1 ]


  # Create ports
  set clk_142M [ create_bd_port -dir I -type clk -freq_hz 142857132 clk_142M ]
  set_property -dict [ list \
   CONFIG.ASSOCIATED_BUSIF {s_axi_control:stream_in0:stream_out0:stream_out1} \
 ] $clk_142M
  set periph_resetn_clk142M [ create_bd_port -dir I -type rst periph_resetn_clk142M ]

  # Create instance: rgb2xyz_accel, and set properties
  set rgb2xyz_accel [ create_bd_cell -type ip -vlnv xilinx.com:hls:rgb2xyz_accel:1.0 rgb2xyz_accel ]

  # Create interface connections
  connect_bd_intf_net -intf_net rgb2xyz_accel_stream_out [get_bd_intf_ports stream_out0] [get_bd_intf_pins rgb2xyz_accel/stream_out]
  connect_bd_intf_net -intf_net s_axi_control_1 [get_bd_intf_ports s_axi_control] [get_bd_intf_pins rgb2xyz_accel/s_axi_control]
  connect_bd_intf_net -intf_net stream_in0_1 [get_bd_intf_ports stream_in0] [get_bd_intf_pins rgb2xyz_accel/stream_in]

  # Create port connections
  connect_bd_net -net clk_142M_1 [get_bd_ports clk_142M] [get_bd_pins rgb2xyz_accel/ap_clk]
  connect_bd_net -net periph_resetn_clk142M_1 [get_bd_ports periph_resetn_clk142M] [get_bd_pins rgb2xyz_accel/ap_rst_n]

  # Create address segments
  assign_bd_address -offset 0x00000000 -range 0x00010000 -target_address_space [get_bd_addr_spaces s_axi_control] [get_bd_addr_segs rgb2xyz_accel/s_axi_control/Reg] -force


  # Restore current instance
  current_bd_instance $oldCurInst

  validate_bd_design

  set_property HDL_ATTRIBUTE.LOCKED {TRUE} [get_bd_intf_ports s_axi_control]
  set_property HDL_ATTRIBUTE.LOCKED {TRUE} [get_bd_intf_ports stream_in0]
  set_property HDL_ATTRIBUTE.LOCKED {TRUE} [get_bd_intf_ports stream_out0]
  set_property HDL_ATTRIBUTE.LOCKED {TRUE} [get_bd_intf_ports stream_out1]

  # The first validate above is to propagate values prior to the set command(s)
  # above. Need second validate call to ensure design is validated.
  validate_bd_design

  save_bd_design
  close_bd_design $design_name 
}
# End of cr_bd_composable_pr_fork_rgb2xyz()
cr_bd_composable_pr_fork_rgb2xyz ""
set_property REGISTERED_WITH_MANAGER "1" [get_files composable_pr_fork_rgb2xyz.bd ] 
set_property SYNTH_CHECKPOINT_MODE "Hierarchical" [get_files composable_pr_fork_rgb2xyz.bd ] 

# Create 'composable_pr_fork_rgb2xyz' reconfigurable module
set partitionDef [get_partition_defs pr_fork]
create_reconfig_module -name composable_pr_fork_rgb2xyz -partition_def $partitionDef
set obj [get_reconfig_modules composable_pr_fork_rgb2xyz]
set_property -name "module_name" -value "composable_pr_fork_rgb2xyz" -objects $obj

 move_files [ get_files composable_pr_fork_rgb2xyz.bd ] -of_objects [get_reconfig_modules composable_pr_fork_rgb2xyz]
# Set 'composable_pr_fork_rgb2xyz' fileset file properties for remote files
# None

# Set 'composable_pr_fork_rgb2xyz' fileset file properties for local files
# None



# Proc to create BD composable_pr_join_absdiff
proc cr_bd_composable_pr_join_absdiff { parentCell } {

  # CHANGE DESIGN NAME HERE
  set design_name composable_pr_join_absdiff

  common::send_gid_msg -ssname BD::TCL -id 2010 -severity "INFO" "Currently there is no design <$design_name> in project, so creating one..."

  create_bd_design $design_name

  set bCheckIPsPassed 1
  ##################################################################
  # CHECK IPs
  ##################################################################
  set bCheckIPs 1
  if { $bCheckIPs == 1 } {
     set list_check_ips "\ 
  xilinx.com:hls:absdiff_accel:1.0\
  "

   set list_ips_missing ""
   common::send_gid_msg -ssname BD::TCL -id 2011 -severity "INFO" "Checking if the following IPs exist in the project's IP catalog: $list_check_ips ."

   foreach ip_vlnv $list_check_ips {
      set ip_obj [get_ipdefs -all $ip_vlnv]
      if { $ip_obj eq "" } {
         lappend list_ips_missing $ip_vlnv
      }
   }

   if { $list_ips_missing ne "" } {
      catch {common::send_gid_msg -ssname BD::TCL -id 2012 -severity "ERROR" "The following IPs are not found in the IP Catalog:\n  $list_ips_missing\n\nResolution: Please add the repository containing the IP(s) to the project." }
      set bCheckIPsPassed 0
   }

  }

  if { $bCheckIPsPassed != 1 } {
    common::send_gid_msg -ssname BD::TCL -id 2023 -severity "WARNING" "Will not continue with creation of design due to the error(s) above."
    return 3
  }

  variable script_folder

  if { $parentCell eq "" } {
     set parentCell [get_bd_cells /]
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj


  # Create interface ports
  set s_axi_control [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 -portmaps { \
   ARADDR { physical_name s_axi_control_araddr direction I left 4 right 0 } \
   ARREADY { physical_name s_axi_control_arready direction O } \
   ARVALID { physical_name s_axi_control_arvalid direction I } \
   AWADDR { physical_name s_axi_control_awaddr direction I left 4 right 0 } \
   AWREADY { physical_name s_axi_control_awready direction O } \
   AWVALID { physical_name s_axi_control_awvalid direction I } \
   BREADY { physical_name s_axi_control_bready direction I } \
   BRESP { physical_name s_axi_control_bresp direction O left 1 right 0 } \
   BVALID { physical_name s_axi_control_bvalid direction O } \
   RDATA { physical_name s_axi_control_rdata direction O left 31 right 0 } \
   RREADY { physical_name s_axi_control_rready direction I } \
   RRESP { physical_name s_axi_control_rresp direction O left 1 right 0 } \
   RVALID { physical_name s_axi_control_rvalid direction O } \
   WDATA { physical_name s_axi_control_wdata direction I left 31 right 0 } \
   WREADY { physical_name s_axi_control_wready direction O } \
   WSTRB { physical_name s_axi_control_wstrb direction I left 3 right 0 } \
   WVALID { physical_name s_axi_control_wvalid direction I } \
   } \
  s_axi_control ]
  set_property -dict [ list \
   CONFIG.ADDR_WIDTH {31} \
   CONFIG.ARUSER_WIDTH {0} \
   CONFIG.AWUSER_WIDTH {0} \
   CONFIG.BUSER_WIDTH {0} \
   CONFIG.DATA_WIDTH {32} \
   CONFIG.HAS_BRESP {1} \
   CONFIG.HAS_BURST {0} \
   CONFIG.HAS_CACHE {0} \
   CONFIG.HAS_LOCK {0} \
   CONFIG.HAS_PROT {0} \
   CONFIG.HAS_QOS {0} \
   CONFIG.HAS_REGION {0} \
   CONFIG.HAS_RRESP {1} \
   CONFIG.HAS_WSTRB {1} \
   CONFIG.ID_WIDTH {0} \
   CONFIG.MAX_BURST_LENGTH {1} \
   CONFIG.NUM_READ_OUTSTANDING {1} \
   CONFIG.NUM_READ_THREADS {1} \
   CONFIG.NUM_WRITE_OUTSTANDING {1} \
   CONFIG.NUM_WRITE_THREADS {1} \
   CONFIG.PROTOCOL {AXI4LITE} \
   CONFIG.READ_WRITE_MODE {READ_WRITE} \
   CONFIG.RUSER_BITS_PER_BYTE {0} \
   CONFIG.RUSER_WIDTH {0} \
   CONFIG.SUPPORTS_NARROW_BURST {0} \
   CONFIG.WUSER_BITS_PER_BYTE {0} \
   CONFIG.WUSER_WIDTH {0} \
   ] $s_axi_control

  set stream_in0 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 -portmaps { \
   TDATA { physical_name stream_in0_tdata direction I left 23 right 0 } \
   TDEST { physical_name stream_in0_tdest direction I left 0 right 0 } \
   TID { physical_name stream_in0_tid direction I left 0 right 0 } \
   TKEEP { physical_name stream_in0_tkeep direction I left 2 right 0 } \
   TLAST { physical_name stream_in0_tlast direction I left 0 right 0 } \
   TREADY { physical_name stream_in0_tready direction O } \
   TSTRB { physical_name stream_in0_tstrb direction I left 2 right 0 } \
   TUSER { physical_name stream_in0_tuser direction I left 0 right 0 } \
   TVALID { physical_name stream_in0_tvalid direction I } \
   } \
  stream_in0 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {1} \
   CONFIG.HAS_TLAST {1} \
   CONFIG.HAS_TREADY {1} \
   CONFIG.HAS_TSTRB {1} \
   CONFIG.LAYERED_METADATA {undef} \
   CONFIG.TDATA_NUM_BYTES {3} \
   CONFIG.TDEST_WIDTH {1} \
   CONFIG.TID_WIDTH {1} \
   CONFIG.TUSER_WIDTH {1} \
   ] $stream_in0

  set stream_in1 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 -portmaps { \
   TDATA { physical_name stream_in1_tdata direction I left 23 right 0 } \
   TDEST { physical_name stream_in1_tdest direction I left 0 right 0 } \
   TID { physical_name stream_in1_tid direction I left 0 right 0 } \
   TKEEP { physical_name stream_in1_tkeep direction I left 2 right 0 } \
   TLAST { physical_name stream_in1_tlast direction I left 0 right 0 } \
   TREADY { physical_name stream_in1_tready direction O } \
   TSTRB { physical_name stream_in1_tstrb direction I left 2 right 0 } \
   TUSER { physical_name stream_in1_tuser direction I left 0 right 0 } \
   TVALID { physical_name stream_in1_tvalid direction I } \
   } \
  stream_in1 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {1} \
   CONFIG.HAS_TLAST {1} \
   CONFIG.HAS_TREADY {1} \
   CONFIG.HAS_TSTRB {1} \
   CONFIG.LAYERED_METADATA {undef} \
   CONFIG.TDATA_NUM_BYTES {3} \
   CONFIG.TDEST_WIDTH {1} \
   CONFIG.TID_WIDTH {1} \
   CONFIG.TUSER_WIDTH {1} \
   ] $stream_in1

  set stream_out [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 -portmaps { \
   TDATA { physical_name stream_out_tdata direction O left 23 right 0 } \
   TDEST { physical_name stream_out_tdest direction O left 0 right 0 } \
   TID { physical_name stream_out_tid direction O left 0 right 0 } \
   TKEEP { physical_name stream_out_tkeep direction O left 2 right 0 } \
   TLAST { physical_name stream_out_tlast direction O left 0 right 0 } \
   TREADY { physical_name stream_out_tready direction I } \
   TSTRB { physical_name stream_out_tstrb direction O left 2 right 0 } \
   TUSER { physical_name stream_out_tuser direction O left 0 right 0 } \
   TVALID { physical_name stream_out_tvalid direction O } \
   } \
  stream_out ]


  # Create ports
  set clk_142M [ create_bd_port -dir I -type clk -freq_hz 142857132 clk_142M ]
  set_property -dict [ list \
   CONFIG.ASSOCIATED_BUSIF {s_axi_control:stream_in0:stream_in1:stream_out} \
 ] $clk_142M
  set periph_resetn_clk142M [ create_bd_port -dir I -type rst periph_resetn_clk142M ]

  # Create instance: absdiff_accel, and set properties
  set absdiff_accel [ create_bd_cell -type ip -vlnv xilinx.com:hls:absdiff_accel:1.0 absdiff_accel ]

  # Create interface connections
  connect_bd_intf_net -intf_net absdiff_accel_stream_out [get_bd_intf_ports stream_out] [get_bd_intf_pins absdiff_accel/stream_out]
  connect_bd_intf_net -intf_net s_axi_control_1 [get_bd_intf_ports s_axi_control] [get_bd_intf_pins absdiff_accel/s_axi_control]
  connect_bd_intf_net -intf_net stream_in0_1 [get_bd_intf_ports stream_in0] [get_bd_intf_pins absdiff_accel/stream_in]
  connect_bd_intf_net -intf_net stream_in1_1 [get_bd_intf_ports stream_in1] [get_bd_intf_pins absdiff_accel/stream_in1]

  # Create port connections
  connect_bd_net -net clk_142M_1 [get_bd_ports clk_142M] [get_bd_pins absdiff_accel/ap_clk]
  connect_bd_net -net periph_resetn_clk142M_1 [get_bd_ports periph_resetn_clk142M] [get_bd_pins absdiff_accel/ap_rst_n]

  # Create address segments
  assign_bd_address -offset 0x00000000 -range 0x00010000 -target_address_space [get_bd_addr_spaces s_axi_control] [get_bd_addr_segs absdiff_accel/s_axi_control/Reg] -force


  # Restore current instance
  current_bd_instance $oldCurInst

  validate_bd_design

  set_property HDL_ATTRIBUTE.LOCKED {TRUE} [get_bd_intf_ports s_axi_control]
  set_property HDL_ATTRIBUTE.LOCKED {TRUE} [get_bd_intf_ports stream_in0]
  set_property HDL_ATTRIBUTE.LOCKED {TRUE} [get_bd_intf_ports stream_in1]
  set_property HDL_ATTRIBUTE.LOCKED {TRUE} [get_bd_intf_ports stream_out]

  # The first validate above is to propagate values prior to the set command(s)
  # above. Need second validate call to ensure design is validated.
  validate_bd_design

  save_bd_design
  close_bd_design $design_name 
}
# End of cr_bd_composable_pr_join_absdiff()
cr_bd_composable_pr_join_absdiff ""
set_property REGISTERED_WITH_MANAGER "1" [get_files composable_pr_join_absdiff.bd ] 
set_property SYNTH_CHECKPOINT_MODE "Hierarchical" [get_files composable_pr_join_absdiff.bd ] 

# Create 'composable_pr_join_absdiff' reconfigurable module
set partitionDef [get_partition_defs pr_join]
create_reconfig_module -name composable_pr_join_absdiff -partition_def $partitionDef
set obj [get_reconfig_modules composable_pr_join_absdiff]
set_property -name "module_name" -value "composable_pr_join_absdiff" -objects $obj

 move_files [ get_files composable_pr_join_absdiff.bd ] -of_objects [get_reconfig_modules composable_pr_join_absdiff]
# Set 'composable_pr_join_absdiff' fileset file properties for remote files
# None

# Set 'composable_pr_join_absdiff' fileset file properties for local files
# None



# Proc to create BD composable_pr_join_add
proc cr_bd_composable_pr_join_add { parentCell } {

  # CHANGE DESIGN NAME HERE
  set design_name composable_pr_join_add

  common::send_gid_msg -ssname BD::TCL -id 2010 -severity "INFO" "Currently there is no design <$design_name> in project, so creating one..."

  create_bd_design $design_name

  set bCheckIPsPassed 1
  ##################################################################
  # CHECK IPs
  ##################################################################
  set bCheckIPs 1
  if { $bCheckIPs == 1 } {
     set list_check_ips "\ 
  xilinx.com:hls:add_accel:1.0\
  "

   set list_ips_missing ""
   common::send_gid_msg -ssname BD::TCL -id 2011 -severity "INFO" "Checking if the following IPs exist in the project's IP catalog: $list_check_ips ."

   foreach ip_vlnv $list_check_ips {
      set ip_obj [get_ipdefs -all $ip_vlnv]
      if { $ip_obj eq "" } {
         lappend list_ips_missing $ip_vlnv
      }
   }

   if { $list_ips_missing ne "" } {
      catch {common::send_gid_msg -ssname BD::TCL -id 2012 -severity "ERROR" "The following IPs are not found in the IP Catalog:\n  $list_ips_missing\n\nResolution: Please add the repository containing the IP(s) to the project." }
      set bCheckIPsPassed 0
   }

  }

  if { $bCheckIPsPassed != 1 } {
    common::send_gid_msg -ssname BD::TCL -id 2023 -severity "WARNING" "Will not continue with creation of design due to the error(s) above."
    return 3
  }

  variable script_folder

  if { $parentCell eq "" } {
     set parentCell [get_bd_cells /]
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj


  # Create interface ports
  set s_axi_control [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 -portmaps { \
   ARADDR { physical_name s_axi_control_araddr direction I left 4 right 0 } \
   ARREADY { physical_name s_axi_control_arready direction O } \
   ARVALID { physical_name s_axi_control_arvalid direction I } \
   AWADDR { physical_name s_axi_control_awaddr direction I left 4 right 0 } \
   AWREADY { physical_name s_axi_control_awready direction O } \
   AWVALID { physical_name s_axi_control_awvalid direction I } \
   BREADY { physical_name s_axi_control_bready direction I } \
   BRESP { physical_name s_axi_control_bresp direction O left 1 right 0 } \
   BVALID { physical_name s_axi_control_bvalid direction O } \
   RDATA { physical_name s_axi_control_rdata direction O left 31 right 0 } \
   RREADY { physical_name s_axi_control_rready direction I } \
   RRESP { physical_name s_axi_control_rresp direction O left 1 right 0 } \
   RVALID { physical_name s_axi_control_rvalid direction O } \
   WDATA { physical_name s_axi_control_wdata direction I left 31 right 0 } \
   WREADY { physical_name s_axi_control_wready direction O } \
   WSTRB { physical_name s_axi_control_wstrb direction I left 3 right 0 } \
   WVALID { physical_name s_axi_control_wvalid direction I } \
   } \
  s_axi_control ]
  set_property -dict [ list \
   CONFIG.ADDR_WIDTH {31} \
   CONFIG.ARUSER_WIDTH {0} \
   CONFIG.AWUSER_WIDTH {0} \
   CONFIG.BUSER_WIDTH {0} \
   CONFIG.DATA_WIDTH {32} \
   CONFIG.HAS_BRESP {1} \
   CONFIG.HAS_BURST {0} \
   CONFIG.HAS_CACHE {0} \
   CONFIG.HAS_LOCK {0} \
   CONFIG.HAS_PROT {0} \
   CONFIG.HAS_QOS {0} \
   CONFIG.HAS_REGION {0} \
   CONFIG.HAS_RRESP {1} \
   CONFIG.HAS_WSTRB {1} \
   CONFIG.ID_WIDTH {0} \
   CONFIG.MAX_BURST_LENGTH {1} \
   CONFIG.NUM_READ_OUTSTANDING {1} \
   CONFIG.NUM_READ_THREADS {1} \
   CONFIG.NUM_WRITE_OUTSTANDING {1} \
   CONFIG.NUM_WRITE_THREADS {1} \
   CONFIG.PROTOCOL {AXI4LITE} \
   CONFIG.READ_WRITE_MODE {READ_WRITE} \
   CONFIG.RUSER_BITS_PER_BYTE {0} \
   CONFIG.RUSER_WIDTH {0} \
   CONFIG.SUPPORTS_NARROW_BURST {0} \
   CONFIG.WUSER_BITS_PER_BYTE {0} \
   CONFIG.WUSER_WIDTH {0} \
   ] $s_axi_control

  set stream_in0 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 -portmaps { \
   TDATA { physical_name stream_in0_tdata direction I left 23 right 0 } \
   TDEST { physical_name stream_in0_tdest direction I left 0 right 0 } \
   TID { physical_name stream_in0_tid direction I left 0 right 0 } \
   TKEEP { physical_name stream_in0_tkeep direction I left 2 right 0 } \
   TLAST { physical_name stream_in0_tlast direction I left 0 right 0 } \
   TREADY { physical_name stream_in0_tready direction O } \
   TSTRB { physical_name stream_in0_tstrb direction I left 2 right 0 } \
   TUSER { physical_name stream_in0_tuser direction I left 0 right 0 } \
   TVALID { physical_name stream_in0_tvalid direction I } \
   } \
  stream_in0 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {1} \
   CONFIG.HAS_TLAST {1} \
   CONFIG.HAS_TREADY {1} \
   CONFIG.HAS_TSTRB {1} \
   CONFIG.LAYERED_METADATA {undef} \
   CONFIG.TDATA_NUM_BYTES {3} \
   CONFIG.TDEST_WIDTH {1} \
   CONFIG.TID_WIDTH {1} \
   CONFIG.TUSER_WIDTH {1} \
   ] $stream_in0

  set stream_in1 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 -portmaps { \
   TDATA { physical_name stream_in1_tdata direction I left 23 right 0 } \
   TDEST { physical_name stream_in1_tdest direction I left 0 right 0 } \
   TID { physical_name stream_in1_tid direction I left 0 right 0 } \
   TKEEP { physical_name stream_in1_tkeep direction I left 2 right 0 } \
   TLAST { physical_name stream_in1_tlast direction I left 0 right 0 } \
   TREADY { physical_name stream_in1_tready direction O } \
   TSTRB { physical_name stream_in1_tstrb direction I left 2 right 0 } \
   TUSER { physical_name stream_in1_tuser direction I left 0 right 0 } \
   TVALID { physical_name stream_in1_tvalid direction I } \
   } \
  stream_in1 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {1} \
   CONFIG.HAS_TLAST {1} \
   CONFIG.HAS_TREADY {1} \
   CONFIG.HAS_TSTRB {1} \
   CONFIG.LAYERED_METADATA {undef} \
   CONFIG.TDATA_NUM_BYTES {3} \
   CONFIG.TDEST_WIDTH {1} \
   CONFIG.TID_WIDTH {1} \
   CONFIG.TUSER_WIDTH {1} \
   ] $stream_in1

  set stream_out [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 -portmaps { \
   TDATA { physical_name stream_out_tdata direction O left 23 right 0 } \
   TDEST { physical_name stream_out_tdest direction O left 0 right 0 } \
   TID { physical_name stream_out_tid direction O left 0 right 0 } \
   TKEEP { physical_name stream_out_tkeep direction O left 2 right 0 } \
   TLAST { physical_name stream_out_tlast direction O left 0 right 0 } \
   TREADY { physical_name stream_out_tready direction I } \
   TSTRB { physical_name stream_out_tstrb direction O left 2 right 0 } \
   TUSER { physical_name stream_out_tuser direction O left 0 right 0 } \
   TVALID { physical_name stream_out_tvalid direction O } \
   } \
  stream_out ]


  # Create ports
  set clk_142M [ create_bd_port -dir I -type clk -freq_hz 142857132 clk_142M ]
  set_property -dict [ list \
   CONFIG.ASSOCIATED_BUSIF {s_axi_control:stream_in0:stream_in1:stream_out} \
 ] $clk_142M
  set periph_resetn_clk142M [ create_bd_port -dir I -type rst periph_resetn_clk142M ]

  # Create instance: add_accel, and set properties
  set add_accel [ create_bd_cell -type ip -vlnv xilinx.com:hls:add_accel:1.0 add_accel ]

  # Create interface connections
  connect_bd_intf_net -intf_net add_accel_stream_out [get_bd_intf_ports stream_out] [get_bd_intf_pins add_accel/stream_out]
  connect_bd_intf_net -intf_net s_axi_control_1 [get_bd_intf_ports s_axi_control] [get_bd_intf_pins add_accel/s_axi_control]
  connect_bd_intf_net -intf_net stream_in0_1 [get_bd_intf_ports stream_in0] [get_bd_intf_pins add_accel/stream_in]
  connect_bd_intf_net -intf_net stream_in1_1 [get_bd_intf_ports stream_in1] [get_bd_intf_pins add_accel/stream_in1]

  # Create port connections
  connect_bd_net -net clk_142M_1 [get_bd_ports clk_142M] [get_bd_pins add_accel/ap_clk]
  connect_bd_net -net periph_resetn_clk142M_1 [get_bd_ports periph_resetn_clk142M] [get_bd_pins add_accel/ap_rst_n]

  # Create address segments
  assign_bd_address -offset 0x00000000 -range 0x00010000 -target_address_space [get_bd_addr_spaces s_axi_control] [get_bd_addr_segs add_accel/s_axi_control/Reg] -force


  # Restore current instance
  current_bd_instance $oldCurInst

  validate_bd_design

  set_property HDL_ATTRIBUTE.LOCKED {TRUE} [get_bd_intf_ports s_axi_control]
  set_property HDL_ATTRIBUTE.LOCKED {TRUE} [get_bd_intf_ports stream_in0]
  set_property HDL_ATTRIBUTE.LOCKED {TRUE} [get_bd_intf_ports stream_in1]
  set_property HDL_ATTRIBUTE.LOCKED {TRUE} [get_bd_intf_ports stream_out]

  # The first validate above is to propagate values prior to the set command(s)
  # above. Need second validate call to ensure design is validated.
  validate_bd_design

  save_bd_design
  close_bd_design $design_name 
}
# End of cr_bd_composable_pr_join_add()
cr_bd_composable_pr_join_add ""
set_property REGISTERED_WITH_MANAGER "1" [get_files composable_pr_join_add.bd ] 
set_property SYNTH_CHECKPOINT_MODE "Hierarchical" [get_files composable_pr_join_add.bd ] 

# Create 'composable_pr_join_add' reconfigurable module
set partitionDef [get_partition_defs pr_join]
create_reconfig_module -name composable_pr_join_add -partition_def $partitionDef
set obj [get_reconfig_modules composable_pr_join_add]
set_property -name "module_name" -value "composable_pr_join_add" -objects $obj

 move_files [ get_files composable_pr_join_add.bd ] -of_objects [get_reconfig_modules composable_pr_join_add]
# Set 'composable_pr_join_add' fileset file properties for remote files
# None

# Set 'composable_pr_join_add' fileset file properties for local files
# None



# Proc to create BD composable_pr_join_bitand
proc cr_bd_composable_pr_join_bitand { parentCell } {

  # CHANGE DESIGN NAME HERE
  set design_name composable_pr_join_bitand

  common::send_gid_msg -ssname BD::TCL -id 2010 -severity "INFO" "Currently there is no design <$design_name> in project, so creating one..."

  create_bd_design $design_name

  set bCheckIPsPassed 1
  ##################################################################
  # CHECK IPs
  ##################################################################
  set bCheckIPs 1
  if { $bCheckIPs == 1 } {
     set list_check_ips "\ 
  xilinx.com:hls:bitwise_and_accel:1.0\
  "

   set list_ips_missing ""
   common::send_gid_msg -ssname BD::TCL -id 2011 -severity "INFO" "Checking if the following IPs exist in the project's IP catalog: $list_check_ips ."

   foreach ip_vlnv $list_check_ips {
      set ip_obj [get_ipdefs -all $ip_vlnv]
      if { $ip_obj eq "" } {
         lappend list_ips_missing $ip_vlnv
      }
   }

   if { $list_ips_missing ne "" } {
      catch {common::send_gid_msg -ssname BD::TCL -id 2012 -severity "ERROR" "The following IPs are not found in the IP Catalog:\n  $list_ips_missing\n\nResolution: Please add the repository containing the IP(s) to the project." }
      set bCheckIPsPassed 0
   }

  }

  if { $bCheckIPsPassed != 1 } {
    common::send_gid_msg -ssname BD::TCL -id 2023 -severity "WARNING" "Will not continue with creation of design due to the error(s) above."
    return 3
  }

  variable script_folder

  if { $parentCell eq "" } {
     set parentCell [get_bd_cells /]
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj


  # Create interface ports
  set s_axi_control [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 -portmaps { \
   ARADDR { physical_name s_axi_control_araddr direction I left 4 right 0 } \
   ARREADY { physical_name s_axi_control_arready direction O } \
   ARVALID { physical_name s_axi_control_arvalid direction I } \
   AWADDR { physical_name s_axi_control_awaddr direction I left 4 right 0 } \
   AWREADY { physical_name s_axi_control_awready direction O } \
   AWVALID { physical_name s_axi_control_awvalid direction I } \
   BREADY { physical_name s_axi_control_bready direction I } \
   BRESP { physical_name s_axi_control_bresp direction O left 1 right 0 } \
   BVALID { physical_name s_axi_control_bvalid direction O } \
   RDATA { physical_name s_axi_control_rdata direction O left 31 right 0 } \
   RREADY { physical_name s_axi_control_rready direction I } \
   RRESP { physical_name s_axi_control_rresp direction O left 1 right 0 } \
   RVALID { physical_name s_axi_control_rvalid direction O } \
   WDATA { physical_name s_axi_control_wdata direction I left 31 right 0 } \
   WREADY { physical_name s_axi_control_wready direction O } \
   WSTRB { physical_name s_axi_control_wstrb direction I left 3 right 0 } \
   WVALID { physical_name s_axi_control_wvalid direction I } \
   } \
  s_axi_control ]
  set_property -dict [ list \
   CONFIG.ADDR_WIDTH {31} \
   CONFIG.ARUSER_WIDTH {0} \
   CONFIG.AWUSER_WIDTH {0} \
   CONFIG.BUSER_WIDTH {0} \
   CONFIG.DATA_WIDTH {32} \
   CONFIG.HAS_BRESP {1} \
   CONFIG.HAS_BURST {0} \
   CONFIG.HAS_CACHE {0} \
   CONFIG.HAS_LOCK {0} \
   CONFIG.HAS_PROT {0} \
   CONFIG.HAS_QOS {0} \
   CONFIG.HAS_REGION {0} \
   CONFIG.HAS_RRESP {1} \
   CONFIG.HAS_WSTRB {1} \
   CONFIG.ID_WIDTH {0} \
   CONFIG.MAX_BURST_LENGTH {1} \
   CONFIG.NUM_READ_OUTSTANDING {1} \
   CONFIG.NUM_READ_THREADS {1} \
   CONFIG.NUM_WRITE_OUTSTANDING {1} \
   CONFIG.NUM_WRITE_THREADS {1} \
   CONFIG.PROTOCOL {AXI4LITE} \
   CONFIG.READ_WRITE_MODE {READ_WRITE} \
   CONFIG.RUSER_BITS_PER_BYTE {0} \
   CONFIG.RUSER_WIDTH {0} \
   CONFIG.SUPPORTS_NARROW_BURST {0} \
   CONFIG.WUSER_BITS_PER_BYTE {0} \
   CONFIG.WUSER_WIDTH {0} \
   ] $s_axi_control

  set stream_in0 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 -portmaps { \
   TDATA { physical_name stream_in0_tdata direction I left 23 right 0 } \
   TDEST { physical_name stream_in0_tdest direction I left 0 right 0 } \
   TID { physical_name stream_in0_tid direction I left 0 right 0 } \
   TKEEP { physical_name stream_in0_tkeep direction I left 2 right 0 } \
   TLAST { physical_name stream_in0_tlast direction I left 0 right 0 } \
   TREADY { physical_name stream_in0_tready direction O } \
   TSTRB { physical_name stream_in0_tstrb direction I left 2 right 0 } \
   TUSER { physical_name stream_in0_tuser direction I left 0 right 0 } \
   TVALID { physical_name stream_in0_tvalid direction I } \
   } \
  stream_in0 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {1} \
   CONFIG.HAS_TLAST {1} \
   CONFIG.HAS_TREADY {1} \
   CONFIG.HAS_TSTRB {1} \
   CONFIG.LAYERED_METADATA {undef} \
   CONFIG.TDATA_NUM_BYTES {3} \
   CONFIG.TDEST_WIDTH {1} \
   CONFIG.TID_WIDTH {1} \
   CONFIG.TUSER_WIDTH {1} \
   ] $stream_in0

  set stream_in1 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 -portmaps { \
   TDATA { physical_name stream_in1_tdata direction I left 23 right 0 } \
   TDEST { physical_name stream_in1_tdest direction I left 0 right 0 } \
   TID { physical_name stream_in1_tid direction I left 0 right 0 } \
   TKEEP { physical_name stream_in1_tkeep direction I left 2 right 0 } \
   TLAST { physical_name stream_in1_tlast direction I left 0 right 0 } \
   TREADY { physical_name stream_in1_tready direction O } \
   TSTRB { physical_name stream_in1_tstrb direction I left 2 right 0 } \
   TUSER { physical_name stream_in1_tuser direction I left 0 right 0 } \
   TVALID { physical_name stream_in1_tvalid direction I } \
   } \
  stream_in1 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {1} \
   CONFIG.HAS_TLAST {1} \
   CONFIG.HAS_TREADY {1} \
   CONFIG.HAS_TSTRB {1} \
   CONFIG.LAYERED_METADATA {undef} \
   CONFIG.TDATA_NUM_BYTES {3} \
   CONFIG.TDEST_WIDTH {1} \
   CONFIG.TID_WIDTH {1} \
   CONFIG.TUSER_WIDTH {1} \
   ] $stream_in1

  set stream_out [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 -portmaps { \
   TDATA { physical_name stream_out_tdata direction O left 23 right 0 } \
   TDEST { physical_name stream_out_tdest direction O left 0 right 0 } \
   TID { physical_name stream_out_tid direction O left 0 right 0 } \
   TKEEP { physical_name stream_out_tkeep direction O left 2 right 0 } \
   TLAST { physical_name stream_out_tlast direction O left 0 right 0 } \
   TREADY { physical_name stream_out_tready direction I } \
   TSTRB { physical_name stream_out_tstrb direction O left 2 right 0 } \
   TUSER { physical_name stream_out_tuser direction O left 0 right 0 } \
   TVALID { physical_name stream_out_tvalid direction O } \
   } \
  stream_out ]


  # Create ports
  set clk_142M [ create_bd_port -dir I -type clk -freq_hz 142857132 clk_142M ]
  set_property -dict [ list \
   CONFIG.ASSOCIATED_BUSIF {s_axi_control:stream_in0:stream_in1:stream_out} \
 ] $clk_142M
  set periph_resetn_clk142M [ create_bd_port -dir I -type rst periph_resetn_clk142M ]

  # Create instance: bitwise_and_accel, and set properties
  set bitwise_and_accel [ create_bd_cell -type ip -vlnv xilinx.com:hls:bitwise_and_accel:1.0 bitwise_and_accel ]

  # Create interface connections
  connect_bd_intf_net -intf_net bitwise_and_accel_stream_out [get_bd_intf_ports stream_out] [get_bd_intf_pins bitwise_and_accel/stream_out]
  connect_bd_intf_net -intf_net s_axi_control_1 [get_bd_intf_ports s_axi_control] [get_bd_intf_pins bitwise_and_accel/s_axi_control]
  connect_bd_intf_net -intf_net stream_in0_1 [get_bd_intf_ports stream_in0] [get_bd_intf_pins bitwise_and_accel/stream_in]
  connect_bd_intf_net -intf_net stream_in1_1 [get_bd_intf_ports stream_in1] [get_bd_intf_pins bitwise_and_accel/stream_in1]

  # Create port connections
  connect_bd_net -net clk_142M_1 [get_bd_ports clk_142M] [get_bd_pins bitwise_and_accel/ap_clk]
  connect_bd_net -net periph_resetn_clk142M_1 [get_bd_ports periph_resetn_clk142M] [get_bd_pins bitwise_and_accel/ap_rst_n]

  # Create address segments
  assign_bd_address -offset 0x00000000 -range 0x00010000 -target_address_space [get_bd_addr_spaces s_axi_control] [get_bd_addr_segs bitwise_and_accel/s_axi_control/Reg] -force


  # Restore current instance
  current_bd_instance $oldCurInst

  validate_bd_design

  set_property HDL_ATTRIBUTE.LOCKED {TRUE} [get_bd_intf_ports s_axi_control]
  set_property HDL_ATTRIBUTE.LOCKED {TRUE} [get_bd_intf_ports stream_in0]
  set_property HDL_ATTRIBUTE.LOCKED {TRUE} [get_bd_intf_ports stream_in1]
  set_property HDL_ATTRIBUTE.LOCKED {TRUE} [get_bd_intf_ports stream_out]

  # The first validate above is to propagate values prior to the set command(s)
  # above. Need second validate call to ensure design is validated.
  validate_bd_design

  save_bd_design
  close_bd_design $design_name 
}
# End of cr_bd_composable_pr_join_bitand()
cr_bd_composable_pr_join_bitand ""
set_property REGISTERED_WITH_MANAGER "1" [get_files composable_pr_join_bitand.bd ] 
set_property SYNTH_CHECKPOINT_MODE "Hierarchical" [get_files composable_pr_join_bitand.bd ] 

# Create 'composable_pr_join_bitand' reconfigurable module
set partitionDef [get_partition_defs pr_join]
create_reconfig_module -name composable_pr_join_bitand -partition_def $partitionDef
set obj [get_reconfig_modules composable_pr_join_bitand]
set_property -name "module_name" -value "composable_pr_join_bitand" -objects $obj

 move_files [ get_files composable_pr_join_bitand.bd ] -of_objects [get_reconfig_modules composable_pr_join_bitand]
# Set 'composable_pr_join_bitand' fileset file properties for remote files
# None

# Set 'composable_pr_join_bitand' fileset file properties for local files
# None



# Proc to create BD composable_pr_join_subtract
proc cr_bd_composable_pr_join_subtract { parentCell } {

  # CHANGE DESIGN NAME HERE
  set design_name composable_pr_join_subtract

  common::send_gid_msg -ssname BD::TCL -id 2010 -severity "INFO" "Currently there is no design <$design_name> in project, so creating one..."

  create_bd_design $design_name

  set bCheckIPsPassed 1
  ##################################################################
  # CHECK IPs
  ##################################################################
  set bCheckIPs 1
  if { $bCheckIPs == 1 } {
     set list_check_ips "\ 
  xilinx.com:hls:subtract_accel:1.0\
  "

   set list_ips_missing ""
   common::send_gid_msg -ssname BD::TCL -id 2011 -severity "INFO" "Checking if the following IPs exist in the project's IP catalog: $list_check_ips ."

   foreach ip_vlnv $list_check_ips {
      set ip_obj [get_ipdefs -all $ip_vlnv]
      if { $ip_obj eq "" } {
         lappend list_ips_missing $ip_vlnv
      }
   }

   if { $list_ips_missing ne "" } {
      catch {common::send_gid_msg -ssname BD::TCL -id 2012 -severity "ERROR" "The following IPs are not found in the IP Catalog:\n  $list_ips_missing\n\nResolution: Please add the repository containing the IP(s) to the project." }
      set bCheckIPsPassed 0
   }

  }

  if { $bCheckIPsPassed != 1 } {
    common::send_gid_msg -ssname BD::TCL -id 2023 -severity "WARNING" "Will not continue with creation of design due to the error(s) above."
    return 3
  }

  variable script_folder

  if { $parentCell eq "" } {
     set parentCell [get_bd_cells /]
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj


  # Create interface ports
  set s_axi_control [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 s_axi_control ]
  set_property -dict [ list \
   CONFIG.ADDR_WIDTH {31} \
   CONFIG.ARUSER_WIDTH {0} \
   CONFIG.AWUSER_WIDTH {0} \
   CONFIG.BUSER_WIDTH {0} \
   CONFIG.DATA_WIDTH {32} \
   CONFIG.HAS_BRESP {1} \
   CONFIG.HAS_BURST {0} \
   CONFIG.HAS_CACHE {0} \
   CONFIG.HAS_LOCK {0} \
   CONFIG.HAS_PROT {0} \
   CONFIG.HAS_QOS {0} \
   CONFIG.HAS_REGION {0} \
   CONFIG.HAS_RRESP {1} \
   CONFIG.HAS_WSTRB {1} \
   CONFIG.ID_WIDTH {0} \
   CONFIG.MAX_BURST_LENGTH {1} \
   CONFIG.NUM_READ_OUTSTANDING {1} \
   CONFIG.NUM_READ_THREADS {1} \
   CONFIG.NUM_WRITE_OUTSTANDING {1} \
   CONFIG.NUM_WRITE_THREADS {1} \
   CONFIG.PROTOCOL {AXI4LITE} \
   CONFIG.READ_WRITE_MODE {READ_WRITE} \
   CONFIG.RUSER_BITS_PER_BYTE {0} \
   CONFIG.RUSER_WIDTH {0} \
   CONFIG.SUPPORTS_NARROW_BURST {0} \
   CONFIG.WUSER_BITS_PER_BYTE {0} \
   CONFIG.WUSER_WIDTH {0} \
   ] $s_axi_control

  set stream_in0 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 stream_in0 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {1} \
   CONFIG.HAS_TLAST {1} \
   CONFIG.HAS_TREADY {1} \
   CONFIG.HAS_TSTRB {1} \
   CONFIG.LAYERED_METADATA {undef} \
   CONFIG.TDATA_NUM_BYTES {3} \
   CONFIG.TDEST_WIDTH {1} \
   CONFIG.TID_WIDTH {1} \
   CONFIG.TUSER_WIDTH {1} \
   ] $stream_in0

  set stream_in1 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 stream_in1 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {1} \
   CONFIG.HAS_TLAST {1} \
   CONFIG.HAS_TREADY {1} \
   CONFIG.HAS_TSTRB {1} \
   CONFIG.LAYERED_METADATA {undef} \
   CONFIG.TDATA_NUM_BYTES {3} \
   CONFIG.TDEST_WIDTH {1} \
   CONFIG.TID_WIDTH {1} \
   CONFIG.TUSER_WIDTH {1} \
   ] $stream_in1

  set stream_out [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 stream_out ]


  # Create ports
  set clk_142M [ create_bd_port -dir I -type clk -freq_hz 142857132 clk_142M ]
  set_property -dict [ list \
   CONFIG.ASSOCIATED_BUSIF {s_axi_control:stream_in0:stream_in1:stream_out} \
 ] $clk_142M
  set periph_resetn_clk142M [ create_bd_port -dir I -type rst periph_resetn_clk142M ]

  # Create instance: subtract_accel, and set properties
  set subtract_accel [ create_bd_cell -type ip -vlnv xilinx.com:hls:subtract_accel:1.0 subtract_accel ]

  # Create interface connections
  connect_bd_intf_net -intf_net Conn1 [get_bd_intf_ports s_axi_control] [get_bd_intf_pins subtract_accel/s_axi_control]
  connect_bd_intf_net -intf_net Conn2 [get_bd_intf_ports stream_in0] [get_bd_intf_pins subtract_accel/stream_in]
  connect_bd_intf_net -intf_net Conn3 [get_bd_intf_ports stream_in1] [get_bd_intf_pins subtract_accel/stream_in1]
  connect_bd_intf_net -intf_net Conn4 [get_bd_intf_ports stream_out] [get_bd_intf_pins subtract_accel/stream_out]

  # Create port connections
  connect_bd_net -net ps7_0_FCLK_CLK1 [get_bd_ports clk_142M] [get_bd_pins subtract_accel/ap_clk]
  connect_bd_net -net rst_ps7_0_fclk1_peripheral_aresetn [get_bd_ports periph_resetn_clk142M] [get_bd_pins subtract_accel/ap_rst_n]

  # Create address segments
  assign_bd_address -offset 0x00000000 -range 0x00010000 -target_address_space [get_bd_addr_spaces s_axi_control] [get_bd_addr_segs subtract_accel/s_axi_control/Reg] -force


  # Restore current instance
  current_bd_instance $oldCurInst

  validate_bd_design
  save_bd_design
  close_bd_design $design_name 
}
# End of cr_bd_composable_pr_join_subtract()
cr_bd_composable_pr_join_subtract ""
set_property REGISTERED_WITH_MANAGER "1" [get_files composable_pr_join_subtract.bd ] 
set_property SYNTH_CHECKPOINT_MODE "Hierarchical" [get_files composable_pr_join_subtract.bd ] 

# Create 'composable_pr_join_subtract' reconfigurable module
set partitionDef [get_partition_defs pr_join]
create_reconfig_module -name composable_pr_join_subtract -partition_def $partitionDef
set_property default_rm composable_pr_join_subtract $partitionDef
set obj [get_reconfig_modules composable_pr_join_subtract]
set_property -name "module_name" -value "composable_pr_join_subtract" -objects $obj

 move_files [ get_files composable_pr_join_subtract.bd ] -of_objects [get_reconfig_modules composable_pr_join_subtract]
# Set 'composable_pr_join_subtract' fileset file properties for remote files
# None

# Set 'composable_pr_join_subtract' fileset file properties for local files
# None


# Adding sources referenced in BDs, if not already added


# Proc to create BD video_cp
proc cr_bd_video_cp { parentCell } {
# The design that will be created by this Tcl proc contains the following 
# module references:
# pr_0, pr_1, pr_fork, pr_join



  # CHANGE DESIGN NAME HERE
  set design_name video_cp

  common::send_gid_msg -ssname BD::TCL -id 2010 -severity "INFO" "Currently there is no design <$design_name> in project, so creating one..."

  create_bd_design $design_name

  set bCheckIPsPassed 1
  ##################################################################
  # CHECK IPs
  ##################################################################
  set bCheckIPs 1
  if { $bCheckIPs == 1 } {
     set list_check_ips "\ 
  xilinx.com:ip:axi_gpio:2.0\
  xilinx.com:ip:xlconcat:2.1\
  xilinx.com:ip:processing_system7:5.5\
  xilinx.com:ip:proc_sys_reset:5.0\
  xilinx.com:ip:axi_intc:4.1\
  xilinx.com:ip:axis_dwidth_converter:1.1\
  xilinx.com:ip:axis_data_fifo:2.0\
  xilinx.com:ip:axis_switch:1.1\
  xilinx.com:hls:gaussianfilter_accel:1.0\
  xilinx.com:hls:rgb2gray_accel:1.0\
  xilinx.com:ip:axi_vdma:6.3\
  xilinx.com:ip:dfx_decoupler:1.0\
  xilinx.com:ip:axis_register_slice:1.1\
  xilinx.com:ip:xlslice:1.0\
  xilinx.com:hls:color_convert:1.0\
  xilinx.com:hls:pixel_pack:1.0\
  xilinx.com:hls:pixel_unpack:1.0\
  xilinx.com:user:color_swap:1.1\
  digilentinc.com:ip:dvi2rgb:1.7\
  xilinx.com:ip:v_vid_in_axi4s:4.0\
  xilinx.com:ip:v_tc:6.2\
  digilentinc.com:ip:axi_dynclk:1.0\
  realdigital.org:realdigital:hdmi_tx:1.1\
  xilinx.com:ip:v_axi4s_vid_out:4.0\
  "

   set list_ips_missing ""
   common::send_gid_msg -ssname BD::TCL -id 2011 -severity "INFO" "Checking if the following IPs exist in the project's IP catalog: $list_check_ips ."

   foreach ip_vlnv $list_check_ips {
      set ip_obj [get_ipdefs -all $ip_vlnv]
      if { $ip_obj eq "" } {
         lappend list_ips_missing $ip_vlnv
      }
   }

   if { $list_ips_missing ne "" } {
      catch {common::send_gid_msg -ssname BD::TCL -id 2012 -severity "ERROR" "The following IPs are not found in the IP Catalog:\n  $list_ips_missing\n\nResolution: Please add the repository containing the IP(s) to the project." }
      set bCheckIPsPassed 0
   }

  }

  ##################################################################
  # CHECK Modules
  ##################################################################
  set bCheckModules 1
  if { $bCheckModules == 1 } {
     set list_check_mods "\ 
  pr_0\
  pr_1\
  pr_fork\
  pr_join\
  "

   set list_mods_missing ""
   common::send_gid_msg -ssname BD::TCL -id 2020 -severity "INFO" "Checking if the following modules exist in the project's sources: $list_check_mods ."

   foreach mod_vlnv $list_check_mods {
      if { [can_resolve_reference $mod_vlnv] == 0 } {
         lappend list_mods_missing $mod_vlnv
      }
   }

   if { $list_mods_missing ne "" } {
      catch {common::send_gid_msg -ssname BD::TCL -id 2021 -severity "ERROR" "The following module(s) are not found in the project: $list_mods_missing" }
      common::send_gid_msg -ssname BD::TCL -id 2022 -severity "INFO" "Please add source files for the missing module(s) above."
      set bCheckIPsPassed 0
   }
}

  if { $bCheckIPsPassed != 1 } {
    common::send_gid_msg -ssname BD::TCL -id 2023 -severity "WARNING" "Will not continue with creation of design due to the error(s) above."
    return 3
  }

  
# Hierarchical cell: frontend
proc create_hier_cell_frontend_1 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2092 -severity "ERROR" "create_hier_cell_frontend_1() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 S00_AXILite

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 S02_AXILite

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 S04_AXILite

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:hdmi_rtl:2.0 hdmi_tx

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 video_in


  # Create pins
  create_bd_pin -dir I -type clk clk_100M
  create_bd_pin -dir I -type clk clk_142M
  create_bd_pin -dir O -from 0 -to 0 hdmi_out_hpd
  create_bd_pin -dir O -type intr hdmi_out_hpd_irq
  create_bd_pin -dir I -from 0 -to 0 -type rst periph_resetn_clk100M
  create_bd_pin -dir I -type rst rst
  create_bd_pin -dir O -type intr vtc_out_irq

  # Create instance: axi_dynclk, and set properties
  set axi_dynclk [ create_bd_cell -type ip -vlnv digilentinc.com:ip:axi_dynclk:1.0 axi_dynclk ]

  # Create instance: hdmi_out_hpd_video, and set properties
  set hdmi_out_hpd_video [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_gpio:2.0 hdmi_out_hpd_video ]
  set_property -dict [ list \
   CONFIG.C_ALL_OUTPUTS {1} \
   CONFIG.C_GPIO_WIDTH {1} \
   CONFIG.C_INTERRUPT_PRESENT {1} \
 ] $hdmi_out_hpd_video

  # Create instance: hdmi_tx, and set properties
  set hdmi_tx [ create_bd_cell -type ip -vlnv realdigital.org:realdigital:hdmi_tx:1.1 hdmi_tx ]
  set_property -dict [ list \
   CONFIG.C_DATA_WIDTH {24} \
   CONFIG.MODE {DVI} \
 ] $hdmi_tx

  # Create instance: v_axi4s_vid_out, and set properties
  set v_axi4s_vid_out [ create_bd_cell -type ip -vlnv xilinx.com:ip:v_axi4s_vid_out:4.0 v_axi4s_vid_out ]
  set_property -dict [ list \
   CONFIG.C_ADDR_WIDTH {11} \
   CONFIG.C_HAS_ASYNC_CLK {1} \
   CONFIG.C_HYSTERESIS_LEVEL {1024} \
   CONFIG.C_VTG_MASTER_SLAVE {1} \
 ] $v_axi4s_vid_out

  # Create instance: vtc_out, and set properties
  set vtc_out [ create_bd_cell -type ip -vlnv xilinx.com:ip:v_tc:6.2 vtc_out ]
  set_property -dict [ list \
   CONFIG.GEN_F0_VBLANK_HEND {400} \
   CONFIG.GEN_F0_VBLANK_HSTART {400} \
   CONFIG.GEN_F0_VFRAME_SIZE {525} \
   CONFIG.GEN_F0_VSYNC_HEND {420} \
   CONFIG.GEN_F0_VSYNC_HSTART {420} \
   CONFIG.GEN_F0_VSYNC_VEND {496} \
   CONFIG.GEN_F0_VSYNC_VSTART {493} \
   CONFIG.GEN_F1_VFRAME_SIZE {750} \
   CONFIG.GEN_F1_VSYNC_VEND {729} \
   CONFIG.GEN_F1_VSYNC_VSTART {724} \
   CONFIG.GEN_HACTIVE_SIZE {800} \
   CONFIG.GEN_HFRAME_SIZE {928} \
   CONFIG.GEN_HSYNC_END {840} \
   CONFIG.GEN_HSYNC_START {840} \
   CONFIG.GEN_VACTIVE_SIZE {480} \
   CONFIG.VIDEO_MODE {Custom} \
   CONFIG.enable_detection {false} \
 ] $vtc_out

  # Create interface connections
  connect_bd_intf_net -intf_net Conn1 [get_bd_intf_pins hdmi_tx] [get_bd_intf_pins hdmi_tx/hdmi_tx]
  connect_bd_intf_net -intf_net Conn2 [get_bd_intf_pins S02_AXILite] [get_bd_intf_pins vtc_out/ctrl]
  connect_bd_intf_net -intf_net ps7_0_axi_periph_M06_AXI [get_bd_intf_pins S00_AXILite] [get_bd_intf_pins hdmi_out_hpd_video/S_AXI]
  connect_bd_intf_net -intf_net ps7_0_axi_periph_M08_AXI [get_bd_intf_pins S04_AXILite] [get_bd_intf_pins axi_dynclk/s00_axi]
  connect_bd_intf_net -intf_net v_axi4s_vid_out_vid_io_out [get_bd_intf_pins hdmi_tx/RGB] [get_bd_intf_pins v_axi4s_vid_out/vid_io_out]
  connect_bd_intf_net -intf_net v_tc_0_vtiming_out [get_bd_intf_pins v_axi4s_vid_out/vtiming_in] [get_bd_intf_pins vtc_out/vtiming_out]
  connect_bd_intf_net -intf_net video_in_1 [get_bd_intf_pins video_in] [get_bd_intf_pins v_axi4s_vid_out/video_in]

  # Create port connections
  connect_bd_net -net Net [get_bd_pins clk_100M] [get_bd_pins axi_dynclk/REF_CLK_I] [get_bd_pins axi_dynclk/s00_axi_aclk] [get_bd_pins hdmi_out_hpd_video/s_axi_aclk] [get_bd_pins vtc_out/s_axi_aclk]
  connect_bd_net -net Net1 [get_bd_pins periph_resetn_clk100M] [get_bd_pins axi_dynclk/s00_axi_aresetn] [get_bd_pins hdmi_out_hpd_video/s_axi_aresetn] [get_bd_pins vtc_out/s_axi_aresetn]
  connect_bd_net -net aclk_1 [get_bd_pins clk_142M] [get_bd_pins v_axi4s_vid_out/aclk]
  connect_bd_net -net axi_dynclk_0_LOCKED_O [get_bd_pins axi_dynclk/LOCKED_O] [get_bd_pins hdmi_tx/pix_clk_locked]
  connect_bd_net -net axi_dynclk_0_PXL_CLK_5X_O [get_bd_pins axi_dynclk/PXL_CLK_5X_O] [get_bd_pins hdmi_tx/pix_clkx5]
  connect_bd_net -net axi_dynclk_0_PXL_CLK_O [get_bd_pins axi_dynclk/PXL_CLK_O] [get_bd_pins hdmi_tx/pix_clk] [get_bd_pins v_axi4s_vid_out/vid_io_out_clk] [get_bd_pins vtc_out/clk]
  connect_bd_net -net hdmi_out_hpd_video_gpio_io_o [get_bd_pins hdmi_out_hpd] [get_bd_pins hdmi_out_hpd_video/gpio_io_o]
  connect_bd_net -net hdmi_out_hpd_video_ip2intc_irpt [get_bd_pins hdmi_out_hpd_irq] [get_bd_pins hdmi_out_hpd_video/ip2intc_irpt]
  connect_bd_net -net rst_1 [get_bd_pins rst] [get_bd_pins hdmi_tx/rst]
  connect_bd_net -net v_tc_0_irq [get_bd_pins vtc_out_irq] [get_bd_pins vtc_out/irq]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: frontend
proc create_hier_cell_frontend { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2092 -severity "ERROR" "create_hier_cell_frontend() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:iic_rtl:1.0 DDC

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 S00_AXILite

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 S02_AXILite

  create_bd_intf_pin -mode Slave -vlnv digilentinc.com:interface:tmds_rtl:1.0 TMDS_in

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 video_out


  # Create pins
  create_bd_pin -dir O -type clk PixelClk
  create_bd_pin -dir O aPixelClkLckd
  create_bd_pin -dir I -type clk clk_100M
  create_bd_pin -dir I -type clk clk_142M
  create_bd_pin -dir I -type clk clk_200M
  create_bd_pin -dir O -from 0 -to 0 hdmi_in_hpd
  create_bd_pin -dir O -type intr hdmi_in_hpd_irq
  create_bd_pin -dir I -from 0 -to 0 -type rst periph_resetn_clk100M
  create_bd_pin -dir I -from 0 -to 0 -type rst resetn
  create_bd_pin -dir I -from 0 -to 0 -type rst vid_io_in_reset
  create_bd_pin -dir O -type intr vtc_in_irq

  # Create instance: axi_gpio_hdmiin, and set properties
  set axi_gpio_hdmiin [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_gpio:2.0 axi_gpio_hdmiin ]
  set_property -dict [ list \
   CONFIG.C_ALL_INPUTS_2 {1} \
   CONFIG.C_ALL_OUTPUTS {1} \
   CONFIG.C_GPIO2_WIDTH {1} \
   CONFIG.C_GPIO_WIDTH {1} \
   CONFIG.C_INTERRUPT_PRESENT {1} \
   CONFIG.C_IS_DUAL {1} \
 ] $axi_gpio_hdmiin

  # Create instance: color_swap, and set properties
  set color_swap [ create_bd_cell -type ip -vlnv xilinx.com:user:color_swap:1.1 color_swap ]
  set_property -dict [ list \
   CONFIG.input_format {rbg} \
   CONFIG.output_format {rgb} \
 ] $color_swap

  # Create instance: dvi2rgb, and set properties
  set dvi2rgb [ create_bd_cell -type ip -vlnv digilentinc.com:ip:dvi2rgb:1.7 dvi2rgb ]
  set_property -dict [ list \
   CONFIG.kAddBUFG {false} \
   CONFIG.kClkRange {1} \
   CONFIG.kEdidFileName {720p_edid.data} \
   CONFIG.kRstActiveHigh {false} \
 ] $dvi2rgb

  # Create instance: v_vid_in_axi4s_0, and set properties
  set v_vid_in_axi4s_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:v_vid_in_axi4s:4.0 v_vid_in_axi4s_0 ]
  set_property -dict [ list \
   CONFIG.C_ADDR_WIDTH {12} \
   CONFIG.C_HAS_ASYNC_CLK {1} \
 ] $v_vid_in_axi4s_0

  # Create instance: vtc_in, and set properties
  set vtc_in [ create_bd_cell -type ip -vlnv xilinx.com:ip:v_tc:6.2 vtc_in ]
  set_property -dict [ list \
   CONFIG.HAS_INTC_IF {true} \
   CONFIG.enable_generation {false} \
   CONFIG.horizontal_blank_detection {false} \
   CONFIG.max_lines_per_frame {2048} \
   CONFIG.vertical_blank_detection {false} \
 ] $vtc_in

  # Create interface connections
  connect_bd_intf_net -intf_net Conn1 [get_bd_intf_pins DDC] [get_bd_intf_pins dvi2rgb/DDC]
  connect_bd_intf_net -intf_net Conn2 [get_bd_intf_pins TMDS_in] [get_bd_intf_pins dvi2rgb/TMDS]
  connect_bd_intf_net -intf_net Conn3 [get_bd_intf_pins S02_AXILite] [get_bd_intf_pins vtc_in/ctrl]
  connect_bd_intf_net -intf_net color_swap_pixel_output [get_bd_intf_pins color_swap/pixel_output] [get_bd_intf_pins v_vid_in_axi4s_0/vid_io_in]
  connect_bd_intf_net -intf_net dvi2rgb_RGB [get_bd_intf_pins color_swap/pixel_input] [get_bd_intf_pins dvi2rgb/RGB]
  connect_bd_intf_net -intf_net hdmi_in_video_out [get_bd_intf_pins video_out] [get_bd_intf_pins v_vid_in_axi4s_0/video_out]
  connect_bd_intf_net -intf_net ps7_0_axi_periph_M07_AXI [get_bd_intf_pins S00_AXILite] [get_bd_intf_pins axi_gpio_hdmiin/S_AXI]
  connect_bd_intf_net -intf_net v_vid_in_axi4s_0_vtiming_out [get_bd_intf_pins v_vid_in_axi4s_0/vtiming_out] [get_bd_intf_pins vtc_in/vtiming_in]

  # Create port connections
  connect_bd_net -net Net [get_bd_pins clk_100M] [get_bd_pins axi_gpio_hdmiin/s_axi_aclk] [get_bd_pins vtc_in/s_axi_aclk]
  connect_bd_net -net Net1 [get_bd_pins periph_resetn_clk100M] [get_bd_pins axi_gpio_hdmiin/s_axi_aresetn] [get_bd_pins dvi2rgb/aRst_n] [get_bd_pins vtc_in/s_axi_aresetn]
  connect_bd_net -net RefClk_1 [get_bd_pins clk_200M] [get_bd_pins dvi2rgb/RefClk]
  connect_bd_net -net aclk_1 [get_bd_pins clk_142M] [get_bd_pins v_vid_in_axi4s_0/aclk]
  connect_bd_net -net axi_gpio_video_gpio_io_o [get_bd_pins hdmi_in_hpd] [get_bd_pins axi_gpio_hdmiin/gpio_io_o]
  connect_bd_net -net axi_gpio_video_ip2intc_irpt [get_bd_pins hdmi_in_hpd_irq] [get_bd_pins axi_gpio_hdmiin/ip2intc_irpt]
  connect_bd_net -net dvi2rgb_PixelClk1 [get_bd_pins PixelClk] [get_bd_pins dvi2rgb/PixelClk] [get_bd_pins v_vid_in_axi4s_0/vid_io_in_clk] [get_bd_pins vtc_in/clk]
  connect_bd_net -net dvi2rgb_aPixelClkLckd [get_bd_pins aPixelClkLckd] [get_bd_pins axi_gpio_hdmiin/gpio2_io_i] [get_bd_pins dvi2rgb/aPixelClkLckd]
  connect_bd_net -net resetn_1 [get_bd_pins resetn] [get_bd_pins vtc_in/resetn]
  connect_bd_net -net v_tc_1_irq [get_bd_pins vtc_in_irq] [get_bd_pins vtc_in/irq]
  connect_bd_net -net vid_io_in_reset_1 [get_bd_pins vid_io_in_reset] [get_bd_pins v_vid_in_axi4s_0/vid_io_in_reset]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: hdmi_out
proc create_hier_cell_hdmi_out { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2092 -severity "ERROR" "create_hier_cell_hdmi_out() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 S00_AXILite

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 S01_AXILite

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 S02_AXILite

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 S03_AXILite

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 S04_AXILite

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:hdmi_rtl:2.0 hdmi_tx

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 in_stream

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 stream_in_24


  # Create pins
  create_bd_pin -dir I -type clk clk_100M
  create_bd_pin -dir I -type clk clk_142M
  create_bd_pin -dir O -from 0 -to 0 hdmi_out_hpd
  create_bd_pin -dir O -type intr hdmi_out_hpd_irq
  create_bd_pin -dir I -from 0 -to 0 -type rst periph_resetn_clk100M
  create_bd_pin -dir I -from 0 -to 0 -type rst periph_resetn_clk142M
  create_bd_pin -dir I -type rst rst
  create_bd_pin -dir O -type intr vtc_out_irq

  # Create instance: axis_register_slice, and set properties
  set axis_register_slice [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_register_slice:1.1 axis_register_slice ]

  # Create instance: color_convert, and set properties
  set color_convert [ create_bd_cell -type ip -vlnv xilinx.com:hls:color_convert:1.0 color_convert ]

  # Create instance: frontend
  create_hier_cell_frontend_1 $hier_obj frontend

  # Create instance: pixel_unpack, and set properties
  set pixel_unpack [ create_bd_cell -type ip -vlnv xilinx.com:hls:pixel_unpack:1.0 pixel_unpack ]

  # Create interface connections
  connect_bd_intf_net -intf_net Conn2 [get_bd_intf_pins S02_AXILite] [get_bd_intf_pins frontend/S02_AXILite]
  connect_bd_intf_net -intf_net Conn3 [get_bd_intf_pins hdmi_tx] [get_bd_intf_pins frontend/hdmi_tx]
  connect_bd_intf_net -intf_net Conn4 [get_bd_intf_pins M_AXIS] [get_bd_intf_pins axis_register_slice/M_AXIS]
  connect_bd_intf_net -intf_net Conn5 [get_bd_intf_pins stream_in_24] [get_bd_intf_pins color_convert/stream_in_24]
  connect_bd_intf_net -intf_net Conn7 [get_bd_intf_pins S03_AXILite] [get_bd_intf_pins color_convert/s_axi_control]
  connect_bd_intf_net -intf_net Conn8 [get_bd_intf_pins S01_AXILite] [get_bd_intf_pins pixel_unpack/s_axi_control]
  connect_bd_intf_net -intf_net color_convert_stream_out_24 [get_bd_intf_pins color_convert/stream_out_24] [get_bd_intf_pins frontend/video_in]
  connect_bd_intf_net -intf_net in_stream_1 [get_bd_intf_pins in_stream] [get_bd_intf_pins pixel_unpack/stream_in_32]
  connect_bd_intf_net -intf_net pixel_unpack_stream_out_24 [get_bd_intf_pins axis_register_slice/S_AXIS] [get_bd_intf_pins pixel_unpack/stream_out_24]
  connect_bd_intf_net -intf_net ps7_0_axi_periph_M06_AXI [get_bd_intf_pins S00_AXILite] [get_bd_intf_pins frontend/S00_AXILite]
  connect_bd_intf_net -intf_net ps7_0_axi_periph_M08_AXI [get_bd_intf_pins S04_AXILite] [get_bd_intf_pins frontend/S04_AXILite]

  # Create port connections
  connect_bd_net -net Net [get_bd_pins clk_100M] [get_bd_pins frontend/clk_100M]
  connect_bd_net -net Net1 [get_bd_pins periph_resetn_clk100M] [get_bd_pins frontend/periph_resetn_clk100M]
  connect_bd_net -net aclk_1 [get_bd_pins clk_142M] [get_bd_pins axis_register_slice/aclk] [get_bd_pins color_convert/ap_clk] [get_bd_pins frontend/clk_142M] [get_bd_pins pixel_unpack/ap_clk]
  connect_bd_net -net hdmi_out_hpd_video_gpio_io_o [get_bd_pins hdmi_out_hpd] [get_bd_pins frontend/hdmi_out_hpd]
  connect_bd_net -net hdmi_out_hpd_video_ip2intc_irpt [get_bd_pins hdmi_out_hpd_irq] [get_bd_pins frontend/hdmi_out_hpd_irq]
  connect_bd_net -net rst_1 [get_bd_pins rst] [get_bd_pins frontend/rst]
  connect_bd_net -net rst_ps7_0_100M_peripheral_aresetn [get_bd_pins periph_resetn_clk142M] [get_bd_pins axis_register_slice/aresetn] [get_bd_pins color_convert/ap_rst_n] [get_bd_pins pixel_unpack/ap_rst_n]
  connect_bd_net -net v_tc_0_irq [get_bd_pins vtc_out_irq] [get_bd_pins frontend/vtc_out_irq]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: hdmi_in
proc create_hier_cell_hdmi_in { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2092 -severity "ERROR" "create_hier_cell_hdmi_in() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:iic_rtl:1.0 DDC

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 S00_AXILite

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 S01_AXILite

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 S02_AXILite

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 S03_AXILite

  create_bd_intf_pin -mode Slave -vlnv digilentinc.com:interface:tmds_rtl:1.0 TMDS_in

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 out_stream

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 stream_in_24


  # Create pins
  create_bd_pin -dir O -type clk PixelClk
  create_bd_pin -dir O aPixelClkLckd
  create_bd_pin -dir I -type clk clk_100M
  create_bd_pin -dir I -type clk clk_142M
  create_bd_pin -dir I -type clk clk_200M
  create_bd_pin -dir O -from 0 -to 0 hdmi_in_hpd
  create_bd_pin -dir O -type intr hdmi_in_hpd_irq
  create_bd_pin -dir I -from 0 -to 0 -type rst periph_resetn_clk100M
  create_bd_pin -dir I -from 0 -to 0 -type rst periph_resetn_clk142M
  create_bd_pin -dir I -from 0 -to 0 -type rst resetn
  create_bd_pin -dir I -from 0 -to 0 -type rst vid_io_in_reset
  create_bd_pin -dir O -type intr vtc_in_irq

  # Create instance: axis_register_slice, and set properties
  set axis_register_slice [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_register_slice:1.1 axis_register_slice ]

  # Create instance: color_convert, and set properties
  set color_convert [ create_bd_cell -type ip -vlnv xilinx.com:hls:color_convert:1.0 color_convert ]

  # Create instance: frontend
  create_hier_cell_frontend $hier_obj frontend

  # Create instance: pixel_pack, and set properties
  set pixel_pack [ create_bd_cell -type ip -vlnv xilinx.com:hls:pixel_pack:1.0 pixel_pack ]

  # Create interface connections
  connect_bd_intf_net -intf_net Conn1 [get_bd_intf_pins M_AXIS] [get_bd_intf_pins axis_register_slice/M_AXIS]
  connect_bd_intf_net -intf_net Conn2 [get_bd_intf_pins stream_in_24] [get_bd_intf_pins pixel_pack/stream_in_24]
  connect_bd_intf_net -intf_net Conn3 [get_bd_intf_pins S02_AXILite] [get_bd_intf_pins frontend/S02_AXILite]
  connect_bd_intf_net -intf_net Conn5 [get_bd_intf_pins S03_AXILite] [get_bd_intf_pins pixel_pack/s_axi_control]
  connect_bd_intf_net -intf_net Conn6 [get_bd_intf_pins S01_AXILite] [get_bd_intf_pins color_convert/s_axi_control]
  connect_bd_intf_net -intf_net TMDS_1 [get_bd_intf_pins TMDS_in] [get_bd_intf_pins frontend/TMDS_in]
  connect_bd_intf_net -intf_net color_convert_stream_out_24 [get_bd_intf_pins axis_register_slice/S_AXIS] [get_bd_intf_pins color_convert/stream_out_24]
  connect_bd_intf_net -intf_net frontend_DDC [get_bd_intf_pins DDC] [get_bd_intf_pins frontend/DDC]
  connect_bd_intf_net -intf_net frontend_video_out [get_bd_intf_pins color_convert/stream_in_24] [get_bd_intf_pins frontend/video_out]
  connect_bd_intf_net -intf_net pixel_pack_stream_out_32 [get_bd_intf_pins out_stream] [get_bd_intf_pins pixel_pack/stream_out_32]
  connect_bd_intf_net -intf_net ps7_0_axi_periph_M07_AXI [get_bd_intf_pins S00_AXILite] [get_bd_intf_pins frontend/S00_AXILite]

  # Create port connections
  connect_bd_net -net Net [get_bd_pins clk_100M] [get_bd_pins frontend/clk_100M]
  connect_bd_net -net RefClk_1 [get_bd_pins clk_200M] [get_bd_pins frontend/clk_200M]
  connect_bd_net -net aclk_1 [get_bd_pins clk_142M] [get_bd_pins axis_register_slice/aclk] [get_bd_pins color_convert/ap_clk] [get_bd_pins frontend/clk_142M] [get_bd_pins pixel_pack/ap_clk]
  connect_bd_net -net axi_gpio_video_gpio_io_o [get_bd_pins hdmi_in_hpd] [get_bd_pins frontend/hdmi_in_hpd]
  connect_bd_net -net axi_gpio_video_ip2intc_irpt [get_bd_pins hdmi_in_hpd_irq] [get_bd_pins frontend/hdmi_in_hpd_irq]
  connect_bd_net -net dvi2rgb_PixelClk [get_bd_pins PixelClk] [get_bd_pins frontend/PixelClk]
  connect_bd_net -net dvi2rgb_aPixelClkLckd [get_bd_pins aPixelClkLckd] [get_bd_pins frontend/aPixelClkLckd]
  connect_bd_net -net periph_resetn_clk100M_1 [get_bd_pins periph_resetn_clk100M] [get_bd_pins frontend/periph_resetn_clk100M]
  connect_bd_net -net resetn_1 [get_bd_pins resetn] [get_bd_pins frontend/resetn]
  connect_bd_net -net rst_ps7_0_100M_peripheral_aresetn [get_bd_pins periph_resetn_clk142M] [get_bd_pins axis_register_slice/aresetn] [get_bd_pins color_convert/ap_rst_n] [get_bd_pins pixel_pack/ap_rst_n]
  connect_bd_net -net v_tc_1_irq [get_bd_pins vtc_in_irq] [get_bd_pins frontend/vtc_in_irq]
  connect_bd_net -net vid_io_in_reset_1 [get_bd_pins vid_io_in_reset] [get_bd_pins frontend/vid_io_in_reset]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: dfx_decouplers
proc create_hier_cell_dfx_decouplers { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2092 -severity "ERROR" "create_hier_cell_dfx_decouplers() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 m_axi_dfx_pr_0_0

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 m_axi_dfx_pr_0_1

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 m_axi_dfx_pr_1_0

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 m_axi_dfx_pr_1_1

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 m_axi_dfx_pr_fork

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 m_axi_dfx_pr_join

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_dfx_pr_0_0

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_dfx_pr_0_1

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_dfx_pr_1_0

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_dfx_pr_1_1

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_dfx_pr_fork_0

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_dfx_pr_fork_1

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_dfx_pr_join

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_pr_0_0

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_pr_0_1

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_pr_1_0

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_pr_1_1

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_pr_fork

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_pr_join_0

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_pr_join_1

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:aximm_rtl:1.0 s_axi_pr_0_0

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:aximm_rtl:1.0 s_axi_pr_0_1

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:aximm_rtl:1.0 s_axi_pr_1_0

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:aximm_rtl:1.0 s_axi_pr_1_1

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:aximm_rtl:1.0 s_axi_pr_fork

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:aximm_rtl:1.0 s_axi_pr_join

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_dfx_pr_0_0

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_dfx_pr_0_1

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_dfx_pr_1_0

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_dfx_pr_1_1

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_dfx_pr_fork

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_dfx_pr_join_0

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_dfx_pr_join_1

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_pr_0_0

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_pr_0_1

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_pr_1_0

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_pr_1_1

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_pr_join

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_pr_fork_0

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_pr_fork_1


  # Create pins
  create_bd_pin -dir I -type clk clk_142M
  create_bd_pin -dir I -from 7 -to 0 dfx_decouple
  create_bd_pin -dir O -from 7 -to 0 dfx_status
  create_bd_pin -dir I -type rst periph_resetn_clk142M

  # Create instance: dfx_decoupler_pr_0, and set properties
  set dfx_decoupler_pr_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:dfx_decoupler:1.0 dfx_decoupler_pr_0 ]
  set_property -dict [ list \
   CONFIG.ALL_PARAMS {INTF {in_0 {ID 0 MODE slave VLNV xilinx.com:interface:axis_rtl:1.0 SIGNALS {TVALID {PRESENT 1 WIDTH 1} TREADY {PRESENT 1 WIDTH 1} TDATA {PRESENT 1 WIDTH 24} TUSER {PRESENT 1 WIDTH 1} TLAST {PRESENT 1 WIDTH 1} TID {PRESENT 0 WIDTH 0} TDEST {PRESENT 0 WIDTH 0} TSTRB {PRESENT 0 WIDTH 3} TKEEP {PRESENT 0 WIDTH 3}}} in_1 {ID 1 MODE slave VLNV xilinx.com:interface:axis_rtl:1.0 SIGNALS {TVALID {PRESENT 1 WIDTH 1} TREADY {PRESENT 1 WIDTH 1} TDATA {PRESENT 1 WIDTH 24} TUSER {PRESENT 1 WIDTH 1} TLAST {PRESENT 1 WIDTH 1} TID {PRESENT 0 WIDTH 0} TDEST {PRESENT 0 WIDTH 0} TSTRB {PRESENT 0 WIDTH 3} TKEEP {PRESENT 0 WIDTH 3}}} out_0 {ID 2 VLNV xilinx.com:interface:axis_rtl:1.0 SIGNALS {TVALID {PRESENT 1 WIDTH 1} TREADY {PRESENT 1 WIDTH 1} TDATA {PRESENT 1 WIDTH 24 MANAGEMENT manual} TUSER {PRESENT 1 WIDTH 1} TLAST {PRESENT 1 WIDTH 1} TID {PRESENT 1 WIDTH 1} TDEST {PRESENT 1 WIDTH 1} TSTRB {PRESENT 0 WIDTH 3} TKEEP {PRESENT 0 WIDTH 3}}} out_1 {ID 3 VLNV xilinx.com:interface:axis_rtl:1.0 SIGNALS {TVALID {PRESENT 1 WIDTH 1} TREADY {PRESENT 1 WIDTH 1} TDATA {PRESENT 1 WIDTH 24} TUSER {PRESENT 1 WIDTH 1} TLAST {PRESENT 1 WIDTH 1} TID {PRESENT 1 WIDTH 1} TDEST {PRESENT 1 WIDTH 1} TSTRB {PRESENT 0 WIDTH 3} TKEEP {PRESENT 0 WIDTH 3}}} axi_lite0 {ID 4 VLNV xilinx.com:interface:aximm_rtl:1.0 PROTOCOL axi4lite SIGNALS {ARVALID {PRESENT 1 WIDTH 1} ARREADY {PRESENT 1 WIDTH 1} AWVALID {PRESENT 1 WIDTH 1} AWREADY {PRESENT 1 WIDTH 1} BVALID {PRESENT 1 WIDTH 1} BREADY {PRESENT 1 WIDTH 1} RVALID {PRESENT 1 WIDTH 1} RREADY {PRESENT 1 WIDTH 1} WVALID {PRESENT 1 WIDTH 1} WREADY {PRESENT 1 WIDTH 1} AWADDR {PRESENT 1 WIDTH 31} AWLEN {PRESENT 0 WIDTH 8} AWSIZE {PRESENT 0 WIDTH 3} AWBURST {PRESENT 0 WIDTH 2} AWLOCK {PRESENT 0 WIDTH 1} AWCACHE {PRESENT 0 WIDTH 4} AWPROT {PRESENT 1 WIDTH 3} WDATA {PRESENT 1 WIDTH 32} WSTRB {PRESENT 1 WIDTH 4} WLAST {PRESENT 0 WIDTH 1} BRESP {PRESENT 1 WIDTH 2} ARADDR {PRESENT 1 WIDTH 31} ARLEN {PRESENT 0 WIDTH 8} ARSIZE {PRESENT 0 WIDTH 3} ARBURST {PRESENT 0 WIDTH 2} ARLOCK {PRESENT 0 WIDTH 1} ARCACHE {PRESENT 0 WIDTH 4} ARPROT {PRESENT 1 WIDTH 3} RDATA {PRESENT 1 WIDTH 32} RRESP {PRESENT 1 WIDTH 2} RLAST {PRESENT 0 WIDTH 1} AWID {PRESENT 0 WIDTH 0} AWREGION {PRESENT 1 WIDTH 4} AWQOS {PRESENT 1 WIDTH 4} AWUSER {PRESENT 0 WIDTH 0} WID {PRESENT 0 WIDTH 0} WUSER {PRESENT 0 WIDTH 0} BID {PRESENT 0 WIDTH 0} BUSER {PRESENT 0 WIDTH 0} ARID {PRESENT 0 WIDTH 0} ARREGION {PRESENT 1 WIDTH 4} ARQOS {PRESENT 1 WIDTH 4} ARUSER {PRESENT 0 WIDTH 0} RID {PRESENT 0 WIDTH 0} RUSER {PRESENT 0 WIDTH 0}}} axi_lite1 {ID 5 VLNV xilinx.com:interface:aximm_rtl:1.0 PROTOCOL axi4lite SIGNALS {ARVALID {PRESENT 1 WIDTH 1} ARREADY {PRESENT 1 WIDTH 1} AWVALID {PRESENT 1 WIDTH 1} AWREADY {PRESENT 1 WIDTH 1} BVALID {PRESENT 1 WIDTH 1} BREADY {PRESENT 1 WIDTH 1} RVALID {PRESENT 1 WIDTH 1} RREADY {PRESENT 1 WIDTH 1} WVALID {PRESENT 1 WIDTH 1} WREADY {PRESENT 1 WIDTH 1} AWADDR {PRESENT 1 WIDTH 31} AWLEN {PRESENT 0 WIDTH 8} AWSIZE {PRESENT 0 WIDTH 3} AWBURST {PRESENT 0 WIDTH 2} AWLOCK {PRESENT 0 WIDTH 1} AWCACHE {PRESENT 0 WIDTH 4} AWPROT {PRESENT 1 WIDTH 3} WDATA {PRESENT 1 WIDTH 32} WSTRB {PRESENT 1 WIDTH 4} WLAST {PRESENT 0 WIDTH 1} BRESP {PRESENT 1 WIDTH 2} ARADDR {PRESENT 1 WIDTH 31} ARLEN {PRESENT 0 WIDTH 8} ARSIZE {PRESENT 0 WIDTH 3} ARBURST {PRESENT 0 WIDTH 2} ARLOCK {PRESENT 0 WIDTH 1} ARCACHE {PRESENT 0 WIDTH 4} ARPROT {PRESENT 1 WIDTH 3} RDATA {PRESENT 1 WIDTH 32} RRESP {PRESENT 1 WIDTH 2} RLAST {PRESENT 0 WIDTH 1} AWID {PRESENT 0 WIDTH 0} AWREGION {PRESENT 1 WIDTH 4} AWQOS {PRESENT 1 WIDTH 4} AWUSER {PRESENT 0 WIDTH 0} WID {PRESENT 0 WIDTH 0} WUSER {PRESENT 0 WIDTH 0} BID {PRESENT 0 WIDTH 0} BUSER {PRESENT 0 WIDTH 0} ARID {PRESENT 0 WIDTH 0} ARREGION {PRESENT 1 WIDTH 4} ARQOS {PRESENT 1 WIDTH 4} ARUSER {PRESENT 0 WIDTH 0} RID {PRESENT 0 WIDTH 0} RUSER {PRESENT 0 WIDTH 0}}}} IPI_PROP_COUNT 29} \
   CONFIG.GUI_INTERFACE_NAME {in_0} \
   CONFIG.GUI_INTERFACE_PROTOCOL {none} \
   CONFIG.GUI_SELECT_INTERFACE {0} \
   CONFIG.GUI_SELECT_MODE {slave} \
   CONFIG.GUI_SELECT_VLNV {xilinx.com:interface:axis_rtl:1.0} \
   CONFIG.GUI_SIGNAL_DECOUPLED_0 {true} \
   CONFIG.GUI_SIGNAL_DECOUPLED_1 {true} \
   CONFIG.GUI_SIGNAL_DECOUPLED_2 {false} \
   CONFIG.GUI_SIGNAL_DECOUPLED_3 {false} \
   CONFIG.GUI_SIGNAL_DECOUPLED_4 {false} \
   CONFIG.GUI_SIGNAL_DECOUPLED_5 {false} \
   CONFIG.GUI_SIGNAL_DECOUPLED_6 {false} \
   CONFIG.GUI_SIGNAL_DECOUPLED_7 {false} \
   CONFIG.GUI_SIGNAL_DECOUPLED_8 {false} \
   CONFIG.GUI_SIGNAL_DECOUPLED_9 {false} \
   CONFIG.GUI_SIGNAL_MANAGEMENT_2 {auto} \
   CONFIG.GUI_SIGNAL_PRESENT_0 {true} \
   CONFIG.GUI_SIGNAL_PRESENT_1 {true} \
   CONFIG.GUI_SIGNAL_PRESENT_2 {true} \
   CONFIG.GUI_SIGNAL_PRESENT_3 {true} \
   CONFIG.GUI_SIGNAL_PRESENT_4 {true} \
   CONFIG.GUI_SIGNAL_PRESENT_5 {false} \
   CONFIG.GUI_SIGNAL_PRESENT_6 {false} \
   CONFIG.GUI_SIGNAL_PRESENT_7 {false} \
   CONFIG.GUI_SIGNAL_PRESENT_8 {false} \
   CONFIG.GUI_SIGNAL_PRESENT_9 {false} \
   CONFIG.GUI_SIGNAL_SELECT_0 {TVALID} \
   CONFIG.GUI_SIGNAL_SELECT_1 {TREADY} \
   CONFIG.GUI_SIGNAL_SELECT_2 {TDATA} \
   CONFIG.GUI_SIGNAL_SELECT_3 {TUSER} \
   CONFIG.GUI_SIGNAL_SELECT_4 {TLAST} \
   CONFIG.GUI_SIGNAL_SELECT_5 {TID} \
   CONFIG.GUI_SIGNAL_SELECT_6 {TDEST} \
   CONFIG.GUI_SIGNAL_SELECT_7 {TSTRB} \
   CONFIG.GUI_SIGNAL_SELECT_8 {TKEEP} \
   CONFIG.GUI_SIGNAL_SELECT_9 {-1} \
   CONFIG.GUI_SIGNAL_WIDTH_2 {24} \
   CONFIG.GUI_SIGNAL_WIDTH_5 {0} \
   CONFIG.GUI_SIGNAL_WIDTH_6 {0} \
   CONFIG.GUI_SIGNAL_WIDTH_7 {3} \
   CONFIG.GUI_SIGNAL_WIDTH_8 {3} \
 ] $dfx_decoupler_pr_0

  # Create instance: dfx_decoupler_pr_1, and set properties
  set dfx_decoupler_pr_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:dfx_decoupler:1.0 dfx_decoupler_pr_1 ]
  set_property -dict [ list \
   CONFIG.ALL_PARAMS {INTF {in_0 {ID 0 MODE slave VLNV xilinx.com:interface:axis_rtl:1.0 SIGNALS {TVALID {PRESENT 1 WIDTH 1} TREADY {PRESENT 1 WIDTH 1} TDATA {PRESENT 1 WIDTH 24} TUSER {PRESENT 1 WIDTH 1} TLAST {PRESENT 1 WIDTH 1} TID {PRESENT 0 WIDTH 0} TDEST {PRESENT 0 WIDTH 0} TSTRB {PRESENT 0 WIDTH 3} TKEEP {PRESENT 0 WIDTH 3}}} in_1 {ID 1 MODE slave VLNV xilinx.com:interface:axis_rtl:1.0 SIGNALS {TVALID {PRESENT 1 WIDTH 1} TREADY {PRESENT 1 WIDTH 1} TDATA {PRESENT 1 WIDTH 24} TUSER {PRESENT 1 WIDTH 1} TLAST {PRESENT 1 WIDTH 1} TID {PRESENT 0 WIDTH 0} TDEST {PRESENT 0 WIDTH 0} TSTRB {PRESENT 0 WIDTH 3} TKEEP {PRESENT 0 WIDTH 3}}} out_0 {ID 2 VLNV xilinx.com:interface:axis_rtl:1.0 SIGNALS {TVALID {PRESENT 1 WIDTH 1} TREADY {PRESENT 1 WIDTH 1} TDATA {PRESENT 1 WIDTH 24} TUSER {PRESENT 1 WIDTH 1} TLAST {PRESENT 1 WIDTH 1} TID {PRESENT 1 WIDTH 1} TDEST {PRESENT 1 WIDTH 1} TSTRB {PRESENT 0 WIDTH 3} TKEEP {PRESENT 0 WIDTH 3}}} out_1 {ID 3 VLNV xilinx.com:interface:axis_rtl:1.0 SIGNALS {TVALID {PRESENT 1 WIDTH 1} TREADY {PRESENT 1 WIDTH 1} TDATA {PRESENT 1 WIDTH 24} TUSER {PRESENT 1 WIDTH 1} TLAST {PRESENT 1 WIDTH 1} TID {PRESENT 1 WIDTH 1} TDEST {PRESENT 1 WIDTH 1} TSTRB {PRESENT 0 WIDTH 3} TKEEP {PRESENT 0 WIDTH 3}}} axi_lite0 {ID 4 VLNV xilinx.com:interface:aximm_rtl:1.0 PROTOCOL axi4lite SIGNALS {ARVALID {PRESENT 1 WIDTH 1} ARREADY {PRESENT 1 WIDTH 1} AWVALID {PRESENT 1 WIDTH 1} AWREADY {PRESENT 1 WIDTH 1} BVALID {PRESENT 1 WIDTH 1} BREADY {PRESENT 1 WIDTH 1} RVALID {PRESENT 1 WIDTH 1} RREADY {PRESENT 1 WIDTH 1} WVALID {PRESENT 1 WIDTH 1} WREADY {PRESENT 1 WIDTH 1} AWADDR {PRESENT 1 WIDTH 31} AWLEN {PRESENT 0 WIDTH 8} AWSIZE {PRESENT 0 WIDTH 3} AWBURST {PRESENT 0 WIDTH 2} AWLOCK {PRESENT 0 WIDTH 1} AWCACHE {PRESENT 0 WIDTH 4} AWPROT {PRESENT 1 WIDTH 3} WDATA {PRESENT 1 WIDTH 32} WSTRB {PRESENT 1 WIDTH 4} WLAST {PRESENT 0 WIDTH 1} BRESP {PRESENT 1 WIDTH 2} ARADDR {PRESENT 1 WIDTH 31} ARLEN {PRESENT 0 WIDTH 8} ARSIZE {PRESENT 0 WIDTH 3} ARBURST {PRESENT 0 WIDTH 2} ARLOCK {PRESENT 0 WIDTH 1} ARCACHE {PRESENT 0 WIDTH 4} ARPROT {PRESENT 1 WIDTH 3} RDATA {PRESENT 1 WIDTH 32} RRESP {PRESENT 1 WIDTH 2} RLAST {PRESENT 0 WIDTH 1} AWID {PRESENT 0 WIDTH 0} AWREGION {PRESENT 1 WIDTH 4} AWQOS {PRESENT 1 WIDTH 4} AWUSER {PRESENT 0 WIDTH 0} WID {PRESENT 0 WIDTH 0} WUSER {PRESENT 0 WIDTH 0} BID {PRESENT 0 WIDTH 0} BUSER {PRESENT 0 WIDTH 0} ARID {PRESENT 0 WIDTH 0} ARREGION {PRESENT 1 WIDTH 4} ARQOS {PRESENT 1 WIDTH 4} ARUSER {PRESENT 0 WIDTH 0} RID {PRESENT 0 WIDTH 0} RUSER {PRESENT 0 WIDTH 0}}} axi_lite1 {ID 5 VLNV xilinx.com:interface:aximm_rtl:1.0 PROTOCOL axi4lite SIGNALS {ARVALID {PRESENT 1 WIDTH 1} ARREADY {PRESENT 1 WIDTH 1} AWVALID {PRESENT 1 WIDTH 1} AWREADY {PRESENT 1 WIDTH 1} BVALID {PRESENT 1 WIDTH 1} BREADY {PRESENT 1 WIDTH 1} RVALID {PRESENT 1 WIDTH 1} RREADY {PRESENT 1 WIDTH 1} WVALID {PRESENT 1 WIDTH 1} WREADY {PRESENT 1 WIDTH 1} AWADDR {PRESENT 1 WIDTH 31} AWLEN {PRESENT 0 WIDTH 8} AWSIZE {PRESENT 0 WIDTH 3} AWBURST {PRESENT 0 WIDTH 2} AWLOCK {PRESENT 0 WIDTH 1} AWCACHE {PRESENT 0 WIDTH 4} AWPROT {PRESENT 1 WIDTH 3} WDATA {PRESENT 1 WIDTH 32} WSTRB {PRESENT 1 WIDTH 4} WLAST {PRESENT 0 WIDTH 1} BRESP {PRESENT 1 WIDTH 2} ARADDR {PRESENT 1 WIDTH 31} ARLEN {PRESENT 0 WIDTH 8} ARSIZE {PRESENT 0 WIDTH 3} ARBURST {PRESENT 0 WIDTH 2} ARLOCK {PRESENT 0 WIDTH 1} ARCACHE {PRESENT 0 WIDTH 4} ARPROT {PRESENT 1 WIDTH 3} RDATA {PRESENT 1 WIDTH 32} RRESP {PRESENT 1 WIDTH 2} RLAST {PRESENT 0 WIDTH 1} AWID {PRESENT 0 WIDTH 0} AWREGION {PRESENT 1 WIDTH 4} AWQOS {PRESENT 1 WIDTH 4} AWUSER {PRESENT 0 WIDTH 0} WID {PRESENT 0 WIDTH 0} WUSER {PRESENT 0 WIDTH 0} BID {PRESENT 0 WIDTH 0} BUSER {PRESENT 0 WIDTH 0} ARID {PRESENT 0 WIDTH 0} ARREGION {PRESENT 1 WIDTH 4} ARQOS {PRESENT 1 WIDTH 4} ARUSER {PRESENT 0 WIDTH 0} RID {PRESENT 0 WIDTH 0} RUSER {PRESENT 0 WIDTH 0}}}} IPI_PROP_COUNT 22} \
   CONFIG.GUI_INTERFACE_NAME {in_0} \
   CONFIG.GUI_INTERFACE_PROTOCOL {none} \
   CONFIG.GUI_SELECT_INTERFACE {0} \
   CONFIG.GUI_SELECT_MODE {slave} \
   CONFIG.GUI_SELECT_VLNV {xilinx.com:interface:axis_rtl:1.0} \
   CONFIG.GUI_SIGNAL_DECOUPLED_0 {true} \
   CONFIG.GUI_SIGNAL_DECOUPLED_1 {true} \
   CONFIG.GUI_SIGNAL_DECOUPLED_2 {false} \
   CONFIG.GUI_SIGNAL_DECOUPLED_3 {false} \
   CONFIG.GUI_SIGNAL_DECOUPLED_4 {false} \
   CONFIG.GUI_SIGNAL_DECOUPLED_5 {false} \
   CONFIG.GUI_SIGNAL_DECOUPLED_6 {false} \
   CONFIG.GUI_SIGNAL_DECOUPLED_7 {false} \
   CONFIG.GUI_SIGNAL_DECOUPLED_8 {false} \
   CONFIG.GUI_SIGNAL_DECOUPLED_9 {false} \
   CONFIG.GUI_SIGNAL_PRESENT_0 {true} \
   CONFIG.GUI_SIGNAL_PRESENT_1 {true} \
   CONFIG.GUI_SIGNAL_PRESENT_2 {true} \
   CONFIG.GUI_SIGNAL_PRESENT_3 {true} \
   CONFIG.GUI_SIGNAL_PRESENT_4 {true} \
   CONFIG.GUI_SIGNAL_PRESENT_5 {false} \
   CONFIG.GUI_SIGNAL_PRESENT_6 {false} \
   CONFIG.GUI_SIGNAL_PRESENT_7 {false} \
   CONFIG.GUI_SIGNAL_PRESENT_8 {false} \
   CONFIG.GUI_SIGNAL_PRESENT_9 {false} \
   CONFIG.GUI_SIGNAL_SELECT_0 {TVALID} \
   CONFIG.GUI_SIGNAL_SELECT_1 {TREADY} \
   CONFIG.GUI_SIGNAL_SELECT_2 {TDATA} \
   CONFIG.GUI_SIGNAL_SELECT_3 {TUSER} \
   CONFIG.GUI_SIGNAL_SELECT_4 {TLAST} \
   CONFIG.GUI_SIGNAL_SELECT_5 {TID} \
   CONFIG.GUI_SIGNAL_SELECT_6 {TDEST} \
   CONFIG.GUI_SIGNAL_SELECT_7 {TSTRB} \
   CONFIG.GUI_SIGNAL_SELECT_8 {TKEEP} \
   CONFIG.GUI_SIGNAL_SELECT_9 {-1} \
   CONFIG.GUI_SIGNAL_WIDTH_2 {24} \
   CONFIG.GUI_SIGNAL_WIDTH_5 {0} \
   CONFIG.GUI_SIGNAL_WIDTH_6 {0} \
   CONFIG.GUI_SIGNAL_WIDTH_7 {3} \
   CONFIG.GUI_SIGNAL_WIDTH_8 {3} \
 ] $dfx_decoupler_pr_1

  # Create instance: dfx_decoupler_pr_fork, and set properties
  set dfx_decoupler_pr_fork [ create_bd_cell -type ip -vlnv xilinx.com:ip:dfx_decoupler:1.0 dfx_decoupler_pr_fork ]
  set_property -dict [ list \
   CONFIG.ALL_PARAMS {INTF {in_0 {ID 0 MODE slave VLNV xilinx.com:interface:axis_rtl:1.0 SIGNALS {TVALID {PRESENT 1 WIDTH 1} TREADY {PRESENT 1 WIDTH 1} TDATA {PRESENT 1 WIDTH 24} TUSER {PRESENT 1 WIDTH 1} TLAST {PRESENT 1 WIDTH 1} TID {PRESENT 0 WIDTH 0} TDEST {PRESENT 0 WIDTH 0} TSTRB {PRESENT 0 WIDTH 3} TKEEP {PRESENT 0 WIDTH 3}}} out_0 {ID 1 VLNV xilinx.com:interface:axis_rtl:1.0 SIGNALS {TVALID {PRESENT 1 WIDTH 1} TREADY {PRESENT 1 WIDTH 1} TDATA {PRESENT 1 WIDTH 24} TUSER {PRESENT 1 WIDTH 1} TLAST {PRESENT 1 WIDTH 1} TID {PRESENT 1 WIDTH 1} TDEST {PRESENT 1 WIDTH 1} TSTRB {PRESENT 0 WIDTH 3} TKEEP {PRESENT 0 WIDTH 3}}} out_1 {ID 2 VLNV xilinx.com:interface:axis_rtl:1.0 SIGNALS {TVALID {PRESENT 1 WIDTH 1} TREADY {PRESENT 1 WIDTH 1} TDATA {PRESENT 1 WIDTH 24} TUSER {PRESENT 1 WIDTH 1} TLAST {PRESENT 1 WIDTH 1} TID {PRESENT 1 WIDTH 1} TDEST {PRESENT 1 WIDTH 1} TSTRB {PRESENT 0 WIDTH 3} TKEEP {PRESENT 0 WIDTH 3}}} axi_lite {ID 3 VLNV xilinx.com:interface:aximm_rtl:1.0 PROTOCOL axi4lite SIGNALS {ARVALID {PRESENT 1 WIDTH 1} ARREADY {PRESENT 1 WIDTH 1} AWVALID {PRESENT 1 WIDTH 1} AWREADY {PRESENT 1 WIDTH 1} BVALID {PRESENT 1 WIDTH 1} BREADY {PRESENT 1 WIDTH 1} RVALID {PRESENT 1 WIDTH 1} RREADY {PRESENT 1 WIDTH 1} WVALID {PRESENT 1 WIDTH 1} WREADY {PRESENT 1 WIDTH 1} AWADDR {PRESENT 1 WIDTH 31} AWLEN {PRESENT 0 WIDTH 8} AWSIZE {PRESENT 0 WIDTH 3} AWBURST {PRESENT 0 WIDTH 2} AWLOCK {PRESENT 0 WIDTH 1} AWCACHE {PRESENT 0 WIDTH 4} AWPROT {PRESENT 1 WIDTH 3} WDATA {PRESENT 1 WIDTH 32} WSTRB {PRESENT 1 WIDTH 4} WLAST {PRESENT 0 WIDTH 1} BRESP {PRESENT 1 WIDTH 2} ARADDR {PRESENT 1 WIDTH 31} ARLEN {PRESENT 0 WIDTH 8} ARSIZE {PRESENT 0 WIDTH 3} ARBURST {PRESENT 0 WIDTH 2} ARLOCK {PRESENT 0 WIDTH 1} ARCACHE {PRESENT 0 WIDTH 4} ARPROT {PRESENT 1 WIDTH 3} RDATA {PRESENT 1 WIDTH 32} RRESP {PRESENT 1 WIDTH 2} RLAST {PRESENT 0 WIDTH 1} AWID {PRESENT 0 WIDTH 0} AWREGION {PRESENT 1 WIDTH 4} AWQOS {PRESENT 1 WIDTH 4} AWUSER {PRESENT 0 WIDTH 0} WID {PRESENT 0 WIDTH 0} WUSER {PRESENT 0 WIDTH 0} BID {PRESENT 0 WIDTH 0} BUSER {PRESENT 0 WIDTH 0} ARID {PRESENT 0 WIDTH 0} ARREGION {PRESENT 1 WIDTH 4} ARQOS {PRESENT 1 WIDTH 4} ARUSER {PRESENT 0 WIDTH 0} RID {PRESENT 0 WIDTH 0} RUSER {PRESENT 0 WIDTH 0}}}} IPI_PROP_COUNT 17} \
   CONFIG.GUI_INTERFACE_NAME {in_0} \
   CONFIG.GUI_INTERFACE_PROTOCOL {none} \
   CONFIG.GUI_SELECT_INTERFACE {0} \
   CONFIG.GUI_SELECT_MODE {slave} \
   CONFIG.GUI_SELECT_VLNV {xilinx.com:interface:axis_rtl:1.0} \
   CONFIG.GUI_SIGNAL_DECOUPLED_0 {true} \
   CONFIG.GUI_SIGNAL_DECOUPLED_1 {true} \
   CONFIG.GUI_SIGNAL_DECOUPLED_2 {false} \
   CONFIG.GUI_SIGNAL_DECOUPLED_3 {false} \
   CONFIG.GUI_SIGNAL_DECOUPLED_4 {false} \
   CONFIG.GUI_SIGNAL_DECOUPLED_5 {false} \
   CONFIG.GUI_SIGNAL_DECOUPLED_6 {false} \
   CONFIG.GUI_SIGNAL_DECOUPLED_7 {false} \
   CONFIG.GUI_SIGNAL_DECOUPLED_8 {false} \
   CONFIG.GUI_SIGNAL_DECOUPLED_9 {false} \
   CONFIG.GUI_SIGNAL_PRESENT_0 {true} \
   CONFIG.GUI_SIGNAL_PRESENT_1 {true} \
   CONFIG.GUI_SIGNAL_PRESENT_2 {true} \
   CONFIG.GUI_SIGNAL_PRESENT_3 {true} \
   CONFIG.GUI_SIGNAL_PRESENT_4 {true} \
   CONFIG.GUI_SIGNAL_PRESENT_5 {false} \
   CONFIG.GUI_SIGNAL_PRESENT_6 {false} \
   CONFIG.GUI_SIGNAL_PRESENT_7 {false} \
   CONFIG.GUI_SIGNAL_PRESENT_8 {false} \
   CONFIG.GUI_SIGNAL_PRESENT_9 {false} \
   CONFIG.GUI_SIGNAL_SELECT_0 {TVALID} \
   CONFIG.GUI_SIGNAL_SELECT_1 {TREADY} \
   CONFIG.GUI_SIGNAL_SELECT_2 {TDATA} \
   CONFIG.GUI_SIGNAL_SELECT_3 {TUSER} \
   CONFIG.GUI_SIGNAL_SELECT_4 {TLAST} \
   CONFIG.GUI_SIGNAL_SELECT_5 {TID} \
   CONFIG.GUI_SIGNAL_SELECT_6 {TDEST} \
   CONFIG.GUI_SIGNAL_SELECT_7 {TSTRB} \
   CONFIG.GUI_SIGNAL_SELECT_8 {TKEEP} \
   CONFIG.GUI_SIGNAL_SELECT_9 {-1} \
   CONFIG.GUI_SIGNAL_WIDTH_2 {24} \
   CONFIG.GUI_SIGNAL_WIDTH_7 {3} \
   CONFIG.GUI_SIGNAL_WIDTH_8 {3} \
 ] $dfx_decoupler_pr_fork

  # Create instance: dfx_decoupler_pr_join, and set properties
  set dfx_decoupler_pr_join [ create_bd_cell -type ip -vlnv xilinx.com:ip:dfx_decoupler:1.0 dfx_decoupler_pr_join ]
  set_property -dict [ list \
   CONFIG.ALL_PARAMS {INTF {in_0 {ID 0 MODE slave VLNV xilinx.com:interface:axis_rtl:1.0 SIGNALS {TVALID {PRESENT 1 WIDTH 1} TREADY {PRESENT 1 WIDTH 1} TDATA {PRESENT 1 WIDTH 24} TUSER {PRESENT 1 WIDTH 1} TLAST {PRESENT 1 WIDTH 1} TID {PRESENT 0 WIDTH 0} TDEST {PRESENT 0 WIDTH 0} TSTRB {PRESENT 0 WIDTH 3} TKEEP {PRESENT 0 WIDTH 3}}} in_1 {ID 1 MODE slave VLNV xilinx.com:interface:axis_rtl:1.0 SIGNALS {TVALID {PRESENT 1 WIDTH 1} TREADY {PRESENT 1 WIDTH 1} TDATA {PRESENT 1 WIDTH 24} TUSER {PRESENT 1 WIDTH 1} TLAST {PRESENT 1 WIDTH 1} TID {PRESENT 0 WIDTH 0} TDEST {PRESENT 0 WIDTH 0} TSTRB {PRESENT 0 WIDTH 3} TKEEP {PRESENT 0 WIDTH 3}}} out_0 {ID 2 VLNV xilinx.com:interface:axis_rtl:1.0 SIGNALS {TVALID {PRESENT 1 WIDTH 1} TREADY {PRESENT 1 WIDTH 1} TDATA {PRESENT 1 WIDTH 24} TUSER {PRESENT 1 WIDTH 1} TLAST {PRESENT 1 WIDTH 1} TID {PRESENT 1 WIDTH 1} TDEST {PRESENT 1 WIDTH 1} TSTRB {PRESENT 0 WIDTH 3} TKEEP {PRESENT 0 WIDTH 3}}} axi_lite {ID 3 VLNV xilinx.com:interface:aximm_rtl:1.0 PROTOCOL axi4lite SIGNALS {ARVALID {PRESENT 1 WIDTH 1} ARREADY {PRESENT 1 WIDTH 1} AWVALID {PRESENT 1 WIDTH 1} AWREADY {PRESENT 1 WIDTH 1} BVALID {PRESENT 1 WIDTH 1} BREADY {PRESENT 1 WIDTH 1} RVALID {PRESENT 1 WIDTH 1} RREADY {PRESENT 1 WIDTH 1} WVALID {PRESENT 1 WIDTH 1} WREADY {PRESENT 1 WIDTH 1} AWADDR {PRESENT 1 WIDTH 31} AWLEN {PRESENT 0 WIDTH 8} AWSIZE {PRESENT 0 WIDTH 3} AWBURST {PRESENT 0 WIDTH 2} AWLOCK {PRESENT 0 WIDTH 1} AWCACHE {PRESENT 0 WIDTH 4} AWPROT {PRESENT 1 WIDTH 3} WDATA {PRESENT 1 WIDTH 32} WSTRB {PRESENT 1 WIDTH 4} WLAST {PRESENT 0 WIDTH 1} BRESP {PRESENT 1 WIDTH 2} ARADDR {PRESENT 1 WIDTH 31} ARLEN {PRESENT 0 WIDTH 8} ARSIZE {PRESENT 0 WIDTH 3} ARBURST {PRESENT 0 WIDTH 2} ARLOCK {PRESENT 0 WIDTH 1} ARCACHE {PRESENT 0 WIDTH 4} ARPROT {PRESENT 1 WIDTH 3} RDATA {PRESENT 1 WIDTH 32} RRESP {PRESENT 1 WIDTH 2} RLAST {PRESENT 0 WIDTH 1} AWID {PRESENT 0 WIDTH 0} AWREGION {PRESENT 1 WIDTH 4} AWQOS {PRESENT 1 WIDTH 4} AWUSER {PRESENT 0 WIDTH 0} WID {PRESENT 0 WIDTH 0} WUSER {PRESENT 0 WIDTH 0} BID {PRESENT 0 WIDTH 0} BUSER {PRESENT 0 WIDTH 0} ARID {PRESENT 0 WIDTH 0} ARREGION {PRESENT 1 WIDTH 4} ARQOS {PRESENT 1 WIDTH 4} ARUSER {PRESENT 0 WIDTH 0} RID {PRESENT 0 WIDTH 0} RUSER {PRESENT 0 WIDTH 0}}}} IPI_PROP_COUNT 16} \
   CONFIG.GUI_INTERFACE_NAME {in_0} \
   CONFIG.GUI_INTERFACE_PROTOCOL {none} \
   CONFIG.GUI_SELECT_INTERFACE {0} \
   CONFIG.GUI_SELECT_MODE {slave} \
   CONFIG.GUI_SELECT_VLNV {xilinx.com:interface:axis_rtl:1.0} \
   CONFIG.GUI_SIGNAL_DECOUPLED_0 {true} \
   CONFIG.GUI_SIGNAL_DECOUPLED_1 {true} \
   CONFIG.GUI_SIGNAL_DECOUPLED_2 {false} \
   CONFIG.GUI_SIGNAL_DECOUPLED_3 {false} \
   CONFIG.GUI_SIGNAL_DECOUPLED_4 {false} \
   CONFIG.GUI_SIGNAL_DECOUPLED_5 {false} \
   CONFIG.GUI_SIGNAL_DECOUPLED_6 {false} \
   CONFIG.GUI_SIGNAL_DECOUPLED_7 {false} \
   CONFIG.GUI_SIGNAL_DECOUPLED_8 {false} \
   CONFIG.GUI_SIGNAL_DECOUPLED_9 {false} \
   CONFIG.GUI_SIGNAL_PRESENT_0 {true} \
   CONFIG.GUI_SIGNAL_PRESENT_1 {true} \
   CONFIG.GUI_SIGNAL_PRESENT_2 {true} \
   CONFIG.GUI_SIGNAL_PRESENT_3 {true} \
   CONFIG.GUI_SIGNAL_PRESENT_4 {true} \
   CONFIG.GUI_SIGNAL_PRESENT_5 {false} \
   CONFIG.GUI_SIGNAL_PRESENT_6 {false} \
   CONFIG.GUI_SIGNAL_PRESENT_7 {false} \
   CONFIG.GUI_SIGNAL_PRESENT_8 {false} \
   CONFIG.GUI_SIGNAL_PRESENT_9 {false} \
   CONFIG.GUI_SIGNAL_SELECT_0 {TVALID} \
   CONFIG.GUI_SIGNAL_SELECT_1 {TREADY} \
   CONFIG.GUI_SIGNAL_SELECT_2 {TDATA} \
   CONFIG.GUI_SIGNAL_SELECT_3 {TUSER} \
   CONFIG.GUI_SIGNAL_SELECT_4 {TLAST} \
   CONFIG.GUI_SIGNAL_SELECT_5 {TID} \
   CONFIG.GUI_SIGNAL_SELECT_6 {TDEST} \
   CONFIG.GUI_SIGNAL_SELECT_7 {TSTRB} \
   CONFIG.GUI_SIGNAL_SELECT_8 {TKEEP} \
   CONFIG.GUI_SIGNAL_SELECT_9 {-1} \
   CONFIG.GUI_SIGNAL_WIDTH_2 {24} \
   CONFIG.GUI_SIGNAL_WIDTH_7 {3} \
   CONFIG.GUI_SIGNAL_WIDTH_8 {3} \
 ] $dfx_decoupler_pr_join

  # Create instance: pr_0_in0, and set properties
  set pr_0_in0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_register_slice:1.1 pr_0_in0 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {1} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.REG_CONFIG {8} \
   CONFIG.TDATA_NUM_BYTES {3} \
   CONFIG.TUSER_WIDTH {1} \
 ] $pr_0_in0

  # Create instance: pr_0_in1, and set properties
  set pr_0_in1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_register_slice:1.1 pr_0_in1 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {1} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.REG_CONFIG {8} \
   CONFIG.TDATA_NUM_BYTES {3} \
   CONFIG.TUSER_WIDTH {1} \
 ] $pr_0_in1

  # Create instance: pr_0_out0, and set properties
  set pr_0_out0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_register_slice:1.1 pr_0_out0 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {1} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.REG_CONFIG {8} \
   CONFIG.TDATA_NUM_BYTES {3} \
   CONFIG.TUSER_WIDTH {1} \
 ] $pr_0_out0

  # Create instance: pr_0_out1, and set properties
  set pr_0_out1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_register_slice:1.1 pr_0_out1 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {1} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.REG_CONFIG {8} \
   CONFIG.TDATA_NUM_BYTES {3} \
   CONFIG.TUSER_WIDTH {1} \
 ] $pr_0_out1

  # Create instance: pr_1_in0, and set properties
  set pr_1_in0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_register_slice:1.1 pr_1_in0 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {1} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.REG_CONFIG {8} \
   CONFIG.TDATA_NUM_BYTES {3} \
   CONFIG.TUSER_WIDTH {1} \
 ] $pr_1_in0

  # Create instance: pr_1_in1, and set properties
  set pr_1_in1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_register_slice:1.1 pr_1_in1 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {1} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.REG_CONFIG {8} \
   CONFIG.TDATA_NUM_BYTES {3} \
   CONFIG.TUSER_WIDTH {1} \
 ] $pr_1_in1

  # Create instance: pr_1_out0, and set properties
  set pr_1_out0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_register_slice:1.1 pr_1_out0 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {1} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.REG_CONFIG {8} \
   CONFIG.TDATA_NUM_BYTES {3} \
   CONFIG.TUSER_WIDTH {1} \
 ] $pr_1_out0

  # Create instance: pr_1_out1, and set properties
  set pr_1_out1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_register_slice:1.1 pr_1_out1 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {1} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.REG_CONFIG {8} \
   CONFIG.TDATA_NUM_BYTES {3} \
   CONFIG.TUSER_WIDTH {1} \
 ] $pr_1_out1

  # Create instance: pr_fork_in0, and set properties
  set pr_fork_in0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_register_slice:1.1 pr_fork_in0 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {1} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.REG_CONFIG {8} \
   CONFIG.TDATA_NUM_BYTES {3} \
   CONFIG.TUSER_WIDTH {1} \
 ] $pr_fork_in0

  # Create instance: pr_fork_out0, and set properties
  set pr_fork_out0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_register_slice:1.1 pr_fork_out0 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {1} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.REG_CONFIG {8} \
   CONFIG.TDATA_NUM_BYTES {3} \
   CONFIG.TUSER_WIDTH {1} \
 ] $pr_fork_out0

  # Create instance: pr_fork_out1, and set properties
  set pr_fork_out1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_register_slice:1.1 pr_fork_out1 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {1} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.REG_CONFIG {8} \
   CONFIG.TDATA_NUM_BYTES {3} \
   CONFIG.TUSER_WIDTH {1} \
 ] $pr_fork_out1

  # Create instance: pr_join_fifo_in_0, and set properties
  set pr_join_fifo_in_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_data_fifo:2.0 pr_join_fifo_in_0 ]
  set_property -dict [ list \
   CONFIG.FIFO_DEPTH {16384} \
   CONFIG.FIFO_MEMORY_TYPE {block} \
   CONFIG.HAS_TLAST {1} \
   CONFIG.TDATA_NUM_BYTES {3} \
   CONFIG.TUSER_WIDTH {1} \
 ] $pr_join_fifo_in_0

  # Create instance: pr_join_fifo_in_1, and set properties
  set pr_join_fifo_in_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_data_fifo:2.0 pr_join_fifo_in_1 ]
  set_property -dict [ list \
   CONFIG.FIFO_DEPTH {16384} \
   CONFIG.FIFO_MEMORY_TYPE {block} \
   CONFIG.HAS_TLAST {1} \
   CONFIG.TDATA_NUM_BYTES {3} \
   CONFIG.TUSER_WIDTH {1} \
 ] $pr_join_fifo_in_1

  # Create instance: pr_join_in0, and set properties
  set pr_join_in0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_register_slice:1.1 pr_join_in0 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {1} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.REG_CONFIG {8} \
   CONFIG.TDATA_NUM_BYTES {3} \
   CONFIG.TUSER_WIDTH {1} \
 ] $pr_join_in0

  # Create instance: pr_join_in1, and set properties
  set pr_join_in1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_register_slice:1.1 pr_join_in1 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {1} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.REG_CONFIG {8} \
   CONFIG.TDATA_NUM_BYTES {3} \
   CONFIG.TUSER_WIDTH {1} \
 ] $pr_join_in1

  # Create instance: pr_join_out0, and set properties
  set pr_join_out0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_register_slice:1.1 pr_join_out0 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {1} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.REG_CONFIG {8} \
   CONFIG.TDATA_NUM_BYTES {3} \
   CONFIG.TUSER_WIDTH {1} \
 ] $pr_join_out0

  # Create instance: status_xlconcat, and set properties
  set status_xlconcat [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 status_xlconcat ]
  set_property -dict [ list \
   CONFIG.NUM_PORTS {8} \
 ] $status_xlconcat

  # Create instance: xlslice_pr_0, and set properties
  set xlslice_pr_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_pr_0 ]
  set_property -dict [ list \
   CONFIG.DIN_WIDTH {8} \
 ] $xlslice_pr_0

  # Create instance: xlslice_pr_1, and set properties
  set xlslice_pr_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_pr_1 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {1} \
   CONFIG.DIN_TO {1} \
   CONFIG.DIN_WIDTH {8} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_pr_1

  # Create instance: xlslice_pr_fork, and set properties
  set xlslice_pr_fork [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_pr_fork ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {3} \
   CONFIG.DIN_TO {3} \
   CONFIG.DIN_WIDTH {8} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_pr_fork

  # Create instance: xlslice_pr_join, and set properties
  set xlslice_pr_join [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_pr_join ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {2} \
   CONFIG.DIN_TO {2} \
   CONFIG.DIN_WIDTH {8} \
   CONFIG.DOUT_WIDTH {1} \
 ] $xlslice_pr_join

  # Create interface connections
  connect_bd_intf_net -intf_net dfx_decoupler_0_rp_in_0 [get_bd_intf_pins dfx_decoupler_pr_0/rp_in_0] [get_bd_intf_pins pr_0_in0/S_AXIS]
  connect_bd_intf_net -intf_net dfx_decoupler_0_rp_in_1 [get_bd_intf_pins dfx_decoupler_pr_0/rp_in_1] [get_bd_intf_pins pr_0_in1/S_AXIS]
  connect_bd_intf_net -intf_net dfx_decoupler_0_s_out_0 [get_bd_intf_pins m_axis_dfx_pr_0_0] [get_bd_intf_pins dfx_decoupler_pr_0/s_out_0]
  connect_bd_intf_net -intf_net dfx_decoupler_0_s_out_1 [get_bd_intf_pins m_axis_dfx_pr_0_1] [get_bd_intf_pins dfx_decoupler_pr_0/s_out_1]
  connect_bd_intf_net -intf_net dfx_decoupler_1_rp_in_0 [get_bd_intf_pins dfx_decoupler_pr_1/rp_in_0] [get_bd_intf_pins pr_1_in0/S_AXIS]
  connect_bd_intf_net -intf_net dfx_decoupler_1_rp_in_1 [get_bd_intf_pins dfx_decoupler_pr_1/rp_in_1] [get_bd_intf_pins pr_1_in1/S_AXIS]
  connect_bd_intf_net -intf_net dfx_decoupler_1_s_out_0 [get_bd_intf_pins m_axis_dfx_pr_1_0] [get_bd_intf_pins dfx_decoupler_pr_1/s_out_0]
  connect_bd_intf_net -intf_net dfx_decoupler_1_s_out_1 [get_bd_intf_pins m_axis_dfx_pr_1_1] [get_bd_intf_pins dfx_decoupler_pr_1/s_out_1]
  connect_bd_intf_net -intf_net dfx_decoupler_2_rp_in_0 [get_bd_intf_pins dfx_decoupler_pr_join/rp_in_0] [get_bd_intf_pins pr_join_in0/S_AXIS]
  connect_bd_intf_net -intf_net dfx_decoupler_2_rp_in_1 [get_bd_intf_pins dfx_decoupler_pr_join/rp_in_1] [get_bd_intf_pins pr_join_in1/S_AXIS]
  connect_bd_intf_net -intf_net dfx_decoupler_2_s_axi_lite [get_bd_intf_pins s_axi_pr_join] [get_bd_intf_pins dfx_decoupler_pr_join/s_axi_lite]
  connect_bd_intf_net -intf_net dfx_decoupler_2_s_out_0 [get_bd_intf_pins m_axis_dfx_pr_join] [get_bd_intf_pins dfx_decoupler_pr_join/s_out_0]
  connect_bd_intf_net -intf_net dfx_decoupler_3_rp_in_0 [get_bd_intf_pins dfx_decoupler_pr_fork/rp_in_0] [get_bd_intf_pins pr_fork_in0/S_AXIS]
  connect_bd_intf_net -intf_net dfx_decoupler_3_s_axi_lite [get_bd_intf_pins s_axi_pr_fork] [get_bd_intf_pins dfx_decoupler_pr_fork/s_axi_lite]
  connect_bd_intf_net -intf_net dfx_decoupler_3_s_out_0 [get_bd_intf_pins m_axis_dfx_pr_fork_0] [get_bd_intf_pins dfx_decoupler_pr_fork/s_out_0]
  connect_bd_intf_net -intf_net dfx_decoupler_3_s_out_1 [get_bd_intf_pins m_axis_dfx_pr_fork_1] [get_bd_intf_pins dfx_decoupler_pr_fork/s_out_1]
  connect_bd_intf_net -intf_net dfx_decoupler_pr_0_s_axi_lite0 [get_bd_intf_pins s_axi_pr_0_0] [get_bd_intf_pins dfx_decoupler_pr_0/s_axi_lite0]
  connect_bd_intf_net -intf_net dfx_decoupler_pr_0_s_axi_lite1 [get_bd_intf_pins s_axi_pr_0_1] [get_bd_intf_pins dfx_decoupler_pr_0/s_axi_lite1]
  connect_bd_intf_net -intf_net dfx_decoupler_pr_1_s_axi_lite0 [get_bd_intf_pins s_axi_pr_1_0] [get_bd_intf_pins dfx_decoupler_pr_1/s_axi_lite0]
  connect_bd_intf_net -intf_net dfx_decoupler_pr_1_s_axi_lite1 [get_bd_intf_pins s_axi_pr_1_1] [get_bd_intf_pins dfx_decoupler_pr_1/s_axi_lite1]
  connect_bd_intf_net -intf_net pr_0_in0_M_AXIS [get_bd_intf_pins m_axis_pr_0_0] [get_bd_intf_pins pr_0_in0/M_AXIS]
  connect_bd_intf_net -intf_net pr_0_in1_M_AXIS [get_bd_intf_pins m_axis_pr_0_1] [get_bd_intf_pins pr_0_in1/M_AXIS]
  connect_bd_intf_net -intf_net pr_0_out0_M_AXIS [get_bd_intf_pins dfx_decoupler_pr_0/rp_out_0] [get_bd_intf_pins pr_0_out0/M_AXIS]
  connect_bd_intf_net -intf_net pr_0_out1_M_AXIS [get_bd_intf_pins dfx_decoupler_pr_0/rp_out_1] [get_bd_intf_pins pr_0_out1/M_AXIS]
  connect_bd_intf_net -intf_net pr_0_stream_out0 [get_bd_intf_pins s_axis_pr_0_0] [get_bd_intf_pins pr_0_out0/S_AXIS]
  connect_bd_intf_net -intf_net pr_0_stream_out1 [get_bd_intf_pins s_axis_pr_0_1] [get_bd_intf_pins pr_0_out1/S_AXIS]
  connect_bd_intf_net -intf_net pr_1_in0_M_AXIS [get_bd_intf_pins m_axis_pr_1_0] [get_bd_intf_pins pr_1_in0/M_AXIS]
  connect_bd_intf_net -intf_net pr_1_in1_M_AXIS [get_bd_intf_pins m_axis_pr_1_1] [get_bd_intf_pins pr_1_in1/M_AXIS]
  connect_bd_intf_net -intf_net pr_1_out0_M_AXIS [get_bd_intf_pins dfx_decoupler_pr_1/rp_out_0] [get_bd_intf_pins pr_1_out0/M_AXIS]
  connect_bd_intf_net -intf_net pr_1_out1_M_AXIS [get_bd_intf_pins dfx_decoupler_pr_1/rp_out_1] [get_bd_intf_pins pr_1_out1/M_AXIS]
  connect_bd_intf_net -intf_net pr_1_stream_out0 [get_bd_intf_pins s_axis_pr_1_0] [get_bd_intf_pins pr_1_out0/S_AXIS]
  connect_bd_intf_net -intf_net pr_1_stream_out1 [get_bd_intf_pins s_axis_pr_1_1] [get_bd_intf_pins pr_1_out1/S_AXIS]
  connect_bd_intf_net -intf_net pr_decoupler_in_regs_M_AXIS [get_bd_intf_pins m_axis_pr_join_0] [get_bd_intf_pins pr_join_in0/M_AXIS]
  connect_bd_intf_net -intf_net pr_decoupler_in_regs_M_AXIS6 [get_bd_intf_pins m_axis_pr_join_1] [get_bd_intf_pins pr_join_in1/M_AXIS]
  connect_bd_intf_net -intf_net pr_fork_in0_M_AXIS [get_bd_intf_pins m_axis_pr_fork] [get_bd_intf_pins pr_fork_in0/M_AXIS]
  connect_bd_intf_net -intf_net pr_fork_out0_M_AXIS [get_bd_intf_pins dfx_decoupler_pr_fork/rp_out_0] [get_bd_intf_pins pr_fork_out0/M_AXIS]
  connect_bd_intf_net -intf_net pr_fork_out1_M_AXIS [get_bd_intf_pins dfx_decoupler_pr_fork/rp_out_1] [get_bd_intf_pins pr_fork_out1/M_AXIS]
  connect_bd_intf_net -intf_net pr_fork_stream_out0 [get_bd_intf_pins s_pr_fork_0] [get_bd_intf_pins pr_fork_out0/S_AXIS]
  connect_bd_intf_net -intf_net pr_fork_stream_out1 [get_bd_intf_pins s_pr_fork_1] [get_bd_intf_pins pr_fork_out1/S_AXIS]
  connect_bd_intf_net -intf_net pr_join_fifo_in_0_M_AXIS [get_bd_intf_pins dfx_decoupler_pr_join/s_in_0] [get_bd_intf_pins pr_join_fifo_in_0/M_AXIS]
  connect_bd_intf_net -intf_net pr_join_fifo_in_1_M_AXIS [get_bd_intf_pins dfx_decoupler_pr_join/s_in_1] [get_bd_intf_pins pr_join_fifo_in_1/M_AXIS]
  connect_bd_intf_net -intf_net pr_join_out0_M_AXIS [get_bd_intf_pins dfx_decoupler_pr_join/rp_out_0] [get_bd_intf_pins pr_join_out0/M_AXIS]
  connect_bd_intf_net -intf_net pr_join_stream_out [get_bd_intf_pins s_axis_pr_join] [get_bd_intf_pins pr_join_out0/S_AXIS]
  connect_bd_intf_net -intf_net s_in_5_1 [get_bd_intf_pins s_axis_dfx_pr_join_0] [get_bd_intf_pins pr_join_fifo_in_0/S_AXIS]
  connect_bd_intf_net -intf_net s_in_6_1 [get_bd_intf_pins s_axis_dfx_pr_join_1] [get_bd_intf_pins pr_join_fifo_in_1/S_AXIS]
  connect_bd_intf_net -intf_net video_M12_AXIS [get_bd_intf_pins s_axis_dfx_pr_0_0] [get_bd_intf_pins dfx_decoupler_pr_0/s_in_0]
  connect_bd_intf_net -intf_net video_M13_AXIS [get_bd_intf_pins s_axis_dfx_pr_0_1] [get_bd_intf_pins dfx_decoupler_pr_0/s_in_1]
  connect_bd_intf_net -intf_net video_M13_AXIS1 [get_bd_intf_pins s_axis_dfx_pr_fork] [get_bd_intf_pins dfx_decoupler_pr_fork/s_in_0]
  connect_bd_intf_net -intf_net video_M14_AXIS [get_bd_intf_pins s_axis_dfx_pr_1_0] [get_bd_intf_pins dfx_decoupler_pr_1/s_in_0]
  connect_bd_intf_net -intf_net video_M15_AXIS [get_bd_intf_pins s_axis_dfx_pr_1_1] [get_bd_intf_pins dfx_decoupler_pr_1/s_in_1]
  connect_bd_intf_net -intf_net video_M16_AXI [get_bd_intf_pins m_axi_dfx_pr_0_0] [get_bd_intf_pins dfx_decoupler_pr_0/rp_axi_lite0]
  connect_bd_intf_net -intf_net video_M17_AXI [get_bd_intf_pins m_axi_dfx_pr_1_0] [get_bd_intf_pins dfx_decoupler_pr_1/rp_axi_lite0]
  connect_bd_intf_net -intf_net video_M18_AXI [get_bd_intf_pins m_axi_dfx_pr_join] [get_bd_intf_pins dfx_decoupler_pr_join/rp_axi_lite]
  connect_bd_intf_net -intf_net video_M19_AXI [get_bd_intf_pins m_axi_dfx_pr_fork] [get_bd_intf_pins dfx_decoupler_pr_fork/rp_axi_lite]
  connect_bd_intf_net -intf_net video_M21_AXI [get_bd_intf_pins m_axi_dfx_pr_0_1] [get_bd_intf_pins dfx_decoupler_pr_0/rp_axi_lite1]
  connect_bd_intf_net -intf_net video_M22_AXI [get_bd_intf_pins m_axi_dfx_pr_1_1] [get_bd_intf_pins dfx_decoupler_pr_1/rp_axi_lite1]

  # Create port connections
  connect_bd_net -net dfx_decoupler_0_decouple_status [get_bd_pins dfx_decoupler_pr_0/decouple_status] [get_bd_pins status_xlconcat/In4]
  connect_bd_net -net dfx_decoupler_1_decouple_status [get_bd_pins dfx_decoupler_pr_1/decouple_status] [get_bd_pins status_xlconcat/In5]
  connect_bd_net -net dfx_decoupler_2_decouple_status [get_bd_pins dfx_decoupler_pr_join/decouple_status] [get_bd_pins status_xlconcat/In6]
  connect_bd_net -net dfx_decoupler_3_decouple_status [get_bd_pins dfx_decoupler_pr_fork/decouple_status] [get_bd_pins status_xlconcat/In7]
  connect_bd_net -net peripheral_aresetn [get_bd_pins periph_resetn_clk142M] [get_bd_pins pr_0_in0/aresetn] [get_bd_pins pr_0_in1/aresetn] [get_bd_pins pr_0_out0/aresetn] [get_bd_pins pr_0_out1/aresetn] [get_bd_pins pr_1_in0/aresetn] [get_bd_pins pr_1_in1/aresetn] [get_bd_pins pr_1_out0/aresetn] [get_bd_pins pr_1_out1/aresetn] [get_bd_pins pr_fork_in0/aresetn] [get_bd_pins pr_fork_out0/aresetn] [get_bd_pins pr_fork_out1/aresetn] [get_bd_pins pr_join_fifo_in_0/s_axis_aresetn] [get_bd_pins pr_join_fifo_in_1/s_axis_aresetn] [get_bd_pins pr_join_in0/aresetn] [get_bd_pins pr_join_in1/aresetn] [get_bd_pins pr_join_out0/aresetn]
  connect_bd_net -net ps7_0_FCLK_CLK1 [get_bd_pins clk_142M] [get_bd_pins pr_0_in0/aclk] [get_bd_pins pr_0_in1/aclk] [get_bd_pins pr_0_out0/aclk] [get_bd_pins pr_0_out1/aclk] [get_bd_pins pr_1_in0/aclk] [get_bd_pins pr_1_in1/aclk] [get_bd_pins pr_1_out0/aclk] [get_bd_pins pr_1_out1/aclk] [get_bd_pins pr_fork_in0/aclk] [get_bd_pins pr_fork_out0/aclk] [get_bd_pins pr_fork_out1/aclk] [get_bd_pins pr_join_fifo_in_0/s_axis_aclk] [get_bd_pins pr_join_fifo_in_1/s_axis_aclk] [get_bd_pins pr_join_in0/aclk] [get_bd_pins pr_join_in1/aclk] [get_bd_pins pr_join_out0/aclk]
  connect_bd_net -net ps7_0_GPIO_O [get_bd_pins dfx_decouple] [get_bd_pins xlslice_pr_0/Din] [get_bd_pins xlslice_pr_1/Din] [get_bd_pins xlslice_pr_fork/Din] [get_bd_pins xlslice_pr_join/Din]
  connect_bd_net -net status_xlconcat_dout [get_bd_pins dfx_status] [get_bd_pins status_xlconcat/dout]
  connect_bd_net -net xlslice_pr_0_Dout [get_bd_pins dfx_decoupler_pr_0/decouple] [get_bd_pins xlslice_pr_0/Dout]
  connect_bd_net -net xlslice_pr_1_Dout [get_bd_pins dfx_decoupler_pr_1/decouple] [get_bd_pins xlslice_pr_1/Dout]
  connect_bd_net -net xlslice_pr_fork_Dout [get_bd_pins dfx_decoupler_pr_fork/decouple] [get_bd_pins xlslice_pr_fork/Dout]
  connect_bd_net -net xlslice_pr_join_Dout [get_bd_pins dfx_decoupler_pr_join/decouple] [get_bd_pins xlslice_pr_join/Dout]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: video
proc create_hier_cell_video { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2092 -severity "ERROR" "create_hier_cell_video() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:iic_rtl:1.0 DDC

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M01_AXIS

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:aximm_rtl:1.0 M_AXI

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS01

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 S00_AXILite

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 S00_AXILite1

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S00_AXIS

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 S01_AXILite

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 S01_AXILite1

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S01_AXIS

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 S02_AXILite

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 S02_AXILite1

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 S03_AXILite

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 S03_AXILite1

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 S04_AXILite

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 S_AXI_LITE

  create_bd_intf_pin -mode Slave -vlnv digilentinc.com:interface:tmds_rtl:1.0 TMDS_in

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:hdmi_rtl:2.0 hdmi_tx


  # Create pins
  create_bd_pin -dir I -type rst FCLK_RESET0_N
  create_bd_pin -dir I -type clk clk_100M
  create_bd_pin -dir I clk_142M
  create_bd_pin -dir I -type clk clk_200M
  create_bd_pin -dir O -from 0 -to 0 hdmi_in_hpd
  create_bd_pin -dir O -type intr hdmi_in_hpd_irq
  create_bd_pin -dir O -from 0 -to 0 hdmi_out_hpd
  create_bd_pin -dir O -type intr hdmi_out_hpd_irq
  create_bd_pin -dir I -type rst interconnect_resetn_clk142M
  create_bd_pin -dir O -type intr mm2s_introut
  create_bd_pin -dir I -type rst periph_reset_clk100M
  create_bd_pin -dir I -type rst periph_resetn_clk100M
  create_bd_pin -dir I -type rst periph_resetn_clk142M
  create_bd_pin -dir O -type intr s2mm_introut
  create_bd_pin -dir O -type intr vtc_in_irq
  create_bd_pin -dir O -type intr vtc_out_irq

  # Create instance: axi_mem_intercon, and set properties
  set axi_mem_intercon [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_interconnect:2.1 axi_mem_intercon ]
  set_property -dict [ list \
   CONFIG.NUM_MI {1} \
   CONFIG.NUM_SI {2} \
 ] $axi_mem_intercon

  # Create instance: axi_vdma, and set properties
  set axi_vdma [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_vdma:6.3 axi_vdma ]
  set_property -dict [ list \
   CONFIG.c_m_axi_mm2s_data_width {32} \
   CONFIG.c_m_axis_mm2s_tdata_width {32} \
   CONFIG.c_mm2s_genlock_mode {1} \
   CONFIG.c_mm2s_linebuffer_depth {512} \
   CONFIG.c_mm2s_max_burst_length {32} \
   CONFIG.c_num_fstores {4} \
   CONFIG.c_s2mm_genlock_mode {0} \
   CONFIG.c_s2mm_linebuffer_depth {4096} \
   CONFIG.c_s2mm_max_burst_length {32} \
 ] $axi_vdma

  # Create instance: hdmi_in
  create_hier_cell_hdmi_in $hier_obj hdmi_in

  # Create instance: hdmi_out
  create_hier_cell_hdmi_out $hier_obj hdmi_out

  # Create instance: proc_sys_reset_pixelclk, and set properties
  set proc_sys_reset_pixelclk [ create_bd_cell -type ip -vlnv xilinx.com:ip:proc_sys_reset:5.0 proc_sys_reset_pixelclk ]

  # Create interface connections
  connect_bd_intf_net -intf_net Conn1 [get_bd_intf_pins S_AXI_LITE] [get_bd_intf_pins axi_vdma/S_AXI_LITE]
  connect_bd_intf_net -intf_net Conn2 [get_bd_intf_pins S00_AXILite] [get_bd_intf_pins hdmi_in/S00_AXILite]
  connect_bd_intf_net -intf_net Conn3 [get_bd_intf_pins hdmi_tx] [get_bd_intf_pins hdmi_out/hdmi_tx]
  connect_bd_intf_net -intf_net Conn4 [get_bd_intf_pins S01_AXILite] [get_bd_intf_pins hdmi_in/S01_AXILite]
  connect_bd_intf_net -intf_net Conn5 [get_bd_intf_pins S02_AXILite] [get_bd_intf_pins hdmi_in/S02_AXILite]
  connect_bd_intf_net -intf_net Conn6 [get_bd_intf_pins S03_AXILite] [get_bd_intf_pins hdmi_in/S03_AXILite]
  connect_bd_intf_net -intf_net Conn7 [get_bd_intf_pins S00_AXILite1] [get_bd_intf_pins hdmi_out/S00_AXILite]
  connect_bd_intf_net -intf_net Conn8 [get_bd_intf_pins S01_AXILite1] [get_bd_intf_pins hdmi_out/S01_AXILite]
  connect_bd_intf_net -intf_net Conn9 [get_bd_intf_pins S02_AXILite1] [get_bd_intf_pins hdmi_out/S02_AXILite]
  connect_bd_intf_net -intf_net Conn10 [get_bd_intf_pins S03_AXILite1] [get_bd_intf_pins hdmi_out/S03_AXILite]
  connect_bd_intf_net -intf_net Conn11 [get_bd_intf_pins S04_AXILite] [get_bd_intf_pins hdmi_out/S04_AXILite]
  connect_bd_intf_net -intf_net Conn16 [get_bd_intf_pins S00_AXIS] [get_bd_intf_pins hdmi_in/stream_in_24]
  connect_bd_intf_net -intf_net Conn17 [get_bd_intf_pins M01_AXIS] [get_bd_intf_pins hdmi_out/M_AXIS]
  connect_bd_intf_net -intf_net Conn18 [get_bd_intf_pins M_AXIS01] [get_bd_intf_pins hdmi_in/M_AXIS]
  connect_bd_intf_net -intf_net Conn19 [get_bd_intf_pins S01_AXIS] [get_bd_intf_pins hdmi_out/stream_in_24]
  connect_bd_intf_net -intf_net TMDS_1 [get_bd_intf_pins TMDS_in] [get_bd_intf_pins hdmi_in/TMDS_in]
  connect_bd_intf_net -intf_net axi_mem_intercon_M00_AXI [get_bd_intf_pins M_AXI] [get_bd_intf_pins axi_mem_intercon/M00_AXI]
  connect_bd_intf_net -intf_net axi_vdma_0_M_AXIS_MM2S [get_bd_intf_pins axi_vdma/M_AXIS_MM2S] [get_bd_intf_pins hdmi_out/in_stream]
  connect_bd_intf_net -intf_net axi_vdma_0_M_AXI_MM2S [get_bd_intf_pins axi_mem_intercon/S01_AXI] [get_bd_intf_pins axi_vdma/M_AXI_MM2S]
  connect_bd_intf_net -intf_net axi_vdma_0_M_AXI_S2MM [get_bd_intf_pins axi_mem_intercon/S00_AXI] [get_bd_intf_pins axi_vdma/M_AXI_S2MM]
  connect_bd_intf_net -intf_net frontend_DDC [get_bd_intf_pins DDC] [get_bd_intf_pins hdmi_in/DDC]
  connect_bd_intf_net -intf_net in_pixelformat_M00_AXIS [get_bd_intf_pins axi_vdma/S_AXIS_S2MM] [get_bd_intf_pins hdmi_in/out_stream]

  # Create port connections
  connect_bd_net -net ARESETN_2 [get_bd_pins interconnect_resetn_clk142M] [get_bd_pins axi_mem_intercon/ARESETN]
  connect_bd_net -net Net [get_bd_pins clk_100M] [get_bd_pins axi_vdma/s_axi_lite_aclk] [get_bd_pins hdmi_in/clk_100M] [get_bd_pins hdmi_out/clk_100M]
  connect_bd_net -net Net1 [get_bd_pins periph_resetn_clk100M] [get_bd_pins axi_vdma/axi_resetn] [get_bd_pins hdmi_in/periph_resetn_clk100M] [get_bd_pins hdmi_out/periph_resetn_clk100M]
  connect_bd_net -net RefClk_1 [get_bd_pins clk_200M] [get_bd_pins hdmi_in/clk_200M]
  connect_bd_net -net aclk_1 [get_bd_pins clk_142M] [get_bd_pins axi_mem_intercon/ACLK] [get_bd_pins axi_mem_intercon/M00_ACLK] [get_bd_pins axi_mem_intercon/S00_ACLK] [get_bd_pins axi_mem_intercon/S01_ACLK] [get_bd_pins axi_vdma/m_axi_mm2s_aclk] [get_bd_pins axi_vdma/m_axi_s2mm_aclk] [get_bd_pins axi_vdma/m_axis_mm2s_aclk] [get_bd_pins axi_vdma/s_axis_s2mm_aclk] [get_bd_pins hdmi_in/clk_142M] [get_bd_pins hdmi_out/clk_142M]
  connect_bd_net -net axi_gpio_video_gpio_io_o [get_bd_pins hdmi_in_hpd] [get_bd_pins hdmi_in/hdmi_in_hpd]
  connect_bd_net -net axi_vdma_mm2s_introut [get_bd_pins mm2s_introut] [get_bd_pins axi_vdma/mm2s_introut]
  connect_bd_net -net axi_vdma_s2mm_introut [get_bd_pins s2mm_introut] [get_bd_pins axi_vdma/s2mm_introut]
  connect_bd_net -net ext_reset_in_1 [get_bd_pins FCLK_RESET0_N] [get_bd_pins proc_sys_reset_pixelclk/ext_reset_in]
  connect_bd_net -net hdmi_in_PixelClk [get_bd_pins hdmi_in/PixelClk] [get_bd_pins proc_sys_reset_pixelclk/slowest_sync_clk]
  connect_bd_net -net hdmi_in_aPixelClkLckd [get_bd_pins hdmi_in/aPixelClkLckd] [get_bd_pins proc_sys_reset_pixelclk/aux_reset_in]
  connect_bd_net -net hdmi_in_hdmi_in_hpd_irq [get_bd_pins hdmi_in_hpd_irq] [get_bd_pins hdmi_in/hdmi_in_hpd_irq]
  connect_bd_net -net hdmi_in_vtc_in_irq [get_bd_pins vtc_in_irq] [get_bd_pins hdmi_in/vtc_in_irq]
  connect_bd_net -net hdmi_out_hdmi_out_hpd_irq [get_bd_pins hdmi_out_hpd_irq] [get_bd_pins hdmi_out/hdmi_out_hpd_irq]
  connect_bd_net -net hdmi_out_hpd_video_gpio_io_o [get_bd_pins hdmi_out_hpd] [get_bd_pins hdmi_out/hdmi_out_hpd]
  connect_bd_net -net hdmi_out_vtc_out_irq [get_bd_pins vtc_out_irq] [get_bd_pins hdmi_out/vtc_out_irq]
  connect_bd_net -net rst_1 [get_bd_pins periph_reset_clk100M] [get_bd_pins hdmi_out/rst]
  connect_bd_net -net rst_ps7_0_fclk1_peripheral_aresetn [get_bd_pins periph_resetn_clk142M] [get_bd_pins axi_mem_intercon/M00_ARESETN] [get_bd_pins axi_mem_intercon/S00_ARESETN] [get_bd_pins axi_mem_intercon/S01_ARESETN] [get_bd_pins hdmi_in/periph_resetn_clk142M] [get_bd_pins hdmi_out/periph_resetn_clk142M]
  connect_bd_net -net vid_io_in_reset_1 [get_bd_pins hdmi_in/vid_io_in_reset] [get_bd_pins proc_sys_reset_pixelclk/peripheral_reset]
  connect_bd_net -net vtc_in_resetn_1 [get_bd_pins hdmi_in/resetn] [get_bd_pins proc_sys_reset_pixelclk/peripheral_aresetn]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: composable
proc create_hier_cell_composable { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2092 -severity "ERROR" "create_hier_cell_composable() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M00_AXIS

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M01_AXIS

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S00_AXIS

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S01_AXIS

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 S14_AXI

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 S15_AXI

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 S18_AXI

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 S21_AXI

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 S22_AXI

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 S23_AXI

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 S24_AXI

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 S25_AXI

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 S26_AXI

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 S27_AXI


  # Create pins
  create_bd_pin -dir I clk_142M
  create_bd_pin -dir I -type rst periph_resetn_clk142M

  # Create instance: axis_dwidth_24_48, and set properties
  set axis_dwidth_24_48 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_dwidth_converter:1.1 axis_dwidth_24_48 ]
  set_property -dict [ list \
   CONFIG.HAS_MI_TKEEP {1} \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {1} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.M_TDATA_NUM_BYTES {6} \
   CONFIG.S_TDATA_NUM_BYTES {3} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
   CONFIG.TUSER_BITS_PER_BYTE {1} \
 ] $axis_dwidth_24_48

  # Create instance: axis_dwidth_48_24, and set properties
  set axis_dwidth_48_24 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_dwidth_converter:1.1 axis_dwidth_48_24 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {1} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.M_TDATA_NUM_BYTES {3} \
   CONFIG.S_TDATA_NUM_BYTES {6} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
   CONFIG.TUSER_BITS_PER_BYTE {1} \
 ] $axis_dwidth_48_24

  # Create instance: axis_fifo_hdmi_out, and set properties
  set axis_fifo_hdmi_out [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_data_fifo:2.0 axis_fifo_hdmi_out ]
  set_property -dict [ list \
   CONFIG.FIFO_DEPTH {4096} \
   CONFIG.FIFO_MEMORY_TYPE {block} \
   CONFIG.HAS_TLAST {1} \
   CONFIG.TDATA_NUM_BYTES {6} \
   CONFIG.TUSER_WIDTH {1} \
 ] $axis_fifo_hdmi_out

  # Create instance: axis_switch, and set properties
  set axis_switch [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_switch:1.1 axis_switch ]
  set_property -dict [ list \
   CONFIG.DECODER_REG {1} \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {1} \
   CONFIG.HAS_TREADY {1} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.NUM_MI {15} \
   CONFIG.NUM_SI {15} \
   CONFIG.ROUTING_MODE {1} \
   CONFIG.TDATA_NUM_BYTES {3} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
   CONFIG.TUSER_WIDTH {1} \
 ] $axis_switch

  # Create instance: dfx_decouplers
  create_hier_cell_dfx_decouplers $hier_obj dfx_decouplers

  # Create instance: gaussianfilter_accel, and set properties
  set gaussianfilter_accel [ create_bd_cell -type ip -vlnv xilinx.com:hls:gaussianfilter_accel:1.0 gaussianfilter_accel ]

  # Create instance: pipeline_control, and set properties
  set pipeline_control [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_gpio:2.0 pipeline_control ]
  set_property -dict [ list \
   CONFIG.C_ALL_INPUTS_2 {0} \
   CONFIG.C_ALL_OUTPUTS {1} \
   CONFIG.C_GPIO2_WIDTH {8} \
   CONFIG.C_GPIO_WIDTH {1} \
   CONFIG.C_IS_DUAL {1} \
 ] $pipeline_control

  # Create instance: pr_0, and set properties
  set pr_0 [ create_bd_cell -type module -reference pr_0 pr_0 ]

  # Create instance: pr_1, and set properties
  set pr_1 [ create_bd_cell -type module -reference pr_1 pr_1 ]

  # Create instance: pr_fork, and set properties
  set pr_fork [ create_bd_cell -type module -reference pr_fork pr_fork ]

  # Create instance: pr_join, and set properties
  set pr_join [ create_bd_cell -type module -reference pr_join pr_join ]

  # Create instance: ps_user_soft_reset, and set properties
  set ps_user_soft_reset [ create_bd_cell -type ip -vlnv xilinx.com:ip:proc_sys_reset:5.0 ps_user_soft_reset ]
  set_property -dict [ list \
   CONFIG.C_AUX_RESET_HIGH {1} \
 ] $ps_user_soft_reset

  # Create instance: rgb2gray_accel, and set properties
  set rgb2gray_accel [ create_bd_cell -type ip -vlnv xilinx.com:hls:rgb2gray_accel:1.0 rgb2gray_accel ]

  # Create interface connections
  connect_bd_intf_net -intf_net Conn2 [get_bd_intf_pins S22_AXI] [get_bd_intf_pins dfx_decouplers/m_axi_dfx_pr_0_0]
  connect_bd_intf_net -intf_net Conn3 [get_bd_intf_pins S23_AXI] [get_bd_intf_pins dfx_decouplers/m_axi_dfx_pr_0_1]
  connect_bd_intf_net -intf_net Conn4 [get_bd_intf_pins S24_AXI] [get_bd_intf_pins dfx_decouplers/m_axi_dfx_pr_1_0]
  connect_bd_intf_net -intf_net Conn5 [get_bd_intf_pins S25_AXI] [get_bd_intf_pins dfx_decouplers/m_axi_dfx_pr_1_1]
  connect_bd_intf_net -intf_net Conn6 [get_bd_intf_pins S26_AXI] [get_bd_intf_pins dfx_decouplers/m_axi_dfx_pr_fork]
  connect_bd_intf_net -intf_net Conn7 [get_bd_intf_pins S27_AXI] [get_bd_intf_pins dfx_decouplers/m_axi_dfx_pr_join]
  connect_bd_intf_net -intf_net Conn8 [get_bd_intf_pins S18_AXI] [get_bd_intf_pins rgb2gray_accel/s_axi_control]
  connect_bd_intf_net -intf_net Conn10 [get_bd_intf_pins S14_AXI] [get_bd_intf_pins axis_switch/S_AXI_CTRL]
  connect_bd_intf_net -intf_net Conn14 [get_bd_intf_pins S15_AXI] [get_bd_intf_pins pipeline_control/S_AXI]
  connect_bd_intf_net -intf_net S21_AXI_1 [get_bd_intf_pins S21_AXI] [get_bd_intf_pins gaussianfilter_accel/s_axi_control]
  connect_bd_intf_net -intf_net axis_dwidth_24_48_M_AXIS [get_bd_intf_pins axis_dwidth_24_48/M_AXIS] [get_bd_intf_pins axis_fifo_hdmi_out/S_AXIS]
  connect_bd_intf_net -intf_net axis_dwidth_48_24_M_AXIS [get_bd_intf_pins M01_AXIS] [get_bd_intf_pins axis_dwidth_48_24/M_AXIS]
  connect_bd_intf_net -intf_net axis_fifo_hdmi_out_M_AXIS [get_bd_intf_pins axis_dwidth_48_24/S_AXIS] [get_bd_intf_pins axis_fifo_hdmi_out/M_AXIS]
  connect_bd_intf_net -intf_net axis_switch_M00_AXIS [get_bd_intf_pins M00_AXIS] [get_bd_intf_pins axis_switch/M00_AXIS]
  connect_bd_intf_net -intf_net axis_switch_M01_AXIS [get_bd_intf_pins axis_dwidth_24_48/S_AXIS] [get_bd_intf_pins axis_switch/M01_AXIS]
  connect_bd_intf_net -intf_net axis_switch_M02_AXIS [get_bd_intf_pins axis_switch/M02_AXIS] [get_bd_intf_pins rgb2gray_accel/stream_in]
  connect_bd_intf_net -intf_net axis_switch_M06_AXIS [get_bd_intf_pins axis_switch/M06_AXIS] [get_bd_intf_pins dfx_decouplers/s_axis_dfx_pr_0_0]
  connect_bd_intf_net -intf_net axis_switch_M07_AXIS [get_bd_intf_pins axis_switch/M07_AXIS] [get_bd_intf_pins dfx_decouplers/s_axis_dfx_pr_0_1]
  connect_bd_intf_net -intf_net axis_switch_M08_AXIS [get_bd_intf_pins axis_switch/M08_AXIS] [get_bd_intf_pins dfx_decouplers/s_axis_dfx_pr_1_0]
  connect_bd_intf_net -intf_net axis_switch_M09_AXIS [get_bd_intf_pins axis_switch/M09_AXIS] [get_bd_intf_pins dfx_decouplers/s_axis_dfx_pr_1_1]
  connect_bd_intf_net -intf_net axis_switch_M10_AXIS [get_bd_intf_pins axis_switch/M10_AXIS] [get_bd_intf_pins dfx_decouplers/s_axis_dfx_pr_join_0]
  connect_bd_intf_net -intf_net axis_switch_M11_AXIS [get_bd_intf_pins axis_switch/M11_AXIS] [get_bd_intf_pins dfx_decouplers/s_axis_dfx_pr_join_1]
  connect_bd_intf_net -intf_net axis_switch_M12_AXIS [get_bd_intf_pins axis_switch/M12_AXIS] [get_bd_intf_pins dfx_decouplers/s_axis_dfx_pr_fork]
  connect_bd_intf_net -intf_net axis_switch_M14_AXIS [get_bd_intf_pins axis_switch/M14_AXIS] [get_bd_intf_pins gaussianfilter_accel/stream_in]
  connect_bd_intf_net -intf_net dfx_decoupler_2_s_axi_lite [get_bd_intf_pins dfx_decouplers/s_axi_pr_join] [get_bd_intf_pins pr_join/s_axi_control]
  connect_bd_intf_net -intf_net dfx_decoupler_3_s_axi_lite [get_bd_intf_pins dfx_decouplers/s_axi_pr_fork] [get_bd_intf_pins pr_fork/s_axi_control]
  connect_bd_intf_net -intf_net dfx_decoupler_pr_0_s_axi_lite0 [get_bd_intf_pins dfx_decouplers/s_axi_pr_0_0] [get_bd_intf_pins pr_0/s_axi_control0]
  connect_bd_intf_net -intf_net dfx_decoupler_pr_0_s_axi_lite1 [get_bd_intf_pins dfx_decouplers/s_axi_pr_0_1] [get_bd_intf_pins pr_0/s_axi_control1]
  connect_bd_intf_net -intf_net dfx_decoupler_pr_1_s_axi_lite0 [get_bd_intf_pins dfx_decouplers/s_axi_pr_1_0] [get_bd_intf_pins pr_1/s_axi_control0]
  connect_bd_intf_net -intf_net dfx_decoupler_pr_1_s_axi_lite1 [get_bd_intf_pins dfx_decouplers/s_axi_pr_1_1] [get_bd_intf_pins pr_1/s_axi_control1]
  connect_bd_intf_net -intf_net dfx_decouplers_m_axis_dfx_pr_0_0 [get_bd_intf_pins axis_switch/S06_AXIS] [get_bd_intf_pins dfx_decouplers/m_axis_dfx_pr_0_0]
  connect_bd_intf_net -intf_net dfx_decouplers_m_axis_dfx_pr_0_1 [get_bd_intf_pins axis_switch/S07_AXIS] [get_bd_intf_pins dfx_decouplers/m_axis_dfx_pr_0_1]
  connect_bd_intf_net -intf_net dfx_decouplers_m_axis_dfx_pr_1_0 [get_bd_intf_pins axis_switch/S08_AXIS] [get_bd_intf_pins dfx_decouplers/m_axis_dfx_pr_1_0]
  connect_bd_intf_net -intf_net dfx_decouplers_m_axis_dfx_pr_1_1 [get_bd_intf_pins axis_switch/S09_AXIS] [get_bd_intf_pins dfx_decouplers/m_axis_dfx_pr_1_1]
  connect_bd_intf_net -intf_net dfx_decouplers_m_axis_dfx_pr_fork_0 [get_bd_intf_pins axis_switch/S11_AXIS] [get_bd_intf_pins dfx_decouplers/m_axis_dfx_pr_fork_0]
  connect_bd_intf_net -intf_net dfx_decouplers_m_axis_dfx_pr_fork_1 [get_bd_intf_pins axis_switch/S12_AXIS] [get_bd_intf_pins dfx_decouplers/m_axis_dfx_pr_fork_1]
  connect_bd_intf_net -intf_net dfx_decouplers_m_axis_dfx_pr_join [get_bd_intf_pins axis_switch/S10_AXIS] [get_bd_intf_pins dfx_decouplers/m_axis_dfx_pr_join]
  connect_bd_intf_net -intf_net dfx_decouplers_m_axis_pr_join_0 [get_bd_intf_pins dfx_decouplers/m_axis_pr_join_0] [get_bd_intf_pins pr_join/stream_in0]
  connect_bd_intf_net -intf_net gaussianfilter_accel_stream_out [get_bd_intf_pins axis_switch/S14_AXIS] [get_bd_intf_pins gaussianfilter_accel/stream_out]
  connect_bd_intf_net -intf_net hdmi_in_M_AXIS [get_bd_intf_pins S00_AXIS] [get_bd_intf_pins axis_switch/S00_AXIS]
  connect_bd_intf_net -intf_net hdmi_out_M_AXIS [get_bd_intf_pins S01_AXIS] [get_bd_intf_pins axis_switch/S01_AXIS]
  connect_bd_intf_net -intf_net pr_0_in0_M_AXIS [get_bd_intf_pins dfx_decouplers/m_axis_pr_0_0] [get_bd_intf_pins pr_0/stream_in0]
  connect_bd_intf_net -intf_net pr_0_in1_M_AXIS [get_bd_intf_pins dfx_decouplers/m_axis_pr_0_1] [get_bd_intf_pins pr_0/stream_in1]
  connect_bd_intf_net -intf_net pr_0_stream_out0 [get_bd_intf_pins dfx_decouplers/s_axis_pr_0_0] [get_bd_intf_pins pr_0/stream_out0]
  connect_bd_intf_net -intf_net pr_0_stream_out1 [get_bd_intf_pins dfx_decouplers/s_axis_pr_0_1] [get_bd_intf_pins pr_0/stream_out1]
  connect_bd_intf_net -intf_net pr_1_in0_M_AXIS [get_bd_intf_pins dfx_decouplers/m_axis_pr_1_0] [get_bd_intf_pins pr_1/stream_in0]
  connect_bd_intf_net -intf_net pr_1_in1_M_AXIS [get_bd_intf_pins dfx_decouplers/m_axis_pr_1_1] [get_bd_intf_pins pr_1/stream_in1]
  connect_bd_intf_net -intf_net pr_1_stream_out0 [get_bd_intf_pins dfx_decouplers/s_axis_pr_1_0] [get_bd_intf_pins pr_1/stream_out0]
  connect_bd_intf_net -intf_net pr_1_stream_out1 [get_bd_intf_pins dfx_decouplers/s_axis_pr_1_1] [get_bd_intf_pins pr_1/stream_out1]
  connect_bd_intf_net -intf_net pr_fork_in0_M_AXIS [get_bd_intf_pins dfx_decouplers/m_axis_pr_fork] [get_bd_intf_pins pr_fork/stream_in0]
  connect_bd_intf_net -intf_net pr_fork_stream_out0 [get_bd_intf_pins dfx_decouplers/s_pr_fork_0] [get_bd_intf_pins pr_fork/stream_out0]
  connect_bd_intf_net -intf_net pr_fork_stream_out1 [get_bd_intf_pins dfx_decouplers/s_pr_fork_1] [get_bd_intf_pins pr_fork/stream_out1]
  connect_bd_intf_net -intf_net pr_join_stream_out [get_bd_intf_pins dfx_decouplers/s_axis_pr_join] [get_bd_intf_pins pr_join/stream_out]
  connect_bd_intf_net -intf_net rgb2gray_accel_stream_out [get_bd_intf_pins axis_switch/S02_AXIS] [get_bd_intf_pins rgb2gray_accel/stream_out]
  connect_bd_intf_net -intf_net stream_in1_1 [get_bd_intf_pins dfx_decouplers/m_axis_pr_join_1] [get_bd_intf_pins pr_join/stream_in1]

  # Create port connections
  connect_bd_net -net aclk_1 [get_bd_pins clk_142M] [get_bd_pins axis_dwidth_24_48/aclk] [get_bd_pins axis_dwidth_48_24/aclk] [get_bd_pins axis_fifo_hdmi_out/s_axis_aclk] [get_bd_pins axis_switch/aclk] [get_bd_pins axis_switch/s_axi_ctrl_aclk] [get_bd_pins dfx_decouplers/clk_142M] [get_bd_pins gaussianfilter_accel/ap_clk] [get_bd_pins pipeline_control/s_axi_aclk] [get_bd_pins pr_0/clk_142M] [get_bd_pins pr_1/clk_142M] [get_bd_pins pr_fork/clk_142M] [get_bd_pins pr_join/clk_142M] [get_bd_pins ps_user_soft_reset/slowest_sync_clk] [get_bd_pins rgb2gray_accel/ap_clk]
  connect_bd_net -net axi_control_gpio_io_o [get_bd_pins pipeline_control/gpio_io_o] [get_bd_pins ps_user_soft_reset/aux_reset_in]
  connect_bd_net -net dfx_decouplers_dfx_status [get_bd_pins dfx_decouplers/dfx_status] [get_bd_pins pipeline_control/gpio2_io_i]
  connect_bd_net -net pipeline_control_gpio2_io_o [get_bd_pins dfx_decouplers/dfx_decouple] [get_bd_pins pipeline_control/gpio2_io_o]
  connect_bd_net -net rst_ps7_0_fclk1_peripheral_aresetn [get_bd_pins periph_resetn_clk142M] [get_bd_pins axis_switch/aresetn] [get_bd_pins axis_switch/s_axi_ctrl_aresetn] [get_bd_pins pipeline_control/s_axi_aresetn] [get_bd_pins ps_user_soft_reset/ext_reset_in]
  connect_bd_net -net soft_peripheral_aresetn [get_bd_pins axis_dwidth_24_48/aresetn] [get_bd_pins axis_dwidth_48_24/aresetn] [get_bd_pins axis_fifo_hdmi_out/s_axis_aresetn] [get_bd_pins dfx_decouplers/periph_resetn_clk142M] [get_bd_pins gaussianfilter_accel/ap_rst_n] [get_bd_pins pr_0/periph_resetn_clk142M] [get_bd_pins pr_1/periph_resetn_clk142M] [get_bd_pins pr_fork/periph_resetn_clk142M] [get_bd_pins pr_join/periph_resetn_clk142M] [get_bd_pins ps_user_soft_reset/peripheral_aresetn] [get_bd_pins rgb2gray_accel/ap_rst_n]

  # Perform GUI Layout
  regenerate_bd_layout -hierarchy [get_bd_cells /composable] -layout_string {
   "ActiveEmotionalView":"Default View",
   "Default View_ScaleFactor":"0.944645",
   "Default View_TopLeft":"620,0",
   "ExpandedHierarchyInLayout":"",
   "guistr":"# # String gsaved with Nlview 7.0r4  2019-12-20 bk=1.5203 VDI=41 GEI=36 GUI=JA:10.0 TLS
#  -string -flagsOSRD
preplace port M00_AXIS -pg 1 -lvl 9 -x 3420 -y 780 -defaultsOSRD
preplace port M01_AXIS -pg 1 -lvl 9 -x 3420 -y 900 -defaultsOSRD
preplace port S00_AXIS -pg 1 -lvl 0 -x -10 -y 1060 -defaultsOSRD
preplace port S01_AXIS -pg 1 -lvl 0 -x -10 -y 1080 -defaultsOSRD
preplace port S14_AXI -pg 1 -lvl 0 -x -10 -y 1270 -defaultsOSRD
preplace port S15_AXI -pg 1 -lvl 0 -x -10 -y 930 -defaultsOSRD
preplace port S18_AXI -pg 1 -lvl 0 -x -10 -y 2190 -defaultsOSRD
preplace port S21_AXI -pg 1 -lvl 0 -x -10 -y 1290 -defaultsOSRD
preplace port S22_AXI -pg 1 -lvl 0 -x -10 -y 500 -defaultsOSRD
preplace port S23_AXI -pg 1 -lvl 0 -x -10 -y 520 -defaultsOSRD
preplace port S24_AXI -pg 1 -lvl 0 -x -10 -y 540 -defaultsOSRD
preplace port S25_AXI -pg 1 -lvl 0 -x -10 -y 560 -defaultsOSRD
preplace port S26_AXI -pg 1 -lvl 0 -x -10 -y 580 -defaultsOSRD
preplace port S27_AXI -pg 1 -lvl 0 -x -10 -y 600 -defaultsOSRD
preplace port clk_142M -pg 1 -lvl 0 -x -10 -y 950 -defaultsOSRD
preplace port periph_resetn_clk142M -pg 1 -lvl 0 -x -10 -y 970 -defaultsOSRD
preplace inst axis_dwidth_24_48 -pg 1 -lvl 6 -x 2700 -y 860 -defaultsOSRD
preplace inst axis_dwidth_48_24 -pg 1 -lvl 8 -x 3230 -y 900 -defaultsOSRD
preplace inst axis_fifo_hdmi_out -pg 1 -lvl 7 -x 2940 -y 880 -defaultsOSRD
preplace inst axis_switch -pg 1 -lvl 5 -x 2300 -y 930 -defaultsOSRD
preplace inst dfx_decouplers -pg 1 -lvl 4 -x 1650 -y 720 -defaultsOSRD
preplace inst pipeline_control -pg 1 -lvl 1 -x 180 -y 950 -defaultsOSRD
preplace inst ps_user_soft_reset -pg 1 -lvl 2 -x 550 -y 1170 -defaultsOSRD
preplace inst rgb2gray_accel -pg 1 -lvl 4 -x 1650 -y 2220 -defaultsOSRD
preplace inst pr_0 -pg 1 -lvl 3 -x 1070 -y 140 -defaultsOSRD
preplace inst pr_1 -pg 1 -lvl 3 -x 1070 -y 390 -defaultsOSRD
preplace inst pr_join -pg 1 -lvl 3 -x 1070 -y 930 -defaultsOSRD
preplace inst pr_fork -pg 1 -lvl 3 -x 1070 -y 710 -defaultsOSRD
preplace inst gaussianfilter_accel -pg 1 -lvl 4 -x 1650 -y 1310 -defaultsOSRD
preplace netloc aclk_1 1 0 8 30 1070 350 1030 790 1140 1310 1010 2010 680 2540 770 2810 960 3060J
preplace netloc axi_control_gpio_io_o 1 1 1 330 930n
preplace netloc dfx_decouplers_dfx_status 1 1 4 NJ 970 770J 1120 NJ 1120 1860
preplace netloc pipeline_control_gpio2_io_o 1 1 3 NJ 990 760J 1110 1290
preplace netloc rst_ps7_0_fclk1_peripheral_aresetn 1 0 5 10 1090 370 1050 730J 1130 NJ 1130 2050
preplace netloc soft_peripheral_aresetn 1 2 6 780 1150 1330 990 1940J 670 2550 940 2820 970 3070J
preplace netloc axis_dwidth_24_48_M_AXIS 1 6 1 N 860
preplace netloc axis_dwidth_48_24_M_AXIS 1 8 1 NJ 900
preplace netloc axis_switch_M00_AXIS 1 5 4 2560J 780 NJ 780 NJ 780 NJ
preplace netloc axis_switch_M01_AXIS 1 5 1 2530 810n
preplace netloc axis_switch_M02_AXIS 1 3 3 1370 340 NJ 340 2450
preplace netloc axis_switch_M06_AXIS 1 3 3 1390 320 NJ 320 2510
preplace netloc axis_switch_M07_AXIS 1 3 3 1400 330 NJ 330 2500
preplace netloc axis_switch_M08_AXIS 1 3 3 1440 360 NJ 360 2460
preplace netloc axis_switch_M09_AXIS 1 3 3 1450 400 NJ 400 2440
preplace netloc axis_switch_M10_AXIS 1 3 3 1410 370 NJ 370 2480
preplace netloc axis_switch_M11_AXIS 1 3 3 1420 380 NJ 380 2470
preplace netloc axis_switch_M12_AXIS 1 3 3 1380 350 NJ 350 2520
preplace netloc dfx_decoupler_2_s_axi_lite 1 2 3 860 1030 NJ 1030 1840
preplace netloc dfx_decoupler_3_s_axi_lite 1 2 3 830 1050 NJ 1050 1850
preplace netloc dfx_decoupler_pr_0_s_axi_lite0 1 2 3 760 10 NJ 10 1930
preplace netloc dfx_decoupler_pr_0_s_axi_lite1 1 2 3 780 20 NJ 20 1920
preplace netloc dfx_decoupler_pr_1_s_axi_lite0 1 2 3 830 500 1250J 410 1900
preplace netloc dfx_decoupler_pr_1_s_axi_lite1 1 2 3 840 510 1260J 420 1890
preplace netloc dfx_decouplers_m_axis_dfx_pr_0_0 1 4 1 2050 520n
preplace netloc dfx_decouplers_m_axis_dfx_pr_0_1 1 4 1 2040 540n
preplace netloc dfx_decouplers_m_axis_dfx_pr_1_0 1 4 1 2020 560n
preplace netloc dfx_decouplers_m_axis_dfx_pr_1_1 1 4 1 2000 580n
preplace netloc Conn4 1 0 4 NJ 540 NJ 540 800J 550 1320J
preplace netloc Conn5 1 0 4 NJ 560 NJ 560 800J 570 1340J
preplace netloc Conn6 1 0 4 NJ 580 NJ 580 NJ 580 NJ
preplace netloc Conn7 1 0 4 NJ 600 NJ 600 NJ 600 NJ
preplace netloc Conn8 1 0 4 NJ 2190 NJ 2190 NJ 2190 NJ
preplace netloc axis_fifo_hdmi_out_M_AXIS 1 7 1 N 880
preplace netloc Conn2 1 0 4 NJ 500 NJ 500 820J 540 1290J
preplace netloc Conn3 1 0 4 NJ 520 NJ 520 810J 560 1310J
preplace netloc dfx_decouplers_m_axis_dfx_pr_fork_0 1 4 1 1970 600n
preplace netloc dfx_decouplers_m_axis_dfx_pr_fork_1 1 4 1 1950 620n
preplace netloc dfx_decouplers_m_axis_dfx_pr_join 1 4 1 1960 640n
preplace netloc dfx_decouplers_m_axis_pr_join_0 1 2 3 840 1060 NJ 1060 1880
preplace netloc hdmi_in_M_AXIS 1 0 5 NJ 1060 NJ 1060 750J 1080 NJ 1080 1980J
preplace netloc hdmi_out_M_AXIS 1 0 5 NJ 1080 360J 1070 740J 1090 NJ 1090 1990J
preplace netloc pr_0_in0_M_AXIS 1 2 3 790 30 NJ 30 1870
preplace netloc pr_0_in1_M_AXIS 1 2 3 860 250 NJ 250 1860
preplace netloc pr_0_stream_out0 1 3 1 1360 130n
preplace netloc pr_0_stream_out1 1 3 1 1350 150n
preplace netloc pr_1_in0_M_AXIS 1 2 3 850 520 1270J 430 1850
preplace netloc pr_1_in1_M_AXIS 1 2 3 860 530 1280J 440 1840
preplace netloc pr_1_stream_out0 1 3 1 1330 380n
preplace netloc pr_1_stream_out1 1 3 1 1300 400n
preplace netloc pr_fork_in0_M_AXIS 1 2 3 810 1100 NJ 1100 1910
preplace netloc pr_fork_stream_out0 1 3 1 1260 700n
preplace netloc pr_fork_stream_out1 1 3 1 1250 720n
preplace netloc pr_join_stream_out 1 3 1 1270 840n
preplace netloc rgb2gray_accel_stream_out 1 4 1 2030 780n
preplace netloc stream_in1_1 1 2 3 850 1070 NJ 1070 1870
preplace netloc Conn10 1 0 5 20J 1050 340J 1040 NJ 1040 NJ 1040 NJ
preplace netloc Conn14 1 0 1 NJ 930
preplace netloc gaussianfilter_accel_stream_out 1 4 1 2040 1020n
preplace netloc axis_switch_M14_AXIS 1 3 3 1430 390 NJ 390 2490
preplace netloc S21_AXI_1 1 0 4 NJ 1290 NJ 1290 NJ 1290 1350
levelinfo -pg 1 -10 180 550 1070 1650 2300 2700 2940 3230 3420
pagesize -pg 1 -db -bbox -sgen -230 0 3540 2310
"
}

  # Restore current instance
  current_bd_instance $oldCurInst
}
  variable script_folder

  if { $parentCell eq "" } {
     set parentCell [get_bd_cells /]
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj


  # Create interface ports
  set DDR [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:ddrx_rtl:1.0 DDR ]

  set FIXED_IO [ create_bd_intf_port -mode Master -vlnv xilinx.com:display_processing_system7:fixedio_rtl:1.0 FIXED_IO ]

  set btns_4bits [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:gpio_rtl:1.0 btns_4bits ]

  set hdmi_in [ create_bd_intf_port -mode Slave -vlnv digilentinc.com:interface:tmds_rtl:1.0 hdmi_in ]

  set hdmi_in_ddc [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:iic_rtl:1.0 hdmi_in_ddc ]

  set hdmi_tx [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:hdmi_rtl:2.0 hdmi_tx ]

  set leds_4bits [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:gpio_rtl:1.0 leds_4bits ]

  set sws_2bits [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:gpio_rtl:1.0 sws_2bits ]


  # Create ports
  set hdmi_in_hpd [ create_bd_port -dir O -from 0 -to 0 hdmi_in_hpd ]
  set hdmi_out_hpd [ create_bd_port -dir O -from 0 -to 0 hdmi_out_hpd ]

  # Create instance: axi_interconnect_0, and set properties
  set axi_interconnect_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_interconnect:2.1 axi_interconnect_0 ]
  set_property -dict [ list \
   CONFIG.M00_HAS_REGSLICE {1} \
   CONFIG.M01_HAS_REGSLICE {1} \
   CONFIG.M02_HAS_REGSLICE {1} \
   CONFIG.M03_HAS_REGSLICE {1} \
   CONFIG.M04_HAS_REGSLICE {1} \
   CONFIG.M05_HAS_REGSLICE {1} \
   CONFIG.M06_HAS_REGSLICE {1} \
   CONFIG.M07_HAS_REGSLICE {1} \
   CONFIG.M08_HAS_REGSLICE {1} \
   CONFIG.M09_HAS_REGSLICE {1} \
   CONFIG.NUM_MI {28} \
   CONFIG.S00_HAS_REGSLICE {1} \
 ] $axi_interconnect_0

  # Create instance: btns_gpio, and set properties
  set btns_gpio [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_gpio:2.0 btns_gpio ]
  set_property -dict [ list \
   CONFIG.C_ALL_INPUTS {1} \
   CONFIG.C_GPIO_WIDTH {4} \
   CONFIG.C_INTERRUPT_PRESENT {1} \
 ] $btns_gpio

  # Create instance: composable
  create_hier_cell_composable [current_bd_instance .] composable

  # Create instance: concat_interrupts, and set properties
  set concat_interrupts [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 concat_interrupts ]
  set_property -dict [ list \
   CONFIG.NUM_PORTS {9} \
 ] $concat_interrupts

  # Create instance: leds_gpio, and set properties
  set leds_gpio [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_gpio:2.0 leds_gpio ]
  set_property -dict [ list \
   CONFIG.C_ALL_OUTPUTS {1} \
   CONFIG.C_GPIO_WIDTH {4} \
   CONFIG.C_INTERRUPT_PRESENT {1} \
   CONFIG.C_IS_DUAL {0} \
 ] $leds_gpio

  # Create instance: ps7_0, and set properties
  set ps7_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:processing_system7:5.5 ps7_0 ]
  set_property -dict [ list \
   CONFIG.PCW_ACT_APU_PERIPHERAL_FREQMHZ {650.000000} \
   CONFIG.PCW_ACT_CAN0_PERIPHERAL_FREQMHZ {23.8095} \
   CONFIG.PCW_ACT_CAN1_PERIPHERAL_FREQMHZ {23.8095} \
   CONFIG.PCW_ACT_CAN_PERIPHERAL_FREQMHZ {10.000000} \
   CONFIG.PCW_ACT_DCI_PERIPHERAL_FREQMHZ {10.096154} \
   CONFIG.PCW_ACT_ENET0_PERIPHERAL_FREQMHZ {125.000000} \
   CONFIG.PCW_ACT_ENET1_PERIPHERAL_FREQMHZ {10.000000} \
   CONFIG.PCW_ACT_FPGA0_PERIPHERAL_FREQMHZ {100.000000} \
   CONFIG.PCW_ACT_FPGA1_PERIPHERAL_FREQMHZ {142.857132} \
   CONFIG.PCW_ACT_FPGA2_PERIPHERAL_FREQMHZ {200.000000} \
   CONFIG.PCW_ACT_FPGA3_PERIPHERAL_FREQMHZ {10.000000} \
   CONFIG.PCW_ACT_I2C_PERIPHERAL_FREQMHZ {50} \
   CONFIG.PCW_ACT_PCAP_PERIPHERAL_FREQMHZ {200.000000} \
   CONFIG.PCW_ACT_QSPI_PERIPHERAL_FREQMHZ {200.000000} \
   CONFIG.PCW_ACT_SDIO_PERIPHERAL_FREQMHZ {50.000000} \
   CONFIG.PCW_ACT_SMC_PERIPHERAL_FREQMHZ {10.000000} \
   CONFIG.PCW_ACT_SPI_PERIPHERAL_FREQMHZ {10.000000} \
   CONFIG.PCW_ACT_TPIU_PERIPHERAL_FREQMHZ {200.000000} \
   CONFIG.PCW_ACT_TTC0_CLK0_PERIPHERAL_FREQMHZ {108.333336} \
   CONFIG.PCW_ACT_TTC0_CLK1_PERIPHERAL_FREQMHZ {108.333336} \
   CONFIG.PCW_ACT_TTC0_CLK2_PERIPHERAL_FREQMHZ {108.333336} \
   CONFIG.PCW_ACT_TTC1_CLK0_PERIPHERAL_FREQMHZ {108.333336} \
   CONFIG.PCW_ACT_TTC1_CLK1_PERIPHERAL_FREQMHZ {108.333336} \
   CONFIG.PCW_ACT_TTC1_CLK2_PERIPHERAL_FREQMHZ {108.333336} \
   CONFIG.PCW_ACT_TTC_PERIPHERAL_FREQMHZ {50} \
   CONFIG.PCW_ACT_UART_PERIPHERAL_FREQMHZ {100.000000} \
   CONFIG.PCW_ACT_USB0_PERIPHERAL_FREQMHZ {60} \
   CONFIG.PCW_ACT_USB1_PERIPHERAL_FREQMHZ {60} \
   CONFIG.PCW_ACT_WDT_PERIPHERAL_FREQMHZ {108.333336} \
   CONFIG.PCW_APU_CLK_RATIO_ENABLE {6:2:1} \
   CONFIG.PCW_APU_PERIPHERAL_FREQMHZ {650} \
   CONFIG.PCW_ARMPLL_CTRL_FBDIV {26} \
   CONFIG.PCW_CAN0_BASEADDR {0xE0008000} \
   CONFIG.PCW_CAN0_CAN0_IO {<Select>} \
   CONFIG.PCW_CAN0_GRP_CLK_ENABLE {0} \
   CONFIG.PCW_CAN0_GRP_CLK_IO {<Select>} \
   CONFIG.PCW_CAN0_HIGHADDR {0xE0008FFF} \
   CONFIG.PCW_CAN0_PERIPHERAL_CLKSRC {External} \
   CONFIG.PCW_CAN0_PERIPHERAL_ENABLE {0} \
   CONFIG.PCW_CAN0_PERIPHERAL_FREQMHZ {-1} \
   CONFIG.PCW_CAN1_BASEADDR {0xE0009000} \
   CONFIG.PCW_CAN1_CAN1_IO {<Select>} \
   CONFIG.PCW_CAN1_GRP_CLK_ENABLE {0} \
   CONFIG.PCW_CAN1_GRP_CLK_IO {<Select>} \
   CONFIG.PCW_CAN1_HIGHADDR {0xE0009FFF} \
   CONFIG.PCW_CAN1_PERIPHERAL_CLKSRC {External} \
   CONFIG.PCW_CAN1_PERIPHERAL_ENABLE {0} \
   CONFIG.PCW_CAN1_PERIPHERAL_FREQMHZ {-1} \
   CONFIG.PCW_CAN_PERIPHERAL_CLKSRC {IO PLL} \
   CONFIG.PCW_CAN_PERIPHERAL_DIVISOR0 {1} \
   CONFIG.PCW_CAN_PERIPHERAL_DIVISOR1 {1} \
   CONFIG.PCW_CAN_PERIPHERAL_FREQMHZ {100} \
   CONFIG.PCW_CAN_PERIPHERAL_VALID {0} \
   CONFIG.PCW_CLK0_FREQ {100000000} \
   CONFIG.PCW_CLK1_FREQ {142857132} \
   CONFIG.PCW_CLK2_FREQ {200000000} \
   CONFIG.PCW_CLK3_FREQ {10000000} \
   CONFIG.PCW_CORE0_FIQ_INTR {0} \
   CONFIG.PCW_CORE0_IRQ_INTR {0} \
   CONFIG.PCW_CORE1_FIQ_INTR {0} \
   CONFIG.PCW_CORE1_IRQ_INTR {0} \
   CONFIG.PCW_CPU_CPU_6X4X_MAX_RANGE {667} \
   CONFIG.PCW_CPU_CPU_PLL_FREQMHZ {1300.000} \
   CONFIG.PCW_CPU_PERIPHERAL_CLKSRC {ARM PLL} \
   CONFIG.PCW_CPU_PERIPHERAL_DIVISOR0 {2} \
   CONFIG.PCW_CRYSTAL_PERIPHERAL_FREQMHZ {50} \
   CONFIG.PCW_DCI_PERIPHERAL_CLKSRC {DDR PLL} \
   CONFIG.PCW_DCI_PERIPHERAL_DIVISOR0 {52} \
   CONFIG.PCW_DCI_PERIPHERAL_DIVISOR1 {2} \
   CONFIG.PCW_DCI_PERIPHERAL_FREQMHZ {10.159} \
   CONFIG.PCW_DDRPLL_CTRL_FBDIV {21} \
   CONFIG.PCW_DDR_DDR_PLL_FREQMHZ {1050.000} \
   CONFIG.PCW_DDR_HPRLPR_QUEUE_PARTITION {HPR(0)/LPR(32)} \
   CONFIG.PCW_DDR_HPR_TO_CRITICAL_PRIORITY_LEVEL {15} \
   CONFIG.PCW_DDR_LPR_TO_CRITICAL_PRIORITY_LEVEL {2} \
   CONFIG.PCW_DDR_PERIPHERAL_CLKSRC {DDR PLL} \
   CONFIG.PCW_DDR_PERIPHERAL_DIVISOR0 {2} \
   CONFIG.PCW_DDR_PORT0_HPR_ENABLE {0} \
   CONFIG.PCW_DDR_PORT1_HPR_ENABLE {0} \
   CONFIG.PCW_DDR_PORT2_HPR_ENABLE {0} \
   CONFIG.PCW_DDR_PORT3_HPR_ENABLE {0} \
   CONFIG.PCW_DDR_PRIORITY_READPORT_0 {<Select>} \
   CONFIG.PCW_DDR_PRIORITY_READPORT_1 {<Select>} \
   CONFIG.PCW_DDR_PRIORITY_READPORT_2 {<Select>} \
   CONFIG.PCW_DDR_PRIORITY_READPORT_3 {<Select>} \
   CONFIG.PCW_DDR_PRIORITY_WRITEPORT_0 {<Select>} \
   CONFIG.PCW_DDR_PRIORITY_WRITEPORT_1 {<Select>} \
   CONFIG.PCW_DDR_PRIORITY_WRITEPORT_2 {<Select>} \
   CONFIG.PCW_DDR_PRIORITY_WRITEPORT_3 {<Select>} \
   CONFIG.PCW_DDR_RAM_BASEADDR {0x00100000} \
   CONFIG.PCW_DDR_RAM_HIGHADDR {0x1FFFFFFF} \
   CONFIG.PCW_DDR_WRITE_TO_CRITICAL_PRIORITY_LEVEL {2} \
   CONFIG.PCW_DM_WIDTH {4} \
   CONFIG.PCW_DQS_WIDTH {4} \
   CONFIG.PCW_DQ_WIDTH {32} \
   CONFIG.PCW_ENET0_BASEADDR {0xE000B000} \
   CONFIG.PCW_ENET0_ENET0_IO {MIO 16 .. 27} \
   CONFIG.PCW_ENET0_GRP_MDIO_ENABLE {1} \
   CONFIG.PCW_ENET0_GRP_MDIO_IO {MIO 52 .. 53} \
   CONFIG.PCW_ENET0_HIGHADDR {0xE000BFFF} \
   CONFIG.PCW_ENET0_PERIPHERAL_CLKSRC {IO PLL} \
   CONFIG.PCW_ENET0_PERIPHERAL_DIVISOR0 {8} \
   CONFIG.PCW_ENET0_PERIPHERAL_DIVISOR1 {1} \
   CONFIG.PCW_ENET0_PERIPHERAL_ENABLE {1} \
   CONFIG.PCW_ENET0_PERIPHERAL_FREQMHZ {1000 Mbps} \
   CONFIG.PCW_ENET0_RESET_ENABLE {0} \
   CONFIG.PCW_ENET0_RESET_IO {<Select>} \
   CONFIG.PCW_ENET1_BASEADDR {0xE000C000} \
   CONFIG.PCW_ENET1_ENET1_IO {<Select>} \
   CONFIG.PCW_ENET1_GRP_MDIO_ENABLE {0} \
   CONFIG.PCW_ENET1_GRP_MDIO_IO {<Select>} \
   CONFIG.PCW_ENET1_HIGHADDR {0xE000CFFF} \
   CONFIG.PCW_ENET1_PERIPHERAL_CLKSRC {IO PLL} \
   CONFIG.PCW_ENET1_PERIPHERAL_DIVISOR0 {1} \
   CONFIG.PCW_ENET1_PERIPHERAL_DIVISOR1 {1} \
   CONFIG.PCW_ENET1_PERIPHERAL_ENABLE {0} \
   CONFIG.PCW_ENET1_PERIPHERAL_FREQMHZ {1000 Mbps} \
   CONFIG.PCW_ENET1_RESET_ENABLE {0} \
   CONFIG.PCW_ENET1_RESET_IO {<Select>} \
   CONFIG.PCW_ENET_RESET_ENABLE {0} \
   CONFIG.PCW_ENET_RESET_POLARITY {Active Low} \
   CONFIG.PCW_ENET_RESET_SELECT {<Select>} \
   CONFIG.PCW_EN_4K_TIMER {0} \
   CONFIG.PCW_EN_CAN0 {0} \
   CONFIG.PCW_EN_CAN1 {0} \
   CONFIG.PCW_EN_CLK0_PORT {1} \
   CONFIG.PCW_EN_CLK1_PORT {1} \
   CONFIG.PCW_EN_CLK2_PORT {1} \
   CONFIG.PCW_EN_CLK3_PORT {0} \
   CONFIG.PCW_EN_CLKTRIG0_PORT {0} \
   CONFIG.PCW_EN_CLKTRIG1_PORT {0} \
   CONFIG.PCW_EN_CLKTRIG2_PORT {0} \
   CONFIG.PCW_EN_CLKTRIG3_PORT {0} \
   CONFIG.PCW_EN_DDR {1} \
   CONFIG.PCW_EN_EMIO_CAN0 {0} \
   CONFIG.PCW_EN_EMIO_CAN1 {0} \
   CONFIG.PCW_EN_EMIO_CD_SDIO0 {0} \
   CONFIG.PCW_EN_EMIO_CD_SDIO1 {0} \
   CONFIG.PCW_EN_EMIO_ENET0 {0} \
   CONFIG.PCW_EN_EMIO_ENET1 {0} \
   CONFIG.PCW_EN_EMIO_GPIO {0} \
   CONFIG.PCW_EN_EMIO_I2C0 {0} \
   CONFIG.PCW_EN_EMIO_I2C1 {0} \
   CONFIG.PCW_EN_EMIO_MODEM_UART0 {0} \
   CONFIG.PCW_EN_EMIO_MODEM_UART1 {0} \
   CONFIG.PCW_EN_EMIO_PJTAG {0} \
   CONFIG.PCW_EN_EMIO_SDIO0 {0} \
   CONFIG.PCW_EN_EMIO_SDIO1 {0} \
   CONFIG.PCW_EN_EMIO_SPI0 {0} \
   CONFIG.PCW_EN_EMIO_SPI1 {0} \
   CONFIG.PCW_EN_EMIO_SRAM_INT {0} \
   CONFIG.PCW_EN_EMIO_TRACE {0} \
   CONFIG.PCW_EN_EMIO_TTC0 {0} \
   CONFIG.PCW_EN_EMIO_TTC1 {0} \
   CONFIG.PCW_EN_EMIO_UART0 {0} \
   CONFIG.PCW_EN_EMIO_UART1 {0} \
   CONFIG.PCW_EN_EMIO_WDT {0} \
   CONFIG.PCW_EN_EMIO_WP_SDIO0 {0} \
   CONFIG.PCW_EN_EMIO_WP_SDIO1 {0} \
   CONFIG.PCW_EN_ENET0 {1} \
   CONFIG.PCW_EN_ENET1 {0} \
   CONFIG.PCW_EN_GPIO {0} \
   CONFIG.PCW_EN_I2C0 {1} \
   CONFIG.PCW_EN_I2C1 {0} \
   CONFIG.PCW_EN_MODEM_UART0 {0} \
   CONFIG.PCW_EN_MODEM_UART1 {0} \
   CONFIG.PCW_EN_PJTAG {0} \
   CONFIG.PCW_EN_PTP_ENET0 {0} \
   CONFIG.PCW_EN_PTP_ENET1 {0} \
   CONFIG.PCW_EN_QSPI {1} \
   CONFIG.PCW_EN_RST0_PORT {1} \
   CONFIG.PCW_EN_RST1_PORT {0} \
   CONFIG.PCW_EN_RST2_PORT {0} \
   CONFIG.PCW_EN_RST3_PORT {0} \
   CONFIG.PCW_EN_SDIO0 {1} \
   CONFIG.PCW_EN_SDIO1 {0} \
   CONFIG.PCW_EN_SMC {0} \
   CONFIG.PCW_EN_SPI0 {0} \
   CONFIG.PCW_EN_SPI1 {0} \
   CONFIG.PCW_EN_TRACE {0} \
   CONFIG.PCW_EN_TTC0 {0} \
   CONFIG.PCW_EN_TTC1 {0} \
   CONFIG.PCW_EN_UART0 {1} \
   CONFIG.PCW_EN_UART1 {0} \
   CONFIG.PCW_EN_USB0 {1} \
   CONFIG.PCW_EN_USB1 {0} \
   CONFIG.PCW_EN_WDT {0} \
   CONFIG.PCW_FCLK0_PERIPHERAL_CLKSRC {IO PLL} \
   CONFIG.PCW_FCLK0_PERIPHERAL_DIVISOR0 {5} \
   CONFIG.PCW_FCLK0_PERIPHERAL_DIVISOR1 {2} \
   CONFIG.PCW_FCLK1_PERIPHERAL_CLKSRC {IO PLL} \
   CONFIG.PCW_FCLK1_PERIPHERAL_DIVISOR0 {7} \
   CONFIG.PCW_FCLK1_PERIPHERAL_DIVISOR1 {1} \
   CONFIG.PCW_FCLK2_PERIPHERAL_CLKSRC {IO PLL} \
   CONFIG.PCW_FCLK2_PERIPHERAL_DIVISOR0 {5} \
   CONFIG.PCW_FCLK2_PERIPHERAL_DIVISOR1 {1} \
   CONFIG.PCW_FCLK3_PERIPHERAL_CLKSRC {IO PLL} \
   CONFIG.PCW_FCLK3_PERIPHERAL_DIVISOR0 {1} \
   CONFIG.PCW_FCLK3_PERIPHERAL_DIVISOR1 {1} \
   CONFIG.PCW_FCLK_CLK0_BUF {TRUE} \
   CONFIG.PCW_FCLK_CLK1_BUF {TRUE} \
   CONFIG.PCW_FCLK_CLK2_BUF {TRUE} \
   CONFIG.PCW_FCLK_CLK3_BUF {FALSE} \
   CONFIG.PCW_FPGA0_PERIPHERAL_FREQMHZ {100} \
   CONFIG.PCW_FPGA1_PERIPHERAL_FREQMHZ {142} \
   CONFIG.PCW_FPGA2_PERIPHERAL_FREQMHZ {200} \
   CONFIG.PCW_FPGA3_PERIPHERAL_FREQMHZ {100} \
   CONFIG.PCW_FPGA_FCLK0_ENABLE {1} \
   CONFIG.PCW_FPGA_FCLK1_ENABLE {1} \
   CONFIG.PCW_FPGA_FCLK2_ENABLE {1} \
   CONFIG.PCW_FPGA_FCLK3_ENABLE {0} \
   CONFIG.PCW_FTM_CTI_IN0 {<Select>} \
   CONFIG.PCW_FTM_CTI_IN1 {<Select>} \
   CONFIG.PCW_FTM_CTI_IN2 {<Select>} \
   CONFIG.PCW_FTM_CTI_IN3 {<Select>} \
   CONFIG.PCW_FTM_CTI_OUT0 {<Select>} \
   CONFIG.PCW_FTM_CTI_OUT1 {<Select>} \
   CONFIG.PCW_FTM_CTI_OUT2 {<Select>} \
   CONFIG.PCW_FTM_CTI_OUT3 {<Select>} \
   CONFIG.PCW_GPIO_BASEADDR {0xE000A000} \
   CONFIG.PCW_GPIO_EMIO_GPIO_ENABLE {0} \
   CONFIG.PCW_GPIO_EMIO_GPIO_IO {<Select>} \
   CONFIG.PCW_GPIO_EMIO_GPIO_WIDTH {8} \
   CONFIG.PCW_GPIO_HIGHADDR {0xE000AFFF} \
   CONFIG.PCW_GPIO_MIO_GPIO_ENABLE {0} \
   CONFIG.PCW_GPIO_MIO_GPIO_IO {<Select>} \
   CONFIG.PCW_GPIO_PERIPHERAL_ENABLE {0} \
   CONFIG.PCW_I2C0_BASEADDR {0xE0004000} \
   CONFIG.PCW_I2C0_GRP_INT_ENABLE {1} \
   CONFIG.PCW_I2C0_GRP_INT_IO {EMIO} \
   CONFIG.PCW_I2C0_HIGHADDR {0xE0004FFF} \
   CONFIG.PCW_I2C0_I2C0_IO {MIO 50 .. 51} \
   CONFIG.PCW_I2C0_PERIPHERAL_ENABLE {1} \
   CONFIG.PCW_I2C0_RESET_ENABLE {0} \
   CONFIG.PCW_I2C0_RESET_IO {<Select>} \
   CONFIG.PCW_I2C1_BASEADDR {0xE0005000} \
   CONFIG.PCW_I2C1_GRP_INT_ENABLE {0} \
   CONFIG.PCW_I2C1_GRP_INT_IO {<Select>} \
   CONFIG.PCW_I2C1_HIGHADDR {0xE0005FFF} \
   CONFIG.PCW_I2C1_I2C1_IO {<Select>} \
   CONFIG.PCW_I2C1_PERIPHERAL_ENABLE {0} \
   CONFIG.PCW_I2C1_RESET_ENABLE {0} \
   CONFIG.PCW_I2C1_RESET_IO {<Select>} \
   CONFIG.PCW_I2C_PERIPHERAL_FREQMHZ {108.333336} \
   CONFIG.PCW_I2C_RESET_ENABLE {0} \
   CONFIG.PCW_I2C_RESET_POLARITY {Active Low} \
   CONFIG.PCW_I2C_RESET_SELECT {<Select>} \
   CONFIG.PCW_IMPORT_BOARD_PRESET {None} \
   CONFIG.PCW_INCLUDE_ACP_TRANS_CHECK {0} \
   CONFIG.PCW_INCLUDE_TRACE_BUFFER {0} \
   CONFIG.PCW_IOPLL_CTRL_FBDIV {20} \
   CONFIG.PCW_IO_IO_PLL_FREQMHZ {1000.000} \
   CONFIG.PCW_IRQ_F2P_INTR {1} \
   CONFIG.PCW_IRQ_F2P_MODE {DIRECT} \
   CONFIG.PCW_MIO_0_DIRECTION {<Select>} \
   CONFIG.PCW_MIO_0_IOTYPE {<Select>} \
   CONFIG.PCW_MIO_0_PULLUP {<Select>} \
   CONFIG.PCW_MIO_0_SLEW {<Select>} \
   CONFIG.PCW_MIO_10_DIRECTION {<Select>} \
   CONFIG.PCW_MIO_10_IOTYPE {<Select>} \
   CONFIG.PCW_MIO_10_PULLUP {<Select>} \
   CONFIG.PCW_MIO_10_SLEW {<Select>} \
   CONFIG.PCW_MIO_11_DIRECTION {<Select>} \
   CONFIG.PCW_MIO_11_IOTYPE {<Select>} \
   CONFIG.PCW_MIO_11_PULLUP {<Select>} \
   CONFIG.PCW_MIO_11_SLEW {<Select>} \
   CONFIG.PCW_MIO_12_DIRECTION {<Select>} \
   CONFIG.PCW_MIO_12_IOTYPE {<Select>} \
   CONFIG.PCW_MIO_12_PULLUP {<Select>} \
   CONFIG.PCW_MIO_12_SLEW {<Select>} \
   CONFIG.PCW_MIO_13_DIRECTION {<Select>} \
   CONFIG.PCW_MIO_13_IOTYPE {<Select>} \
   CONFIG.PCW_MIO_13_PULLUP {<Select>} \
   CONFIG.PCW_MIO_13_SLEW {<Select>} \
   CONFIG.PCW_MIO_14_DIRECTION {in} \
   CONFIG.PCW_MIO_14_IOTYPE {LVCMOS 3.3V} \
   CONFIG.PCW_MIO_14_PULLUP {enabled} \
   CONFIG.PCW_MIO_14_SLEW {slow} \
   CONFIG.PCW_MIO_15_DIRECTION {out} \
   CONFIG.PCW_MIO_15_IOTYPE {LVCMOS 3.3V} \
   CONFIG.PCW_MIO_15_PULLUP {enabled} \
   CONFIG.PCW_MIO_15_SLEW {slow} \
   CONFIG.PCW_MIO_16_DIRECTION {out} \
   CONFIG.PCW_MIO_16_IOTYPE {LVCMOS 1.8V} \
   CONFIG.PCW_MIO_16_PULLUP {enabled} \
   CONFIG.PCW_MIO_16_SLEW {slow} \
   CONFIG.PCW_MIO_17_DIRECTION {out} \
   CONFIG.PCW_MIO_17_IOTYPE {LVCMOS 1.8V} \
   CONFIG.PCW_MIO_17_PULLUP {enabled} \
   CONFIG.PCW_MIO_17_SLEW {slow} \
   CONFIG.PCW_MIO_18_DIRECTION {out} \
   CONFIG.PCW_MIO_18_IOTYPE {LVCMOS 1.8V} \
   CONFIG.PCW_MIO_18_PULLUP {enabled} \
   CONFIG.PCW_MIO_18_SLEW {slow} \
   CONFIG.PCW_MIO_19_DIRECTION {out} \
   CONFIG.PCW_MIO_19_IOTYPE {LVCMOS 1.8V} \
   CONFIG.PCW_MIO_19_PULLUP {enabled} \
   CONFIG.PCW_MIO_19_SLEW {slow} \
   CONFIG.PCW_MIO_1_DIRECTION {out} \
   CONFIG.PCW_MIO_1_IOTYPE {LVCMOS 3.3V} \
   CONFIG.PCW_MIO_1_PULLUP {enabled} \
   CONFIG.PCW_MIO_1_SLEW {slow} \
   CONFIG.PCW_MIO_20_DIRECTION {out} \
   CONFIG.PCW_MIO_20_IOTYPE {LVCMOS 1.8V} \
   CONFIG.PCW_MIO_20_PULLUP {enabled} \
   CONFIG.PCW_MIO_20_SLEW {slow} \
   CONFIG.PCW_MIO_21_DIRECTION {out} \
   CONFIG.PCW_MIO_21_IOTYPE {LVCMOS 1.8V} \
   CONFIG.PCW_MIO_21_PULLUP {enabled} \
   CONFIG.PCW_MIO_21_SLEW {slow} \
   CONFIG.PCW_MIO_22_DIRECTION {in} \
   CONFIG.PCW_MIO_22_IOTYPE {LVCMOS 1.8V} \
   CONFIG.PCW_MIO_22_PULLUP {enabled} \
   CONFIG.PCW_MIO_22_SLEW {slow} \
   CONFIG.PCW_MIO_23_DIRECTION {in} \
   CONFIG.PCW_MIO_23_IOTYPE {LVCMOS 1.8V} \
   CONFIG.PCW_MIO_23_PULLUP {enabled} \
   CONFIG.PCW_MIO_23_SLEW {slow} \
   CONFIG.PCW_MIO_24_DIRECTION {in} \
   CONFIG.PCW_MIO_24_IOTYPE {LVCMOS 1.8V} \
   CONFIG.PCW_MIO_24_PULLUP {enabled} \
   CONFIG.PCW_MIO_24_SLEW {slow} \
   CONFIG.PCW_MIO_25_DIRECTION {in} \
   CONFIG.PCW_MIO_25_IOTYPE {LVCMOS 1.8V} \
   CONFIG.PCW_MIO_25_PULLUP {enabled} \
   CONFIG.PCW_MIO_25_SLEW {slow} \
   CONFIG.PCW_MIO_26_DIRECTION {in} \
   CONFIG.PCW_MIO_26_IOTYPE {LVCMOS 1.8V} \
   CONFIG.PCW_MIO_26_PULLUP {enabled} \
   CONFIG.PCW_MIO_26_SLEW {slow} \
   CONFIG.PCW_MIO_27_DIRECTION {in} \
   CONFIG.PCW_MIO_27_IOTYPE {LVCMOS 1.8V} \
   CONFIG.PCW_MIO_27_PULLUP {enabled} \
   CONFIG.PCW_MIO_27_SLEW {slow} \
   CONFIG.PCW_MIO_28_DIRECTION {inout} \
   CONFIG.PCW_MIO_28_IOTYPE {LVCMOS 1.8V} \
   CONFIG.PCW_MIO_28_PULLUP {enabled} \
   CONFIG.PCW_MIO_28_SLEW {slow} \
   CONFIG.PCW_MIO_29_DIRECTION {in} \
   CONFIG.PCW_MIO_29_IOTYPE {LVCMOS 1.8V} \
   CONFIG.PCW_MIO_29_PULLUP {enabled} \
   CONFIG.PCW_MIO_29_SLEW {slow} \
   CONFIG.PCW_MIO_2_DIRECTION {inout} \
   CONFIG.PCW_MIO_2_IOTYPE {LVCMOS 3.3V} \
   CONFIG.PCW_MIO_2_PULLUP {disabled} \
   CONFIG.PCW_MIO_2_SLEW {slow} \
   CONFIG.PCW_MIO_30_DIRECTION {out} \
   CONFIG.PCW_MIO_30_IOTYPE {LVCMOS 1.8V} \
   CONFIG.PCW_MIO_30_PULLUP {enabled} \
   CONFIG.PCW_MIO_30_SLEW {slow} \
   CONFIG.PCW_MIO_31_DIRECTION {in} \
   CONFIG.PCW_MIO_31_IOTYPE {LVCMOS 1.8V} \
   CONFIG.PCW_MIO_31_PULLUP {enabled} \
   CONFIG.PCW_MIO_31_SLEW {slow} \
   CONFIG.PCW_MIO_32_DIRECTION {inout} \
   CONFIG.PCW_MIO_32_IOTYPE {LVCMOS 1.8V} \
   CONFIG.PCW_MIO_32_PULLUP {enabled} \
   CONFIG.PCW_MIO_32_SLEW {slow} \
   CONFIG.PCW_MIO_33_DIRECTION {inout} \
   CONFIG.PCW_MIO_33_IOTYPE {LVCMOS 1.8V} \
   CONFIG.PCW_MIO_33_PULLUP {enabled} \
   CONFIG.PCW_MIO_33_SLEW {slow} \
   CONFIG.PCW_MIO_34_DIRECTION {inout} \
   CONFIG.PCW_MIO_34_IOTYPE {LVCMOS 1.8V} \
   CONFIG.PCW_MIO_34_PULLUP {enabled} \
   CONFIG.PCW_MIO_34_SLEW {slow} \
   CONFIG.PCW_MIO_35_DIRECTION {inout} \
   CONFIG.PCW_MIO_35_IOTYPE {LVCMOS 1.8V} \
   CONFIG.PCW_MIO_35_PULLUP {enabled} \
   CONFIG.PCW_MIO_35_SLEW {slow} \
   CONFIG.PCW_MIO_36_DIRECTION {in} \
   CONFIG.PCW_MIO_36_IOTYPE {LVCMOS 1.8V} \
   CONFIG.PCW_MIO_36_PULLUP {enabled} \
   CONFIG.PCW_MIO_36_SLEW {slow} \
   CONFIG.PCW_MIO_37_DIRECTION {inout} \
   CONFIG.PCW_MIO_37_IOTYPE {LVCMOS 1.8V} \
   CONFIG.PCW_MIO_37_PULLUP {enabled} \
   CONFIG.PCW_MIO_37_SLEW {slow} \
   CONFIG.PCW_MIO_38_DIRECTION {inout} \
   CONFIG.PCW_MIO_38_IOTYPE {LVCMOS 1.8V} \
   CONFIG.PCW_MIO_38_PULLUP {enabled} \
   CONFIG.PCW_MIO_38_SLEW {slow} \
   CONFIG.PCW_MIO_39_DIRECTION {inout} \
   CONFIG.PCW_MIO_39_IOTYPE {LVCMOS 1.8V} \
   CONFIG.PCW_MIO_39_PULLUP {enabled} \
   CONFIG.PCW_MIO_39_SLEW {slow} \
   CONFIG.PCW_MIO_3_DIRECTION {inout} \
   CONFIG.PCW_MIO_3_IOTYPE {LVCMOS 3.3V} \
   CONFIG.PCW_MIO_3_PULLUP {disabled} \
   CONFIG.PCW_MIO_3_SLEW {slow} \
   CONFIG.PCW_MIO_40_DIRECTION {inout} \
   CONFIG.PCW_MIO_40_IOTYPE {LVCMOS 1.8V} \
   CONFIG.PCW_MIO_40_PULLUP {enabled} \
   CONFIG.PCW_MIO_40_SLEW {slow} \
   CONFIG.PCW_MIO_41_DIRECTION {inout} \
   CONFIG.PCW_MIO_41_IOTYPE {LVCMOS 1.8V} \
   CONFIG.PCW_MIO_41_PULLUP {enabled} \
   CONFIG.PCW_MIO_41_SLEW {slow} \
   CONFIG.PCW_MIO_42_DIRECTION {inout} \
   CONFIG.PCW_MIO_42_IOTYPE {LVCMOS 1.8V} \
   CONFIG.PCW_MIO_42_PULLUP {enabled} \
   CONFIG.PCW_MIO_42_SLEW {slow} \
   CONFIG.PCW_MIO_43_DIRECTION {inout} \
   CONFIG.PCW_MIO_43_IOTYPE {LVCMOS 1.8V} \
   CONFIG.PCW_MIO_43_PULLUP {enabled} \
   CONFIG.PCW_MIO_43_SLEW {slow} \
   CONFIG.PCW_MIO_44_DIRECTION {inout} \
   CONFIG.PCW_MIO_44_IOTYPE {LVCMOS 1.8V} \
   CONFIG.PCW_MIO_44_PULLUP {enabled} \
   CONFIG.PCW_MIO_44_SLEW {slow} \
   CONFIG.PCW_MIO_45_DIRECTION {inout} \
   CONFIG.PCW_MIO_45_IOTYPE {LVCMOS 1.8V} \
   CONFIG.PCW_MIO_45_PULLUP {enabled} \
   CONFIG.PCW_MIO_45_SLEW {slow} \
   CONFIG.PCW_MIO_46_DIRECTION {<Select>} \
   CONFIG.PCW_MIO_46_IOTYPE {<Select>} \
   CONFIG.PCW_MIO_46_PULLUP {<Select>} \
   CONFIG.PCW_MIO_46_SLEW {<Select>} \
   CONFIG.PCW_MIO_47_DIRECTION {in} \
   CONFIG.PCW_MIO_47_IOTYPE {LVCMOS 1.8V} \
   CONFIG.PCW_MIO_47_PULLUP {enabled} \
   CONFIG.PCW_MIO_47_SLEW {slow} \
   CONFIG.PCW_MIO_48_DIRECTION {<Select>} \
   CONFIG.PCW_MIO_48_IOTYPE {<Select>} \
   CONFIG.PCW_MIO_48_PULLUP {<Select>} \
   CONFIG.PCW_MIO_48_SLEW {<Select>} \
   CONFIG.PCW_MIO_49_DIRECTION {<Select>} \
   CONFIG.PCW_MIO_49_IOTYPE {<Select>} \
   CONFIG.PCW_MIO_49_PULLUP {<Select>} \
   CONFIG.PCW_MIO_49_SLEW {<Select>} \
   CONFIG.PCW_MIO_4_DIRECTION {inout} \
   CONFIG.PCW_MIO_4_IOTYPE {LVCMOS 3.3V} \
   CONFIG.PCW_MIO_4_PULLUP {disabled} \
   CONFIG.PCW_MIO_4_SLEW {slow} \
   CONFIG.PCW_MIO_50_DIRECTION {inout} \
   CONFIG.PCW_MIO_50_IOTYPE {LVCMOS 1.8V} \
   CONFIG.PCW_MIO_50_PULLUP {enabled} \
   CONFIG.PCW_MIO_50_SLEW {slow} \
   CONFIG.PCW_MIO_51_DIRECTION {inout} \
   CONFIG.PCW_MIO_51_IOTYPE {LVCMOS 1.8V} \
   CONFIG.PCW_MIO_51_PULLUP {enabled} \
   CONFIG.PCW_MIO_51_SLEW {slow} \
   CONFIG.PCW_MIO_52_DIRECTION {out} \
   CONFIG.PCW_MIO_52_IOTYPE {LVCMOS 1.8V} \
   CONFIG.PCW_MIO_52_PULLUP {enabled} \
   CONFIG.PCW_MIO_52_SLEW {slow} \
   CONFIG.PCW_MIO_53_DIRECTION {inout} \
   CONFIG.PCW_MIO_53_IOTYPE {LVCMOS 1.8V} \
   CONFIG.PCW_MIO_53_PULLUP {enabled} \
   CONFIG.PCW_MIO_53_SLEW {slow} \
   CONFIG.PCW_MIO_5_DIRECTION {inout} \
   CONFIG.PCW_MIO_5_IOTYPE {LVCMOS 3.3V} \
   CONFIG.PCW_MIO_5_PULLUP {disabled} \
   CONFIG.PCW_MIO_5_SLEW {slow} \
   CONFIG.PCW_MIO_6_DIRECTION {out} \
   CONFIG.PCW_MIO_6_IOTYPE {LVCMOS 3.3V} \
   CONFIG.PCW_MIO_6_PULLUP {disabled} \
   CONFIG.PCW_MIO_6_SLEW {slow} \
   CONFIG.PCW_MIO_7_DIRECTION {<Select>} \
   CONFIG.PCW_MIO_7_IOTYPE {<Select>} \
   CONFIG.PCW_MIO_7_PULLUP {<Select>} \
   CONFIG.PCW_MIO_7_SLEW {<Select>} \
   CONFIG.PCW_MIO_8_DIRECTION {out} \
   CONFIG.PCW_MIO_8_IOTYPE {LVCMOS 3.3V} \
   CONFIG.PCW_MIO_8_PULLUP {disabled} \
   CONFIG.PCW_MIO_8_SLEW {slow} \
   CONFIG.PCW_MIO_9_DIRECTION {<Select>} \
   CONFIG.PCW_MIO_9_IOTYPE {<Select>} \
   CONFIG.PCW_MIO_9_PULLUP {<Select>} \
   CONFIG.PCW_MIO_9_SLEW {<Select>} \
   CONFIG.PCW_MIO_PRIMITIVE {54} \
   CONFIG.PCW_MIO_TREE_PERIPHERALS { \
     0#Enet 0 \
     0#Enet 0 \
     0#Enet 0 \
     0#Enet 0 \
     0#Enet 0 \
     0#Enet 0 \
     0#Enet 0 \
     0#I2C 0#Enet \
     0#SD 0#SD \
     0#SD 0#SD \
     0#SD 0#SD \
     0#USB 0#USB \
     0#USB 0#USB \
     0#USB 0#USB \
     0#USB 0#USB \
     0#USB 0#USB \
     0#USB 0#USB \
     0#unassigned#SD 0#unassigned#unassigned#I2C \
     Flash#Quad SPI \
     Flash#Quad SPI \
     Flash#Quad SPI \
     Flash#Quad SPI \
     Flash#Quad SPI \
     Flash#unassigned#Quad SPI \
     Flash#unassigned#unassigned#unassigned#unassigned#unassigned#UART 0#UART \
     unassigned#Quad SPI \
   } \
   CONFIG.PCW_MIO_TREE_SIGNALS {unassigned#qspi0_ss_b#qspi0_io[0]#qspi0_io[1]#qspi0_io[2]#qspi0_io[3]/HOLD_B#qspi0_sclk#unassigned#qspi_fbclk#unassigned#unassigned#unassigned#unassigned#unassigned#rx#tx#tx_clk#txd[0]#txd[1]#txd[2]#txd[3]#tx_ctl#rx_clk#rxd[0]#rxd[1]#rxd[2]#rxd[3]#rx_ctl#data[4]#dir#stp#nxt#data[0]#data[1]#data[2]#data[3]#clk#data[5]#data[6]#data[7]#clk#cmd#data[0]#data[1]#data[2]#data[3]#unassigned#cd#unassigned#unassigned#scl#sda#mdc#mdio} \
   CONFIG.PCW_M_AXI_GP0_ENABLE_STATIC_REMAP {0} \
   CONFIG.PCW_M_AXI_GP0_ID_WIDTH {12} \
   CONFIG.PCW_M_AXI_GP0_SUPPORT_NARROW_BURST {0} \
   CONFIG.PCW_M_AXI_GP0_THREAD_ID_WIDTH {12} \
   CONFIG.PCW_M_AXI_GP1_ENABLE_STATIC_REMAP {0} \
   CONFIG.PCW_M_AXI_GP1_ID_WIDTH {12} \
   CONFIG.PCW_M_AXI_GP1_SUPPORT_NARROW_BURST {0} \
   CONFIG.PCW_M_AXI_GP1_THREAD_ID_WIDTH {12} \
   CONFIG.PCW_NAND_CYCLES_T_AR {1} \
   CONFIG.PCW_NAND_CYCLES_T_CLR {1} \
   CONFIG.PCW_NAND_CYCLES_T_RC {11} \
   CONFIG.PCW_NAND_CYCLES_T_REA {1} \
   CONFIG.PCW_NAND_CYCLES_T_RR {1} \
   CONFIG.PCW_NAND_CYCLES_T_WC {11} \
   CONFIG.PCW_NAND_CYCLES_T_WP {1} \
   CONFIG.PCW_NAND_GRP_D8_ENABLE {0} \
   CONFIG.PCW_NAND_GRP_D8_IO {<Select>} \
   CONFIG.PCW_NAND_NAND_IO {<Select>} \
   CONFIG.PCW_NAND_PERIPHERAL_ENABLE {0} \
   CONFIG.PCW_NOR_CS0_T_CEOE {1} \
   CONFIG.PCW_NOR_CS0_T_PC {1} \
   CONFIG.PCW_NOR_CS0_T_RC {11} \
   CONFIG.PCW_NOR_CS0_T_TR {1} \
   CONFIG.PCW_NOR_CS0_T_WC {11} \
   CONFIG.PCW_NOR_CS0_T_WP {1} \
   CONFIG.PCW_NOR_CS0_WE_TIME {0} \
   CONFIG.PCW_NOR_CS1_T_CEOE {1} \
   CONFIG.PCW_NOR_CS1_T_PC {1} \
   CONFIG.PCW_NOR_CS1_T_RC {11} \
   CONFIG.PCW_NOR_CS1_T_TR {1} \
   CONFIG.PCW_NOR_CS1_T_WC {11} \
   CONFIG.PCW_NOR_CS1_T_WP {1} \
   CONFIG.PCW_NOR_CS1_WE_TIME {0} \
   CONFIG.PCW_NOR_GRP_A25_ENABLE {0} \
   CONFIG.PCW_NOR_GRP_A25_IO {<Select>} \
   CONFIG.PCW_NOR_GRP_CS0_ENABLE {0} \
   CONFIG.PCW_NOR_GRP_CS0_IO {<Select>} \
   CONFIG.PCW_NOR_GRP_CS1_ENABLE {0} \
   CONFIG.PCW_NOR_GRP_CS1_IO {<Select>} \
   CONFIG.PCW_NOR_GRP_SRAM_CS0_ENABLE {0} \
   CONFIG.PCW_NOR_GRP_SRAM_CS0_IO {<Select>} \
   CONFIG.PCW_NOR_GRP_SRAM_CS1_ENABLE {0} \
   CONFIG.PCW_NOR_GRP_SRAM_CS1_IO {<Select>} \
   CONFIG.PCW_NOR_GRP_SRAM_INT_ENABLE {0} \
   CONFIG.PCW_NOR_GRP_SRAM_INT_IO {<Select>} \
   CONFIG.PCW_NOR_NOR_IO {<Select>} \
   CONFIG.PCW_NOR_PERIPHERAL_ENABLE {0} \
   CONFIG.PCW_NOR_SRAM_CS0_T_CEOE {1} \
   CONFIG.PCW_NOR_SRAM_CS0_T_PC {1} \
   CONFIG.PCW_NOR_SRAM_CS0_T_RC {11} \
   CONFIG.PCW_NOR_SRAM_CS0_T_TR {1} \
   CONFIG.PCW_NOR_SRAM_CS0_T_WC {11} \
   CONFIG.PCW_NOR_SRAM_CS0_T_WP {1} \
   CONFIG.PCW_NOR_SRAM_CS0_WE_TIME {0} \
   CONFIG.PCW_NOR_SRAM_CS1_T_CEOE {1} \
   CONFIG.PCW_NOR_SRAM_CS1_T_PC {1} \
   CONFIG.PCW_NOR_SRAM_CS1_T_RC {11} \
   CONFIG.PCW_NOR_SRAM_CS1_T_TR {1} \
   CONFIG.PCW_NOR_SRAM_CS1_T_WC {11} \
   CONFIG.PCW_NOR_SRAM_CS1_T_WP {1} \
   CONFIG.PCW_NOR_SRAM_CS1_WE_TIME {0} \
   CONFIG.PCW_OVERRIDE_BASIC_CLOCK {0} \
   CONFIG.PCW_P2F_CAN0_INTR {0} \
   CONFIG.PCW_P2F_CAN1_INTR {0} \
   CONFIG.PCW_P2F_CTI_INTR {0} \
   CONFIG.PCW_P2F_DMAC0_INTR {0} \
   CONFIG.PCW_P2F_DMAC1_INTR {0} \
   CONFIG.PCW_P2F_DMAC2_INTR {0} \
   CONFIG.PCW_P2F_DMAC3_INTR {0} \
   CONFIG.PCW_P2F_DMAC4_INTR {0} \
   CONFIG.PCW_P2F_DMAC5_INTR {0} \
   CONFIG.PCW_P2F_DMAC6_INTR {0} \
   CONFIG.PCW_P2F_DMAC7_INTR {0} \
   CONFIG.PCW_P2F_DMAC_ABORT_INTR {0} \
   CONFIG.PCW_P2F_ENET0_INTR {0} \
   CONFIG.PCW_P2F_ENET1_INTR {0} \
   CONFIG.PCW_P2F_GPIO_INTR {0} \
   CONFIG.PCW_P2F_I2C0_INTR {0} \
   CONFIG.PCW_P2F_I2C1_INTR {0} \
   CONFIG.PCW_P2F_QSPI_INTR {0} \
   CONFIG.PCW_P2F_SDIO0_INTR {0} \
   CONFIG.PCW_P2F_SDIO1_INTR {0} \
   CONFIG.PCW_P2F_SMC_INTR {0} \
   CONFIG.PCW_P2F_SPI0_INTR {0} \
   CONFIG.PCW_P2F_SPI1_INTR {0} \
   CONFIG.PCW_P2F_UART0_INTR {0} \
   CONFIG.PCW_P2F_UART1_INTR {0} \
   CONFIG.PCW_P2F_USB0_INTR {0} \
   CONFIG.PCW_P2F_USB1_INTR {0} \
   CONFIG.PCW_PACKAGE_DDR_BOARD_DELAY0 {0.223} \
   CONFIG.PCW_PACKAGE_DDR_BOARD_DELAY1 {0.212} \
   CONFIG.PCW_PACKAGE_DDR_BOARD_DELAY2 {0.085} \
   CONFIG.PCW_PACKAGE_DDR_BOARD_DELAY3 {0.092} \
   CONFIG.PCW_PACKAGE_DDR_DQS_TO_CLK_DELAY_0 {0.040} \
   CONFIG.PCW_PACKAGE_DDR_DQS_TO_CLK_DELAY_1 {0.058} \
   CONFIG.PCW_PACKAGE_DDR_DQS_TO_CLK_DELAY_2 {-0.009} \
   CONFIG.PCW_PACKAGE_DDR_DQS_TO_CLK_DELAY_3 {-0.033} \
   CONFIG.PCW_PACKAGE_NAME {clg400} \
   CONFIG.PCW_PCAP_PERIPHERAL_CLKSRC {IO PLL} \
   CONFIG.PCW_PCAP_PERIPHERAL_DIVISOR0 {5} \
   CONFIG.PCW_PCAP_PERIPHERAL_FREQMHZ {200} \
   CONFIG.PCW_PERIPHERAL_BOARD_PRESET {None} \
   CONFIG.PCW_PJTAG_PERIPHERAL_ENABLE {0} \
   CONFIG.PCW_PJTAG_PJTAG_IO {<Select>} \
   CONFIG.PCW_PLL_BYPASSMODE_ENABLE {0} \
   CONFIG.PCW_PRESET_BANK0_VOLTAGE {LVCMOS 3.3V} \
   CONFIG.PCW_PRESET_BANK1_VOLTAGE {LVCMOS 1.8V} \
   CONFIG.PCW_PS7_SI_REV {PRODUCTION} \
   CONFIG.PCW_QSPI_GRP_FBCLK_ENABLE {1} \
   CONFIG.PCW_QSPI_GRP_FBCLK_IO {MIO 8} \
   CONFIG.PCW_QSPI_GRP_IO1_ENABLE {0} \
   CONFIG.PCW_QSPI_GRP_IO1_IO {<Select>} \
   CONFIG.PCW_QSPI_GRP_SINGLE_SS_ENABLE {1} \
   CONFIG.PCW_QSPI_GRP_SINGLE_SS_IO {MIO 1 .. 6} \
   CONFIG.PCW_QSPI_GRP_SS1_ENABLE {0} \
   CONFIG.PCW_QSPI_GRP_SS1_IO {<Select>} \
   CONFIG.PCW_QSPI_INTERNAL_HIGHADDRESS {0xFCFFFFFF} \
   CONFIG.PCW_QSPI_PERIPHERAL_CLKSRC {IO PLL} \
   CONFIG.PCW_QSPI_PERIPHERAL_DIVISOR0 {5} \
   CONFIG.PCW_QSPI_PERIPHERAL_ENABLE {1} \
   CONFIG.PCW_QSPI_PERIPHERAL_FREQMHZ {200} \
   CONFIG.PCW_QSPI_QSPI_IO {MIO 1 .. 6} \
   CONFIG.PCW_SD0_GRP_CD_ENABLE {1} \
   CONFIG.PCW_SD0_GRP_CD_IO {MIO 47} \
   CONFIG.PCW_SD0_GRP_POW_ENABLE {0} \
   CONFIG.PCW_SD0_GRP_POW_IO {<Select>} \
   CONFIG.PCW_SD0_GRP_WP_ENABLE {0} \
   CONFIG.PCW_SD0_GRP_WP_IO {<Select>} \
   CONFIG.PCW_SD0_PERIPHERAL_ENABLE {1} \
   CONFIG.PCW_SD0_SD0_IO {MIO 40 .. 45} \
   CONFIG.PCW_SD1_GRP_CD_ENABLE {0} \
   CONFIG.PCW_SD1_GRP_CD_IO {<Select>} \
   CONFIG.PCW_SD1_GRP_POW_ENABLE {0} \
   CONFIG.PCW_SD1_GRP_POW_IO {<Select>} \
   CONFIG.PCW_SD1_GRP_WP_ENABLE {0} \
   CONFIG.PCW_SD1_GRP_WP_IO {<Select>} \
   CONFIG.PCW_SD1_PERIPHERAL_ENABLE {0} \
   CONFIG.PCW_SD1_SD1_IO {<Select>} \
   CONFIG.PCW_SDIO0_BASEADDR {0xE0100000} \
   CONFIG.PCW_SDIO0_HIGHADDR {0xE0100FFF} \
   CONFIG.PCW_SDIO1_BASEADDR {0xE0101000} \
   CONFIG.PCW_SDIO1_HIGHADDR {0xE0101FFF} \
   CONFIG.PCW_SDIO_PERIPHERAL_CLKSRC {IO PLL} \
   CONFIG.PCW_SDIO_PERIPHERAL_DIVISOR0 {20} \
   CONFIG.PCW_SDIO_PERIPHERAL_FREQMHZ {50} \
   CONFIG.PCW_SDIO_PERIPHERAL_VALID {1} \
   CONFIG.PCW_SINGLE_QSPI_DATA_MODE {x4} \
   CONFIG.PCW_SMC_CYCLE_T0 {NA} \
   CONFIG.PCW_SMC_CYCLE_T1 {NA} \
   CONFIG.PCW_SMC_CYCLE_T2 {NA} \
   CONFIG.PCW_SMC_CYCLE_T3 {NA} \
   CONFIG.PCW_SMC_CYCLE_T4 {NA} \
   CONFIG.PCW_SMC_CYCLE_T5 {NA} \
   CONFIG.PCW_SMC_CYCLE_T6 {NA} \
   CONFIG.PCW_SMC_PERIPHERAL_CLKSRC {IO PLL} \
   CONFIG.PCW_SMC_PERIPHERAL_DIVISOR0 {1} \
   CONFIG.PCW_SMC_PERIPHERAL_FREQMHZ {100} \
   CONFIG.PCW_SMC_PERIPHERAL_VALID {0} \
   CONFIG.PCW_SPI0_BASEADDR {0xE0006000} \
   CONFIG.PCW_SPI0_GRP_SS0_ENABLE {0} \
   CONFIG.PCW_SPI0_GRP_SS0_IO {<Select>} \
   CONFIG.PCW_SPI0_GRP_SS1_ENABLE {0} \
   CONFIG.PCW_SPI0_GRP_SS1_IO {<Select>} \
   CONFIG.PCW_SPI0_GRP_SS2_ENABLE {0} \
   CONFIG.PCW_SPI0_GRP_SS2_IO {<Select>} \
   CONFIG.PCW_SPI0_HIGHADDR {0xE0006FFF} \
   CONFIG.PCW_SPI0_PERIPHERAL_ENABLE {0} \
   CONFIG.PCW_SPI0_SPI0_IO {<Select>} \
   CONFIG.PCW_SPI1_BASEADDR {0xE0007000} \
   CONFIG.PCW_SPI1_GRP_SS0_ENABLE {0} \
   CONFIG.PCW_SPI1_GRP_SS0_IO {<Select>} \
   CONFIG.PCW_SPI1_GRP_SS1_ENABLE {0} \
   CONFIG.PCW_SPI1_GRP_SS1_IO {<Select>} \
   CONFIG.PCW_SPI1_GRP_SS2_ENABLE {0} \
   CONFIG.PCW_SPI1_GRP_SS2_IO {<Select>} \
   CONFIG.PCW_SPI1_HIGHADDR {0xE0007FFF} \
   CONFIG.PCW_SPI1_PERIPHERAL_ENABLE {0} \
   CONFIG.PCW_SPI1_SPI1_IO {<Select>} \
   CONFIG.PCW_SPI_PERIPHERAL_CLKSRC {IO PLL} \
   CONFIG.PCW_SPI_PERIPHERAL_DIVISOR0 {1} \
   CONFIG.PCW_SPI_PERIPHERAL_FREQMHZ {166.666666} \
   CONFIG.PCW_SPI_PERIPHERAL_VALID {0} \
   CONFIG.PCW_S_AXI_ACP_ARUSER_VAL {31} \
   CONFIG.PCW_S_AXI_ACP_AWUSER_VAL {31} \
   CONFIG.PCW_S_AXI_ACP_ID_WIDTH {3} \
   CONFIG.PCW_S_AXI_GP0_ID_WIDTH {6} \
   CONFIG.PCW_S_AXI_GP1_ID_WIDTH {6} \
   CONFIG.PCW_S_AXI_HP0_DATA_WIDTH {64} \
   CONFIG.PCW_S_AXI_HP0_ID_WIDTH {6} \
   CONFIG.PCW_S_AXI_HP1_DATA_WIDTH {64} \
   CONFIG.PCW_S_AXI_HP1_ID_WIDTH {6} \
   CONFIG.PCW_S_AXI_HP2_DATA_WIDTH {64} \
   CONFIG.PCW_S_AXI_HP2_ID_WIDTH {6} \
   CONFIG.PCW_S_AXI_HP3_DATA_WIDTH {64} \
   CONFIG.PCW_S_AXI_HP3_ID_WIDTH {6} \
   CONFIG.PCW_TPIU_PERIPHERAL_CLKSRC {External} \
   CONFIG.PCW_TPIU_PERIPHERAL_DIVISOR0 {1} \
   CONFIG.PCW_TPIU_PERIPHERAL_FREQMHZ {200} \
   CONFIG.PCW_TRACE_BUFFER_CLOCK_DELAY {12} \
   CONFIG.PCW_TRACE_BUFFER_FIFO_SIZE {128} \
   CONFIG.PCW_TRACE_GRP_16BIT_ENABLE {0} \
   CONFIG.PCW_TRACE_GRP_16BIT_IO {<Select>} \
   CONFIG.PCW_TRACE_GRP_2BIT_ENABLE {0} \
   CONFIG.PCW_TRACE_GRP_2BIT_IO {<Select>} \
   CONFIG.PCW_TRACE_GRP_32BIT_ENABLE {0} \
   CONFIG.PCW_TRACE_GRP_32BIT_IO {<Select>} \
   CONFIG.PCW_TRACE_GRP_4BIT_ENABLE {0} \
   CONFIG.PCW_TRACE_GRP_4BIT_IO {<Select>} \
   CONFIG.PCW_TRACE_GRP_8BIT_ENABLE {0} \
   CONFIG.PCW_TRACE_GRP_8BIT_IO {<Select>} \
   CONFIG.PCW_TRACE_INTERNAL_WIDTH {2} \
   CONFIG.PCW_TRACE_PERIPHERAL_ENABLE {0} \
   CONFIG.PCW_TRACE_PIPELINE_WIDTH {8} \
   CONFIG.PCW_TRACE_TRACE_IO {<Select>} \
   CONFIG.PCW_TTC0_BASEADDR {0xE0104000} \
   CONFIG.PCW_TTC0_CLK0_PERIPHERAL_CLKSRC {CPU_1X} \
   CONFIG.PCW_TTC0_CLK0_PERIPHERAL_DIVISOR0 {1} \
   CONFIG.PCW_TTC0_CLK0_PERIPHERAL_FREQMHZ {133.333333} \
   CONFIG.PCW_TTC0_CLK1_PERIPHERAL_CLKSRC {CPU_1X} \
   CONFIG.PCW_TTC0_CLK1_PERIPHERAL_DIVISOR0 {1} \
   CONFIG.PCW_TTC0_CLK1_PERIPHERAL_FREQMHZ {133.333333} \
   CONFIG.PCW_TTC0_CLK2_PERIPHERAL_CLKSRC {CPU_1X} \
   CONFIG.PCW_TTC0_CLK2_PERIPHERAL_DIVISOR0 {1} \
   CONFIG.PCW_TTC0_CLK2_PERIPHERAL_FREQMHZ {133.333333} \
   CONFIG.PCW_TTC0_HIGHADDR {0xE0104fff} \
   CONFIG.PCW_TTC0_PERIPHERAL_ENABLE {0} \
   CONFIG.PCW_TTC0_TTC0_IO {<Select>} \
   CONFIG.PCW_TTC1_BASEADDR {0xE0105000} \
   CONFIG.PCW_TTC1_CLK0_PERIPHERAL_CLKSRC {CPU_1X} \
   CONFIG.PCW_TTC1_CLK0_PERIPHERAL_DIVISOR0 {1} \
   CONFIG.PCW_TTC1_CLK0_PERIPHERAL_FREQMHZ {133.333333} \
   CONFIG.PCW_TTC1_CLK1_PERIPHERAL_CLKSRC {CPU_1X} \
   CONFIG.PCW_TTC1_CLK1_PERIPHERAL_DIVISOR0 {1} \
   CONFIG.PCW_TTC1_CLK1_PERIPHERAL_FREQMHZ {133.333333} \
   CONFIG.PCW_TTC1_CLK2_PERIPHERAL_CLKSRC {CPU_1X} \
   CONFIG.PCW_TTC1_CLK2_PERIPHERAL_DIVISOR0 {1} \
   CONFIG.PCW_TTC1_CLK2_PERIPHERAL_FREQMHZ {133.333333} \
   CONFIG.PCW_TTC1_HIGHADDR {0xE0105fff} \
   CONFIG.PCW_TTC1_PERIPHERAL_ENABLE {0} \
   CONFIG.PCW_TTC1_TTC1_IO {<Select>} \
   CONFIG.PCW_TTC_PERIPHERAL_FREQMHZ {50} \
   CONFIG.PCW_UART0_BASEADDR {0xE0000000} \
   CONFIG.PCW_UART0_BAUD_RATE {115200} \
   CONFIG.PCW_UART0_GRP_FULL_ENABLE {0} \
   CONFIG.PCW_UART0_GRP_FULL_IO {<Select>} \
   CONFIG.PCW_UART0_HIGHADDR {0xE0000FFF} \
   CONFIG.PCW_UART0_PERIPHERAL_ENABLE {1} \
   CONFIG.PCW_UART0_UART0_IO {MIO 14 .. 15} \
   CONFIG.PCW_UART1_BASEADDR {0xE0001000} \
   CONFIG.PCW_UART1_BAUD_RATE {115200} \
   CONFIG.PCW_UART1_GRP_FULL_ENABLE {0} \
   CONFIG.PCW_UART1_GRP_FULL_IO {<Select>} \
   CONFIG.PCW_UART1_HIGHADDR {0xE0001FFF} \
   CONFIG.PCW_UART1_PERIPHERAL_ENABLE {0} \
   CONFIG.PCW_UART1_UART1_IO {<Select>} \
   CONFIG.PCW_UART_PERIPHERAL_CLKSRC {IO PLL} \
   CONFIG.PCW_UART_PERIPHERAL_DIVISOR0 {10} \
   CONFIG.PCW_UART_PERIPHERAL_FREQMHZ {100} \
   CONFIG.PCW_UART_PERIPHERAL_VALID {1} \
   CONFIG.PCW_UIPARAM_ACT_DDR_FREQ_MHZ {525.000000} \
   CONFIG.PCW_UIPARAM_DDR_ADV_ENABLE {0} \
   CONFIG.PCW_UIPARAM_DDR_AL {0} \
   CONFIG.PCW_UIPARAM_DDR_BANK_ADDR_COUNT {3} \
   CONFIG.PCW_UIPARAM_DDR_BL {8} \
   CONFIG.PCW_UIPARAM_DDR_BOARD_DELAY0 {0.223} \
   CONFIG.PCW_UIPARAM_DDR_BOARD_DELAY1 {0.212} \
   CONFIG.PCW_UIPARAM_DDR_BOARD_DELAY2 {0.085} \
   CONFIG.PCW_UIPARAM_DDR_BOARD_DELAY3 {0.092} \
   CONFIG.PCW_UIPARAM_DDR_BUS_WIDTH {16 Bit} \
   CONFIG.PCW_UIPARAM_DDR_CL {7} \
   CONFIG.PCW_UIPARAM_DDR_CLOCK_0_LENGTH_MM {25.8} \
   CONFIG.PCW_UIPARAM_DDR_CLOCK_0_PACKAGE_LENGTH {80.4535} \
   CONFIG.PCW_UIPARAM_DDR_CLOCK_0_PROPOGATION_DELAY {160} \
   CONFIG.PCW_UIPARAM_DDR_CLOCK_1_LENGTH_MM {25.8} \
   CONFIG.PCW_UIPARAM_DDR_CLOCK_1_PACKAGE_LENGTH {80.4535} \
   CONFIG.PCW_UIPARAM_DDR_CLOCK_1_PROPOGATION_DELAY {160} \
   CONFIG.PCW_UIPARAM_DDR_CLOCK_2_LENGTH_MM {0} \
   CONFIG.PCW_UIPARAM_DDR_CLOCK_2_PACKAGE_LENGTH {80.4535} \
   CONFIG.PCW_UIPARAM_DDR_CLOCK_2_PROPOGATION_DELAY {160} \
   CONFIG.PCW_UIPARAM_DDR_CLOCK_3_LENGTH_MM {0} \
   CONFIG.PCW_UIPARAM_DDR_CLOCK_3_PACKAGE_LENGTH {80.4535} \
   CONFIG.PCW_UIPARAM_DDR_CLOCK_3_PROPOGATION_DELAY {160} \
   CONFIG.PCW_UIPARAM_DDR_CLOCK_STOP_EN {0} \
   CONFIG.PCW_UIPARAM_DDR_COL_ADDR_COUNT {10} \
   CONFIG.PCW_UIPARAM_DDR_CWL {6} \
   CONFIG.PCW_UIPARAM_DDR_DEVICE_CAPACITY {4096 MBits} \
   CONFIG.PCW_UIPARAM_DDR_DQS_0_LENGTH_MM {15.6} \
   CONFIG.PCW_UIPARAM_DDR_DQS_0_PACKAGE_LENGTH {105.056} \
   CONFIG.PCW_UIPARAM_DDR_DQS_0_PROPOGATION_DELAY {160} \
   CONFIG.PCW_UIPARAM_DDR_DQS_1_LENGTH_MM {18.8} \
   CONFIG.PCW_UIPARAM_DDR_DQS_1_PACKAGE_LENGTH {66.904} \
   CONFIG.PCW_UIPARAM_DDR_DQS_1_PROPOGATION_DELAY {160} \
   CONFIG.PCW_UIPARAM_DDR_DQS_2_LENGTH_MM {0} \
   CONFIG.PCW_UIPARAM_DDR_DQS_2_PACKAGE_LENGTH {89.1715} \
   CONFIG.PCW_UIPARAM_DDR_DQS_2_PROPOGATION_DELAY {160} \
   CONFIG.PCW_UIPARAM_DDR_DQS_3_LENGTH_MM {0} \
   CONFIG.PCW_UIPARAM_DDR_DQS_3_PACKAGE_LENGTH {113.63} \
   CONFIG.PCW_UIPARAM_DDR_DQS_3_PROPOGATION_DELAY {160} \
   CONFIG.PCW_UIPARAM_DDR_DQS_TO_CLK_DELAY_0 {0.040} \
   CONFIG.PCW_UIPARAM_DDR_DQS_TO_CLK_DELAY_1 {0.058} \
   CONFIG.PCW_UIPARAM_DDR_DQS_TO_CLK_DELAY_2 {0.0} \
   CONFIG.PCW_UIPARAM_DDR_DQS_TO_CLK_DELAY_3 {0.0} \
   CONFIG.PCW_UIPARAM_DDR_DQ_0_LENGTH_MM {16.5} \
   CONFIG.PCW_UIPARAM_DDR_DQ_0_PACKAGE_LENGTH {98.503} \
   CONFIG.PCW_UIPARAM_DDR_DQ_0_PROPOGATION_DELAY {160} \
   CONFIG.PCW_UIPARAM_DDR_DQ_1_LENGTH_MM {18} \
   CONFIG.PCW_UIPARAM_DDR_DQ_1_PACKAGE_LENGTH {68.5855} \
   CONFIG.PCW_UIPARAM_DDR_DQ_1_PROPOGATION_DELAY {160} \
   CONFIG.PCW_UIPARAM_DDR_DQ_2_LENGTH_MM {0} \
   CONFIG.PCW_UIPARAM_DDR_DQ_2_PACKAGE_LENGTH {90.295} \
   CONFIG.PCW_UIPARAM_DDR_DQ_2_PROPOGATION_DELAY {160} \
   CONFIG.PCW_UIPARAM_DDR_DQ_3_LENGTH_MM {0} \
   CONFIG.PCW_UIPARAM_DDR_DQ_3_PACKAGE_LENGTH {103.977} \
   CONFIG.PCW_UIPARAM_DDR_DQ_3_PROPOGATION_DELAY {160} \
   CONFIG.PCW_UIPARAM_DDR_DRAM_WIDTH {16 Bits} \
   CONFIG.PCW_UIPARAM_DDR_ECC {Disabled} \
   CONFIG.PCW_UIPARAM_DDR_ENABLE {1} \
   CONFIG.PCW_UIPARAM_DDR_FREQ_MHZ {525} \
   CONFIG.PCW_UIPARAM_DDR_HIGH_TEMP {Normal (0-85)} \
   CONFIG.PCW_UIPARAM_DDR_MEMORY_TYPE {DDR 3} \
   CONFIG.PCW_UIPARAM_DDR_PARTNO {Custom} \
   CONFIG.PCW_UIPARAM_DDR_ROW_ADDR_COUNT {15} \
   CONFIG.PCW_UIPARAM_DDR_SPEED_BIN {DDR3_1066F} \
   CONFIG.PCW_UIPARAM_DDR_TRAIN_DATA_EYE {1} \
   CONFIG.PCW_UIPARAM_DDR_TRAIN_READ_GATE {1} \
   CONFIG.PCW_UIPARAM_DDR_TRAIN_WRITE_LEVEL {1} \
   CONFIG.PCW_UIPARAM_DDR_T_FAW {40.0} \
   CONFIG.PCW_UIPARAM_DDR_T_RAS_MIN {35.0} \
   CONFIG.PCW_UIPARAM_DDR_T_RC {50.625} \
   CONFIG.PCW_UIPARAM_DDR_T_RCD {13.125} \
   CONFIG.PCW_UIPARAM_DDR_T_RP {13.125} \
   CONFIG.PCW_UIPARAM_DDR_USE_INTERNAL_VREF {0} \
   CONFIG.PCW_UIPARAM_GENERATE_SUMMARY {NA} \
   CONFIG.PCW_USB0_BASEADDR {0xE0102000} \
   CONFIG.PCW_USB0_HIGHADDR {0xE0102fff} \
   CONFIG.PCW_USB0_PERIPHERAL_ENABLE {1} \
   CONFIG.PCW_USB0_PERIPHERAL_FREQMHZ {60} \
   CONFIG.PCW_USB0_RESET_ENABLE {0} \
   CONFIG.PCW_USB0_RESET_IO {<Select>} \
   CONFIG.PCW_USB0_USB0_IO {MIO 28 .. 39} \
   CONFIG.PCW_USB1_BASEADDR {0xE0103000} \
   CONFIG.PCW_USB1_HIGHADDR {0xE0103fff} \
   CONFIG.PCW_USB1_PERIPHERAL_ENABLE {0} \
   CONFIG.PCW_USB1_PERIPHERAL_FREQMHZ {60} \
   CONFIG.PCW_USB1_RESET_ENABLE {0} \
   CONFIG.PCW_USB1_RESET_IO {<Select>} \
   CONFIG.PCW_USB1_USB1_IO {<Select>} \
   CONFIG.PCW_USB_RESET_ENABLE {0} \
   CONFIG.PCW_USB_RESET_POLARITY {Active Low} \
   CONFIG.PCW_USB_RESET_SELECT {<Select>} \
   CONFIG.PCW_USE_AXI_FABRIC_IDLE {0} \
   CONFIG.PCW_USE_AXI_NONSECURE {0} \
   CONFIG.PCW_USE_CORESIGHT {0} \
   CONFIG.PCW_USE_CROSS_TRIGGER {0} \
   CONFIG.PCW_USE_CR_FABRIC {1} \
   CONFIG.PCW_USE_DDR_BYPASS {0} \
   CONFIG.PCW_USE_DEBUG {0} \
   CONFIG.PCW_USE_DEFAULT_ACP_USER_VAL {0} \
   CONFIG.PCW_USE_DMA0 {0} \
   CONFIG.PCW_USE_DMA1 {0} \
   CONFIG.PCW_USE_DMA2 {0} \
   CONFIG.PCW_USE_DMA3 {0} \
   CONFIG.PCW_USE_EXPANDED_IOP {0} \
   CONFIG.PCW_USE_EXPANDED_PS_SLCR_REGISTERS {0} \
   CONFIG.PCW_USE_FABRIC_INTERRUPT {1} \
   CONFIG.PCW_USE_HIGH_OCM {0} \
   CONFIG.PCW_USE_M_AXI_GP0 {1} \
   CONFIG.PCW_USE_M_AXI_GP1 {0} \
   CONFIG.PCW_USE_PROC_EVENT_BUS {0} \
   CONFIG.PCW_USE_PS_SLCR_REGISTERS {0} \
   CONFIG.PCW_USE_S_AXI_ACP {0} \
   CONFIG.PCW_USE_S_AXI_GP0 {0} \
   CONFIG.PCW_USE_S_AXI_GP1 {0} \
   CONFIG.PCW_USE_S_AXI_HP0 {1} \
   CONFIG.PCW_USE_S_AXI_HP1 {0} \
   CONFIG.PCW_USE_S_AXI_HP2 {0} \
   CONFIG.PCW_USE_S_AXI_HP3 {0} \
   CONFIG.PCW_USE_TRACE {0} \
   CONFIG.PCW_USE_TRACE_DATA_EDGE_DETECTOR {0} \
   CONFIG.PCW_VALUE_SILVERSION {3} \
   CONFIG.PCW_WDT_PERIPHERAL_CLKSRC {CPU_1X} \
   CONFIG.PCW_WDT_PERIPHERAL_DIVISOR0 {1} \
   CONFIG.PCW_WDT_PERIPHERAL_ENABLE {0} \
   CONFIG.PCW_WDT_PERIPHERAL_FREQMHZ {133.333333} \
   CONFIG.PCW_WDT_WDT_IO {<Select>} \
 ] $ps7_0

  # Create instance: rst_ps7_0_fclk0, and set properties
  set rst_ps7_0_fclk0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:proc_sys_reset:5.0 rst_ps7_0_fclk0 ]

  # Create instance: rst_ps7_0_fclk1, and set properties
  set rst_ps7_0_fclk1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:proc_sys_reset:5.0 rst_ps7_0_fclk1 ]

  # Create instance: switches_gpio, and set properties
  set switches_gpio [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_gpio:2.0 switches_gpio ]
  set_property -dict [ list \
   CONFIG.C_ALL_INPUTS {1} \
   CONFIG.C_ALL_OUTPUTS_2 {0} \
   CONFIG.C_GPIO2_WIDTH {32} \
   CONFIG.C_GPIO_WIDTH {2} \
   CONFIG.C_INTERRUPT_PRESENT {1} \
   CONFIG.C_IS_DUAL {0} \
 ] $switches_gpio

  # Create instance: system_interrupts, and set properties
  set system_interrupts [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_intc:4.1 system_interrupts ]

  # Create instance: video
  create_hier_cell_video [current_bd_instance .] video

  # Create interface connections
  connect_bd_intf_net -intf_net S00_AXIS_1 [get_bd_intf_pins composable/S00_AXIS] [get_bd_intf_pins video/M_AXIS01]
  connect_bd_intf_net -intf_net S01_AXIS_1 [get_bd_intf_pins composable/S01_AXIS] [get_bd_intf_pins video/M01_AXIS]
  connect_bd_intf_net -intf_net S_AXI_1 [get_bd_intf_pins axi_interconnect_0/M15_AXI] [get_bd_intf_pins composable/S15_AXI]
  connect_bd_intf_net -intf_net S_AXI_CTRL_1 [get_bd_intf_pins axi_interconnect_0/M14_AXI] [get_bd_intf_pins composable/S14_AXI]
  connect_bd_intf_net -intf_net axi_interconnect_0_M00_AXI [get_bd_intf_pins axi_interconnect_0/M00_AXI] [get_bd_intf_pins video/S_AXI_LITE]
  connect_bd_intf_net -intf_net axi_interconnect_0_M01_AXI [get_bd_intf_pins axi_interconnect_0/M01_AXI] [get_bd_intf_pins video/S01_AXILite1]
  connect_bd_intf_net -intf_net axi_interconnect_0_M02_AXI [get_bd_intf_pins axi_interconnect_0/M02_AXI] [get_bd_intf_pins video/S03_AXILite1]
  connect_bd_intf_net -intf_net axi_interconnect_0_M03_AXI [get_bd_intf_pins axi_interconnect_0/M03_AXI] [get_bd_intf_pins video/S04_AXILite]
  connect_bd_intf_net -intf_net axi_interconnect_0_M04_AXI [get_bd_intf_pins axi_interconnect_0/M04_AXI] [get_bd_intf_pins video/S02_AXILite1]
  connect_bd_intf_net -intf_net axi_interconnect_0_M05_AXI [get_bd_intf_pins axi_interconnect_0/M05_AXI] [get_bd_intf_pins video/S00_AXILite1]
  connect_bd_intf_net -intf_net axi_interconnect_0_M06_AXI [get_bd_intf_pins axi_interconnect_0/M06_AXI] [get_bd_intf_pins video/S01_AXILite]
  connect_bd_intf_net -intf_net axi_interconnect_0_M07_AXI [get_bd_intf_pins axi_interconnect_0/M07_AXI] [get_bd_intf_pins video/S03_AXILite]
  connect_bd_intf_net -intf_net axi_interconnect_0_M08_AXI [get_bd_intf_pins axi_interconnect_0/M08_AXI] [get_bd_intf_pins video/S00_AXILite]
  connect_bd_intf_net -intf_net axi_interconnect_0_M09_AXI [get_bd_intf_pins axi_interconnect_0/M09_AXI] [get_bd_intf_pins video/S02_AXILite]
  connect_bd_intf_net -intf_net axi_interconnect_0_M10_AXI [get_bd_intf_pins axi_interconnect_0/M10_AXI] [get_bd_intf_pins system_interrupts/s_axi]
  connect_bd_intf_net -intf_net axi_interconnect_0_M11_AXI [get_bd_intf_pins axi_interconnect_0/M11_AXI] [get_bd_intf_pins btns_gpio/S_AXI]
  connect_bd_intf_net -intf_net axi_interconnect_0_M12_AXI [get_bd_intf_pins axi_interconnect_0/M12_AXI] [get_bd_intf_pins leds_gpio/S_AXI]
  connect_bd_intf_net -intf_net axi_interconnect_0_M13_AXI [get_bd_intf_pins axi_interconnect_0/M13_AXI] [get_bd_intf_pins switches_gpio/S_AXI]
  connect_bd_intf_net -intf_net axi_mem_intercon_M00_AXI [get_bd_intf_pins ps7_0/S_AXI_HP0] [get_bd_intf_pins video/M_AXI]
  connect_bd_intf_net -intf_net btns_gpio_GPIO [get_bd_intf_ports btns_4bits] [get_bd_intf_pins btns_gpio/GPIO]
  connect_bd_intf_net -intf_net composable_M00_AXIS [get_bd_intf_pins composable/M00_AXIS] [get_bd_intf_pins video/S00_AXIS]
  connect_bd_intf_net -intf_net composable_M01_AXIS [get_bd_intf_pins composable/M01_AXIS] [get_bd_intf_pins video/S01_AXIS]
  connect_bd_intf_net -intf_net dvi2rgb_DDC [get_bd_intf_ports hdmi_in_ddc] [get_bd_intf_pins video/DDC]
  connect_bd_intf_net -intf_net hdmi_in_1 [get_bd_intf_ports hdmi_in] [get_bd_intf_pins video/TMDS_in]
  connect_bd_intf_net -intf_net leds_gpio_GPIO [get_bd_intf_ports leds_4bits] [get_bd_intf_pins leds_gpio/GPIO]
  connect_bd_intf_net -intf_net m_axi_dfx_pr_0_0_1 [get_bd_intf_pins axi_interconnect_0/M22_AXI] [get_bd_intf_pins composable/S22_AXI]
  connect_bd_intf_net -intf_net m_axi_dfx_pr_0_1_1 [get_bd_intf_pins axi_interconnect_0/M23_AXI] [get_bd_intf_pins composable/S23_AXI]
  connect_bd_intf_net -intf_net m_axi_dfx_pr_1_0_1 [get_bd_intf_pins axi_interconnect_0/M24_AXI] [get_bd_intf_pins composable/S24_AXI]
  connect_bd_intf_net -intf_net m_axi_dfx_pr_1_1_1 [get_bd_intf_pins axi_interconnect_0/M25_AXI] [get_bd_intf_pins composable/S25_AXI]
  connect_bd_intf_net -intf_net m_axi_dfx_pr_fork_1 [get_bd_intf_pins axi_interconnect_0/M26_AXI] [get_bd_intf_pins composable/S26_AXI]
  connect_bd_intf_net -intf_net m_axi_dfx_pr_join_1 [get_bd_intf_pins axi_interconnect_0/M27_AXI] [get_bd_intf_pins composable/S27_AXI]
  connect_bd_intf_net -intf_net processing_system7_0_FIXED_IO [get_bd_intf_ports FIXED_IO] [get_bd_intf_pins ps7_0/FIXED_IO]
  connect_bd_intf_net -intf_net ps7_0_DDR [get_bd_intf_ports DDR] [get_bd_intf_pins ps7_0/DDR]
  connect_bd_intf_net -intf_net ps7_0_M_AXI_GP0 [get_bd_intf_pins axi_interconnect_0/S00_AXI] [get_bd_intf_pins ps7_0/M_AXI_GP0]
  connect_bd_intf_net -intf_net s_axi_control1_1 [get_bd_intf_pins axi_interconnect_0/M18_AXI] [get_bd_intf_pins composable/S18_AXI]
  connect_bd_intf_net -intf_net s_axi_control_1 [get_bd_intf_pins axi_interconnect_0/M21_AXI] [get_bd_intf_pins composable/S21_AXI]
  connect_bd_intf_net -intf_net switches_gpio_GPIO [get_bd_intf_ports sws_2bits] [get_bd_intf_pins switches_gpio/GPIO]
  connect_bd_intf_net -intf_net video_hdmi_tx [get_bd_intf_ports hdmi_tx] [get_bd_intf_pins video/hdmi_tx]

  # Create port connections
  connect_bd_net -net axi_gpio_video_gpio_io_o [get_bd_ports hdmi_in_hpd] [get_bd_pins video/hdmi_in_hpd]
  connect_bd_net -net btns_gpio_ip2intc_irpt [get_bd_pins btns_gpio/ip2intc_irpt] [get_bd_pins concat_interrupts/In6]
  connect_bd_net -net concat_interrupts_dout [get_bd_pins concat_interrupts/dout] [get_bd_pins system_interrupts/intr]
  connect_bd_net -net hdmi_out_hpd_video_gpio_io_o [get_bd_ports hdmi_out_hpd] [get_bd_pins video/hdmi_out_hpd]
  connect_bd_net -net leds_gpio_ip2intc_irpt [get_bd_pins concat_interrupts/In8] [get_bd_pins leds_gpio/ip2intc_irpt]
  connect_bd_net -net ps7_0_FCLK_CLK0 [get_bd_pins axi_interconnect_0/ACLK] [get_bd_pins axi_interconnect_0/M00_ACLK] [get_bd_pins axi_interconnect_0/M03_ACLK] [get_bd_pins axi_interconnect_0/M04_ACLK] [get_bd_pins axi_interconnect_0/M05_ACLK] [get_bd_pins axi_interconnect_0/M08_ACLK] [get_bd_pins axi_interconnect_0/M09_ACLK] [get_bd_pins axi_interconnect_0/M10_ACLK] [get_bd_pins axi_interconnect_0/M11_ACLK] [get_bd_pins axi_interconnect_0/M12_ACLK] [get_bd_pins axi_interconnect_0/M13_ACLK] [get_bd_pins axi_interconnect_0/S00_ACLK] [get_bd_pins btns_gpio/s_axi_aclk] [get_bd_pins leds_gpio/s_axi_aclk] [get_bd_pins ps7_0/FCLK_CLK0] [get_bd_pins ps7_0/M_AXI_GP0_ACLK] [get_bd_pins rst_ps7_0_fclk0/slowest_sync_clk] [get_bd_pins switches_gpio/s_axi_aclk] [get_bd_pins system_interrupts/s_axi_aclk] [get_bd_pins video/clk_100M]
  connect_bd_net -net ps7_0_FCLK_CLK1 [get_bd_pins axi_interconnect_0/M01_ACLK] [get_bd_pins axi_interconnect_0/M02_ACLK] [get_bd_pins axi_interconnect_0/M06_ACLK] [get_bd_pins axi_interconnect_0/M07_ACLK] [get_bd_pins axi_interconnect_0/M14_ACLK] [get_bd_pins axi_interconnect_0/M15_ACLK] [get_bd_pins axi_interconnect_0/M16_ACLK] [get_bd_pins axi_interconnect_0/M17_ACLK] [get_bd_pins axi_interconnect_0/M18_ACLK] [get_bd_pins axi_interconnect_0/M19_ACLK] [get_bd_pins axi_interconnect_0/M20_ACLK] [get_bd_pins axi_interconnect_0/M21_ACLK] [get_bd_pins axi_interconnect_0/M22_ACLK] [get_bd_pins axi_interconnect_0/M23_ACLK] [get_bd_pins axi_interconnect_0/M24_ACLK] [get_bd_pins axi_interconnect_0/M25_ACLK] [get_bd_pins axi_interconnect_0/M26_ACLK] [get_bd_pins axi_interconnect_0/M27_ACLK] [get_bd_pins composable/clk_142M] [get_bd_pins ps7_0/FCLK_CLK1] [get_bd_pins ps7_0/S_AXI_HP0_ACLK] [get_bd_pins rst_ps7_0_fclk1/slowest_sync_clk] [get_bd_pins video/clk_142M]
  connect_bd_net -net ps7_0_FCLK_CLK2 [get_bd_pins ps7_0/FCLK_CLK2] [get_bd_pins video/clk_200M]
  connect_bd_net -net ps7_0_FCLK_RESET0_N [get_bd_pins ps7_0/FCLK_RESET0_N] [get_bd_pins rst_ps7_0_fclk0/ext_reset_in] [get_bd_pins rst_ps7_0_fclk1/ext_reset_in] [get_bd_pins video/FCLK_RESET0_N]
  connect_bd_net -net rst_ps7_0_fclk0_interconnect_aresetn [get_bd_pins axi_interconnect_0/ARESETN] [get_bd_pins axi_interconnect_0/M00_ARESETN] [get_bd_pins axi_interconnect_0/M03_ARESETN] [get_bd_pins axi_interconnect_0/M04_ARESETN] [get_bd_pins axi_interconnect_0/M05_ARESETN] [get_bd_pins axi_interconnect_0/M08_ARESETN] [get_bd_pins axi_interconnect_0/M09_ARESETN] [get_bd_pins axi_interconnect_0/M10_ARESETN] [get_bd_pins axi_interconnect_0/M11_ARESETN] [get_bd_pins axi_interconnect_0/M12_ARESETN] [get_bd_pins axi_interconnect_0/M13_ARESETN] [get_bd_pins axi_interconnect_0/S00_ARESETN] [get_bd_pins rst_ps7_0_fclk0/interconnect_aresetn]
  connect_bd_net -net rst_ps7_0_fclk0_peripheral_reset [get_bd_pins rst_ps7_0_fclk0/peripheral_reset] [get_bd_pins video/periph_reset_clk100M]
  connect_bd_net -net rst_ps7_0_fclk1_interconnect_aresetn [get_bd_pins rst_ps7_0_fclk1/interconnect_aresetn] [get_bd_pins video/interconnect_resetn_clk142M]
  connect_bd_net -net rst_ps7_0_fclk1_peripheral_aresetn [get_bd_pins axi_interconnect_0/M01_ARESETN] [get_bd_pins axi_interconnect_0/M02_ARESETN] [get_bd_pins axi_interconnect_0/M06_ARESETN] [get_bd_pins axi_interconnect_0/M07_ARESETN] [get_bd_pins axi_interconnect_0/M14_ARESETN] [get_bd_pins axi_interconnect_0/M15_ARESETN] [get_bd_pins axi_interconnect_0/M16_ARESETN] [get_bd_pins axi_interconnect_0/M17_ARESETN] [get_bd_pins axi_interconnect_0/M18_ARESETN] [get_bd_pins axi_interconnect_0/M19_ARESETN] [get_bd_pins axi_interconnect_0/M20_ARESETN] [get_bd_pins axi_interconnect_0/M21_ARESETN] [get_bd_pins axi_interconnect_0/M22_ARESETN] [get_bd_pins axi_interconnect_0/M23_ARESETN] [get_bd_pins axi_interconnect_0/M24_ARESETN] [get_bd_pins axi_interconnect_0/M25_ARESETN] [get_bd_pins axi_interconnect_0/M26_ARESETN] [get_bd_pins axi_interconnect_0/M27_ARESETN] [get_bd_pins composable/periph_resetn_clk142M] [get_bd_pins rst_ps7_0_fclk1/peripheral_aresetn] [get_bd_pins video/periph_resetn_clk142M]
  connect_bd_net -net switches_gpio_ip2intc_irpt [get_bd_pins concat_interrupts/In7] [get_bd_pins switches_gpio/ip2intc_irpt]
  connect_bd_net -net system_interrupts_irq [get_bd_pins ps7_0/IRQ_F2P] [get_bd_pins system_interrupts/irq]
  connect_bd_net -net video_hdmi_in_hpd_irq [get_bd_pins concat_interrupts/In4] [get_bd_pins video/hdmi_in_hpd_irq]
  connect_bd_net -net video_hdmi_out_hpd_irq [get_bd_pins concat_interrupts/In5] [get_bd_pins video/hdmi_out_hpd_irq]
  connect_bd_net -net video_mm2s_introut [get_bd_pins concat_interrupts/In1] [get_bd_pins video/mm2s_introut]
  connect_bd_net -net video_peripheral_aresetn1 [get_bd_pins btns_gpio/s_axi_aresetn] [get_bd_pins leds_gpio/s_axi_aresetn] [get_bd_pins rst_ps7_0_fclk0/peripheral_aresetn] [get_bd_pins switches_gpio/s_axi_aresetn] [get_bd_pins system_interrupts/s_axi_aresetn] [get_bd_pins video/periph_resetn_clk100M]
  connect_bd_net -net video_s2mm_introut [get_bd_pins concat_interrupts/In0] [get_bd_pins video/s2mm_introut]
  connect_bd_net -net video_vtc_in_irq [get_bd_pins concat_interrupts/In3] [get_bd_pins video/vtc_in_irq]
  connect_bd_net -net video_vtc_out_irq [get_bd_pins concat_interrupts/In2] [get_bd_pins video/vtc_out_irq]

  # Create address segments
  assign_bd_address -offset 0x43C50000 -range 0x00010000 -target_address_space [get_bd_addr_spaces ps7_0/Data] [get_bd_addr_segs video/hdmi_out/frontend/axi_dynclk/s00_axi/reg0] -force
  assign_bd_address -offset 0x41200000 -range 0x00010000 -target_address_space [get_bd_addr_spaces ps7_0/Data] [get_bd_addr_segs video/hdmi_in/frontend/axi_gpio_hdmiin/S_AXI/Reg] -force
  assign_bd_address -offset 0x43000000 -range 0x00010000 -target_address_space [get_bd_addr_spaces ps7_0/Data] [get_bd_addr_segs video/axi_vdma/S_AXI_LITE/Reg] -force
  assign_bd_address -offset 0x43C00000 -range 0x00010000 -target_address_space [get_bd_addr_spaces ps7_0/Data] [get_bd_addr_segs composable/axis_switch/S_AXI_CTRL/Reg] -force
  assign_bd_address -offset 0x41220000 -range 0x00010000 -target_address_space [get_bd_addr_spaces ps7_0/Data] [get_bd_addr_segs btns_gpio/S_AXI/Reg] -force
  assign_bd_address -offset 0x43C10000 -range 0x00010000 -target_address_space [get_bd_addr_spaces ps7_0/Data] [get_bd_addr_segs video/hdmi_in/color_convert/s_axi_control/Reg] -force
  assign_bd_address -offset 0x43C40000 -range 0x00010000 -target_address_space [get_bd_addr_spaces ps7_0/Data] [get_bd_addr_segs video/hdmi_out/color_convert/s_axi_control/Reg] -force
  assign_bd_address -offset 0x40088000 -range 0x00008000 -target_address_space [get_bd_addr_spaces ps7_0/Data] [get_bd_addr_segs composable/pr_0/s_axi_control1/Reg0] -force
  assign_bd_address -offset 0x40090000 -range 0x00008000 -target_address_space [get_bd_addr_spaces ps7_0/Data] [get_bd_addr_segs composable/pr_1/s_axi_control0/Reg0] -force
  assign_bd_address -offset 0x400A0000 -range 0x00010000 -target_address_space [get_bd_addr_spaces ps7_0/Data] [get_bd_addr_segs composable/pr_fork/s_axi_control/Reg0] -force
  assign_bd_address -offset 0x40080000 -range 0x00008000 -target_address_space [get_bd_addr_spaces ps7_0/Data] [get_bd_addr_segs composable/pr_0/s_axi_control0/Reg0] -force
  assign_bd_address -offset 0x40098000 -range 0x00008000 -target_address_space [get_bd_addr_spaces ps7_0/Data] [get_bd_addr_segs composable/pr_1/s_axi_control1/Reg0] -force
  assign_bd_address -offset 0x40050000 -range 0x00010000 -target_address_space [get_bd_addr_spaces ps7_0/Data] [get_bd_addr_segs composable/gaussianfilter_accel/s_axi_control/Reg] -force
  assign_bd_address -offset 0x41210000 -range 0x00010000 -target_address_space [get_bd_addr_spaces ps7_0/Data] [get_bd_addr_segs video/hdmi_out/frontend/hdmi_out_hpd_video/S_AXI/Reg] -force
  assign_bd_address -offset 0x41230000 -range 0x00010000 -target_address_space [get_bd_addr_spaces ps7_0/Data] [get_bd_addr_segs leds_gpio/S_AXI/Reg] -force
  assign_bd_address -offset 0x41250000 -range 0x00010000 -target_address_space [get_bd_addr_spaces ps7_0/Data] [get_bd_addr_segs composable/pipeline_control/S_AXI/Reg] -force
  assign_bd_address -offset 0x43C30000 -range 0x00010000 -target_address_space [get_bd_addr_spaces ps7_0/Data] [get_bd_addr_segs video/hdmi_in/pixel_pack/s_axi_control/Reg] -force
  assign_bd_address -offset 0x43C70000 -range 0x00010000 -target_address_space [get_bd_addr_spaces ps7_0/Data] [get_bd_addr_segs video/hdmi_out/pixel_unpack/s_axi_control/Reg] -force
  assign_bd_address -offset 0x40000000 -range 0x00010000 -target_address_space [get_bd_addr_spaces ps7_0/Data] [get_bd_addr_segs composable/rgb2gray_accel/s_axi_control/Reg] -force
  assign_bd_address -offset 0x400B0000 -range 0x00010000 -target_address_space [get_bd_addr_spaces ps7_0/Data] [get_bd_addr_segs composable/pr_join/s_axi_control/Reg0] -force
  assign_bd_address -offset 0x41240000 -range 0x00010000 -target_address_space [get_bd_addr_spaces ps7_0/Data] [get_bd_addr_segs switches_gpio/S_AXI/Reg] -force
  assign_bd_address -offset 0x41800000 -range 0x00010000 -target_address_space [get_bd_addr_spaces ps7_0/Data] [get_bd_addr_segs system_interrupts/S_AXI/Reg] -force
  assign_bd_address -offset 0x43C20000 -range 0x00010000 -target_address_space [get_bd_addr_spaces ps7_0/Data] [get_bd_addr_segs video/hdmi_in/frontend/vtc_in/ctrl/Reg] -force
  assign_bd_address -offset 0x43C60000 -range 0x00010000 -target_address_space [get_bd_addr_spaces ps7_0/Data] [get_bd_addr_segs video/hdmi_out/frontend/vtc_out/ctrl/Reg] -force
  assign_bd_address -offset 0x00000000 -range 0x20000000 -target_address_space [get_bd_addr_spaces video/axi_vdma/Data_MM2S] [get_bd_addr_segs ps7_0/S_AXI_HP0/HP0_DDR_LOWOCM] -force
  assign_bd_address -offset 0x00000000 -range 0x20000000 -target_address_space [get_bd_addr_spaces video/axi_vdma/Data_S2MM] [get_bd_addr_segs ps7_0/S_AXI_HP0/HP0_DDR_LOWOCM] -force

  # Perform GUI Layout
  regenerate_bd_layout -layout_string {
   "ActiveEmotionalView":"Default View",
   "Default View_ScaleFactor":"0.439326",
   "Default View_TopLeft":"-346,232",
   "ExpandedHierarchyInLayout":"",
   "guistr":"# # String gsaved with Nlview 7.0r4  2019-12-20 bk=1.5203 VDI=41 GEI=36 GUI=JA:10.0 TLS
#  -string -flagsOSRD
preplace port DDR -pg 1 -lvl 6 -x 2700 -y 710 -defaultsOSRD
preplace port FIXED_IO -pg 1 -lvl 6 -x 2700 -y 730 -defaultsOSRD
preplace port btns_4bits -pg 1 -lvl 6 -x 2700 -y 1060 -defaultsOSRD
preplace port hdmi_in -pg 1 -lvl 0 -x 0 -y 20 -defaultsOSRD
preplace port hdmi_in_ddc -pg 1 -lvl 6 -x 2700 -y 510 -defaultsOSRD
preplace port hdmi_tx -pg 1 -lvl 6 -x 2700 -y 590 -defaultsOSRD
preplace port leds_4bits -pg 1 -lvl 6 -x 2700 -y 1340 -defaultsOSRD
preplace port sws_2bits -pg 1 -lvl 6 -x 2700 -y 1200 -defaultsOSRD
preplace portBus hdmi_in_hpd -pg 1 -lvl 6 -x 2700 -y 610 -defaultsOSRD
preplace portBus hdmi_out_hpd -pg 1 -lvl 6 -x 2700 -y 910 -defaultsOSRD
preplace inst axi_interconnect_0 -pg 1 -lvl 2 -x 630 -y 1120 -defaultsOSRD
preplace inst btns_gpio -pg 1 -lvl 5 -x 2380 -y 1070 -defaultsOSRD
preplace inst composable -pg 1 -lvl 3 -x 1130 -y 1260 -defaultsOSRD
preplace inst leds_gpio -pg 1 -lvl 5 -x 2380 -y 1350 -defaultsOSRD
preplace inst ps7_0 -pg 1 -lvl 5 -x 2380 -y 780 -defaultsOSRD
preplace inst rst_ps7_0_fclk0 -pg 1 -lvl 1 -x 210 -y 390 -defaultsOSRD
preplace inst rst_ps7_0_fclk1 -pg 1 -lvl 1 -x 210 -y 590 -defaultsOSRD
preplace inst switches_gpio -pg 1 -lvl 5 -x 2380 -y 1210 -defaultsOSRD
preplace inst system_interrupts -pg 1 -lvl 3 -x 1130 -y 500 -defaultsOSRD
preplace inst video -pg 1 -lvl 4 -x 1810 -y 630 -defaultsOSRD
preplace inst concat_interrupts -pg 1 -lvl 2 -x 630 -y 190 -defaultsOSRD
preplace netloc axi_gpio_video_gpio_io_o 1 4 2 NJ 610 NJ
preplace netloc btns_gpio_ip2intc_irpt 1 1 5 440 360 840J 270 NJ 270 NJ 270 2660
preplace netloc hdmi_out_hpd_video_gpio_io_o 1 4 2 NJ 650 2680J
preplace netloc leds_gpio_ip2intc_irpt 1 1 5 470 340 790J 280 NJ 280 NJ 280 2670
preplace netloc ps7_0_FCLK_CLK0 1 0 6 30 280 420 420 910 600 1440 360 2100 630 2610
preplace netloc ps7_0_FCLK_CLK1 1 0 6 30 490 440 450 870 670 1400 350 2120 640 2600
preplace netloc ps7_0_FCLK_CLK2 1 3 3 1450 290 NJ 290 2650
preplace netloc ps7_0_FCLK_RESET0_N 1 0 6 20 290 390J 370 NJ 370 1310 300 NJ 300 2640
preplace netloc rst_ps7_0_fclk0_interconnect_aresetn 1 1 1 390 410n
preplace netloc rst_ps7_0_fclk0_peripheral_reset 1 1 3 NJ 390 NJ 390 1330
preplace netloc rst_ps7_0_fclk1_interconnect_aresetn 1 1 3 410 460 900J 680 1320J
preplace netloc rst_ps7_0_fclk1_peripheral_aresetn 1 1 3 400 440 880 690 1290J
preplace netloc switches_gpio_ip2intc_irpt 1 1 5 450 380 910J 360 1330J 320 NJ 320 2630
preplace netloc system_interrupts_irq 1 3 2 1300 880 2120J
preplace netloc video_hdmi_in_hpd_irq 1 1 4 460 330 NJ 330 NJ 330 2020
preplace netloc video_hdmi_out_hpd_irq 1 1 4 420 20 NJ 20 NJ 20 2070
preplace netloc video_mm2s_introut 1 1 4 430 30 NJ 30 NJ 30 2060
preplace netloc video_peripheral_aresetn1 1 1 4 N 430 930 400 1390 370 2090
preplace netloc video_s2mm_introut 1 1 4 470 40 NJ 40 NJ 40 2050
preplace netloc video_vtc_in_irq 1 1 4 430 350 880J 340 NJ 340 2040
preplace netloc video_vtc_out_irq 1 1 4 460 50 NJ 50 NJ 50 2080
preplace netloc concat_interrupts_dout 1 2 1 920 190n
preplace netloc S01_AXIS_1 1 2 3 950 260 NJ 260 2010
preplace netloc s_axi_control_1 1 2 1 780 1230n
preplace netloc switches_gpio_GPIO 1 5 1 NJ 1200
preplace netloc video_hdmi_tx 1 4 2 NJ 590 NJ
preplace netloc s_axi_control5_1 1 2 1 N 1190
preplace netloc s_axi_control4_1 1 2 1 N 1250
preplace netloc axi_interconnect_0_M12_AXI 1 2 3 920 1060 NJ 1060 2050J
preplace netloc S00_AXIS_1 1 2 3 940 250 NJ 250 2030
preplace netloc S_AXI_1 1 2 1 780 1150n
preplace netloc S_AXI_CTRL_1 1 2 1 800 1130n
preplace netloc axi_interconnect_0_M00_AXI 1 2 2 830 700 1430J
preplace netloc axi_interconnect_0_M01_AXI 1 2 2 860 710 1370J
preplace netloc axi_interconnect_0_M02_AXI 1 2 2 780 610 NJ
preplace netloc axi_interconnect_0_M03_AXI 1 2 2 810 630 NJ
preplace netloc axi_interconnect_0_M04_AXI 1 2 2 800 620 1350J
preplace netloc axi_interconnect_0_M05_AXI 1 2 2 850 640 1320J
preplace netloc axi_interconnect_0_M06_AXI 1 2 2 890 650 1340J
preplace netloc axi_interconnect_0_M07_AXI 1 2 2 820 590 NJ
preplace netloc axi_interconnect_0_M08_AXI 1 2 2 790 410 1340J
preplace netloc axi_interconnect_0_M09_AXI 1 2 2 920 660 1380J
preplace netloc axi_interconnect_0_M10_AXI 1 2 1 840 470n
preplace netloc axi_interconnect_0_M11_AXI 1 2 3 910 1050 NJ 1050 NJ
preplace netloc axi_interconnect_0_M13_AXI 1 2 3 930 1070 NJ 1070 2020J
preplace netloc axi_mem_intercon_M00_AXI 1 4 1 2110 550n
preplace netloc btns_gpio_GPIO 1 5 1 NJ 1060
preplace netloc composable_M00_AXIS 1 3 1 1360 470n
preplace netloc composable_M01_AXIS 1 3 1 1420 530n
preplace netloc dvi2rgb_DDC 1 4 2 NJ 510 NJ
preplace netloc hdmi_in_1 1 0 4 30J 10 NJ 10 NJ 10 1410J
preplace netloc leds_gpio_GPIO 1 5 1 NJ 1340
preplace netloc m_axi_dfx_pr_0_0_1 1 2 1 790 1250n
preplace netloc m_axi_dfx_pr_0_1_1 1 2 1 800 1270n
preplace netloc m_axi_dfx_pr_1_0_1 1 2 1 820 1290n
preplace netloc m_axi_dfx_pr_1_1_1 1 2 1 840 1310n
preplace netloc m_axi_dfx_pr_fork_1 1 2 1 850 1330n
preplace netloc m_axi_dfx_pr_join_1 1 2 1 860 1350n
preplace netloc processing_system7_0_FIXED_IO 1 5 1 NJ 730
preplace netloc ps7_0_DDR 1 5 1 NJ 710
preplace netloc ps7_0_M_AXI_GP0 1 1 5 470 400 900J 310 NJ 310 NJ 310 2620
preplace netloc s_axi_control1_1 1 2 1 N 1210
preplace netloc s_axi_control2_1 1 2 1 N 1230
levelinfo -pg 1 0 210 630 1130 1810 2380 2700
pagesize -pg 1 -db -bbox -sgen -110 0 2890 1780
"
}

  # Restore current instance
  current_bd_instance $oldCurInst

  # Create PFM attributes
  set_property PFM_NAME {xilinx.com:xd:${overlay_name}:1.0} [get_files [current_bd_design].bd]
  set_property PFM.AXI_PORT {  S_AXI_ACP {memport "S_AXI_ACP"}  S_AXI_HP1 {memport "S_AXI_HP"}  S_AXI_HP3 {memport "S_AXI_HP"}  } [get_bd_cells /ps7_0]
  set_property PFM.CLOCK {  FCLK_CLK0 {id "0" is_default "true"  proc_sys_reset "rst_ps7_0_fclk0" status "fixed"}  FCLK_CLK1 {id "1" is_default "false"  proc_sys_reset "rst_ps7_0_fclk1" status "fixed"}  FCLK_CLK3 {id "3" is_default "false"  proc_sys_reset "rst_ps7_0_fclk3" status "fixed"}  } [get_bd_cells /ps7_0]


  validate_bd_design
  save_bd_design
  close_bd_design $design_name 
}
# End of cr_bd_video_cp()
cr_bd_video_cp ""
set_property PFM_NAME "xilinx.com:xd:${overlay_name}:1.0" [get_files video_cp.bd ] 
set_property REGISTERED_WITH_MANAGER "1" [get_files video_cp.bd ] 
set_property SYNTH_CHECKPOINT_MODE "Hierarchical" [get_files video_cp.bd ] 

#call make_wrapper to create wrapper files
if { [get_property IS_LOCKED [ get_files -norecurse video_cp.bd] ] == 1  } {
  import_files -fileset sources_1 [file normalize "${origin_dir}/cv_dfx_4_pr/cv_dfx_4_pr.gen/sources_1/bd/video_cp/hdl/video_cp_wrapper.v" ]
} else {
  set wrapper_path [make_wrapper -fileset sources_1 -files [ get_files -norecurse video_cp.bd] -top]
  add_files -norecurse -fileset sources_1 $wrapper_path
}


# Create 'config_1' pr configurations
create_pr_configuration -name config_1 -partitions [list video_cp_i/composable/pr_0:composable_pr_0_dilate_erode video_cp_i/composable/pr_1:composable_pr_1_dilate_erode video_cp_i/composable/pr_fork:composable_pr_fork_duplicate video_cp_i/composable/pr_join:composable_pr_join_subtract ]
set obj [get_pr_configurations config_1]
set_property -name "auto_import" -value "1" -objects $obj
set_property -name "partition_cell_rms" -value "video_cp_i/composable/pr_0:composable_pr_0_dilate_erode video_cp_i/composable/pr_1:composable_pr_1_dilate_erode video_cp_i/composable/pr_fork:composable_pr_fork_duplicate video_cp_i/composable/pr_join:composable_pr_join_subtract" -objects $obj
set_property -name "use_blackbox" -value "1" -objects $obj

# Create 'config_2' pr configurations
create_pr_configuration -name config_2 -partitions [list video_cp_i/composable/pr_0:composable_pr_0_fast_fifo video_cp_i/composable/pr_1:composable_pr_1_cornerharris_fifo video_cp_i/composable/pr_fork:composable_pr_fork_rgb2xyz video_cp_i/composable/pr_join:composable_pr_join_absdiff ]
set obj [get_pr_configurations config_2]
set_property -name "auto_import" -value "1" -objects $obj
set_property -name "partition_cell_rms" -value "video_cp_i/composable/pr_0:composable_pr_0_fast_fifo video_cp_i/composable/pr_1:composable_pr_1_cornerharris_fifo video_cp_i/composable/pr_fork:composable_pr_fork_rgb2xyz video_cp_i/composable/pr_join:composable_pr_join_absdiff" -objects $obj
set_property -name "use_blackbox" -value "1" -objects $obj

# Create 'config_3' pr configurations
create_pr_configuration -name config_3 -partitions [list video_cp_i/composable/pr_0:composable_pr_0_filter2d_fifo video_cp_i/composable/pr_join:composable_pr_join_add ] -greyboxes [list video_cp_i/composable/pr_1 video_cp_i/composable/pr_fork ]
set obj [get_pr_configurations config_3]
set_property -name "auto_import" -value "1" -objects $obj
set_property -name "greybox_cells" -value "video_cp_i/composable/pr_1 video_cp_i/composable/pr_fork" -objects $obj
set_property -name "partition_cell_rms" -value "video_cp_i/composable/pr_0:composable_pr_0_filter2d_fifo video_cp_i/composable/pr_join:composable_pr_join_add" -objects $obj
set_property -name "use_blackbox" -value "1" -objects $obj

# Create 'config_4' pr configurations
create_pr_configuration -name config_4 -partitions [list video_cp_i/composable/pr_join:composable_pr_join_bitand ] -greyboxes [list video_cp_i/composable/pr_0 video_cp_i/composable/pr_1 video_cp_i/composable/pr_fork ]
set obj [get_pr_configurations config_4]
set_property -name "auto_import" -value "1" -objects $obj
set_property -name "greybox_cells" -value "video_cp_i/composable/pr_0 video_cp_i/composable/pr_1 video_cp_i/composable/pr_fork" -objects $obj
set_property -name "partition_cell_rms" -value "video_cp_i/composable/pr_join:composable_pr_join_bitand" -objects $obj
set_property -name "use_blackbox" -value "1" -objects $obj

# Create 'synth_1' run (if not found)
if {[string equal [get_runs -quiet synth_1] ""]} {
    create_run -name synth_1 -part xc7z020clg400-1 -flow {Vivado Synthesis 2020} -strategy "Vivado Synthesis Defaults" -report_strategy {No Reports} -constrset constrs_1
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs synth_1]
  set_property flow "Vivado Synthesis 2020" [get_runs synth_1]
}
set obj [get_runs synth_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Synthesis Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'synth_1_synth_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs synth_1] synth_1_synth_report_utilization_0] "" ] } {
  create_report_config -report_name synth_1_synth_report_utilization_0 -report_type report_utilization:1.0 -steps synth_design -runs synth_1
}
set obj [get_report_configs -of_objects [get_runs synth_1] synth_1_synth_report_utilization_0]
if { $obj != "" } {

}
set obj [get_runs synth_1]
set_property -name "strategy" -value "Vivado Synthesis Defaults" -objects $obj

# Create 'composable_pr_0_dilate_erode_synth_1' run (if not found)
if {[string equal [get_runs -quiet composable_pr_0_dilate_erode_synth_1] ""]} {
    create_run -name composable_pr_0_dilate_erode_synth_1 -part xc7z020clg400-1 -flow {Vivado Synthesis 2020} -strategy "Vivado Synthesis Defaults" -report_strategy {No Reports} -constrset composable_pr_0_dilate_erode
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs composable_pr_0_dilate_erode_synth_1]
  set_property flow "Vivado Synthesis 2020" [get_runs composable_pr_0_dilate_erode_synth_1]
}
set obj [get_runs composable_pr_0_dilate_erode_synth_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Synthesis Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'composable_pr_0_dilate_erode_synth_1_synth_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_0_dilate_erode_synth_1] composable_pr_0_dilate_erode_synth_1_synth_report_utilization_0] "" ] } {
  create_report_config -report_name composable_pr_0_dilate_erode_synth_1_synth_report_utilization_0 -report_type report_utilization:1.0 -steps synth_design -runs composable_pr_0_dilate_erode_synth_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_0_dilate_erode_synth_1] composable_pr_0_dilate_erode_synth_1_synth_report_utilization_0]
if { $obj != "" } {

}
set obj [get_runs composable_pr_0_dilate_erode_synth_1]
set_property -name "constrset" -value "composable_pr_0_dilate_erode" -objects $obj
set_property -name "strategy" -value "Vivado Synthesis Defaults" -objects $obj

# Create 'composable_pr_0_fast_fifo_synth_1' run (if not found)
if {[string equal [get_runs -quiet composable_pr_0_fast_fifo_synth_1] ""]} {
    create_run -name composable_pr_0_fast_fifo_synth_1 -part xc7z020clg400-1 -flow {Vivado Synthesis 2020} -strategy "Vivado Synthesis Defaults" -report_strategy {No Reports} -constrset composable_pr_0_fast_fifo
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs composable_pr_0_fast_fifo_synth_1]
  set_property flow "Vivado Synthesis 2020" [get_runs composable_pr_0_fast_fifo_synth_1]
}
set obj [get_runs composable_pr_0_fast_fifo_synth_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Synthesis Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'composable_pr_0_fast_fifo_synth_1_synth_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_0_fast_fifo_synth_1] composable_pr_0_fast_fifo_synth_1_synth_report_utilization_0] "" ] } {
  create_report_config -report_name composable_pr_0_fast_fifo_synth_1_synth_report_utilization_0 -report_type report_utilization:1.0 -steps synth_design -runs composable_pr_0_fast_fifo_synth_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_0_fast_fifo_synth_1] composable_pr_0_fast_fifo_synth_1_synth_report_utilization_0]
if { $obj != "" } {

}
set obj [get_runs composable_pr_0_fast_fifo_synth_1]
set_property -name "constrset" -value "composable_pr_0_fast_fifo" -objects $obj
set_property -name "strategy" -value "Vivado Synthesis Defaults" -objects $obj

# Create 'composable_pr_0_filter2d_fifo_synth_1' run (if not found)
if {[string equal [get_runs -quiet composable_pr_0_filter2d_fifo_synth_1] ""]} {
    create_run -name composable_pr_0_filter2d_fifo_synth_1 -part xc7z020clg400-1 -flow {Vivado Synthesis 2020} -strategy "Vivado Synthesis Defaults" -report_strategy {No Reports} -constrset composable_pr_0_filter2d_fifo
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs composable_pr_0_filter2d_fifo_synth_1]
  set_property flow "Vivado Synthesis 2020" [get_runs composable_pr_0_filter2d_fifo_synth_1]
}
set obj [get_runs composable_pr_0_filter2d_fifo_synth_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Synthesis Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'composable_pr_0_filter2d_fifo_synth_1_synth_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_0_filter2d_fifo_synth_1] composable_pr_0_filter2d_fifo_synth_1_synth_report_utilization_0] "" ] } {
  create_report_config -report_name composable_pr_0_filter2d_fifo_synth_1_synth_report_utilization_0 -report_type report_utilization:1.0 -steps synth_design -runs composable_pr_0_filter2d_fifo_synth_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_0_filter2d_fifo_synth_1] composable_pr_0_filter2d_fifo_synth_1_synth_report_utilization_0]
if { $obj != "" } {

}
set obj [get_runs composable_pr_0_filter2d_fifo_synth_1]
set_property -name "constrset" -value "composable_pr_0_filter2d_fifo" -objects $obj
set_property -name "strategy" -value "Vivado Synthesis Defaults" -objects $obj

# Create 'composable_pr_1_dilate_erode_synth_1' run (if not found)
if {[string equal [get_runs -quiet composable_pr_1_dilate_erode_synth_1] ""]} {
    create_run -name composable_pr_1_dilate_erode_synth_1 -part xc7z020clg400-1 -flow {Vivado Synthesis 2020} -strategy "Vivado Synthesis Defaults" -report_strategy {No Reports} -constrset composable_pr_1_dilate_erode
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs composable_pr_1_dilate_erode_synth_1]
  set_property flow "Vivado Synthesis 2020" [get_runs composable_pr_1_dilate_erode_synth_1]
}
set obj [get_runs composable_pr_1_dilate_erode_synth_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Synthesis Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'composable_pr_1_dilate_erode_synth_1_synth_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_1_dilate_erode_synth_1] composable_pr_1_dilate_erode_synth_1_synth_report_utilization_0] "" ] } {
  create_report_config -report_name composable_pr_1_dilate_erode_synth_1_synth_report_utilization_0 -report_type report_utilization:1.0 -steps synth_design -runs composable_pr_1_dilate_erode_synth_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_1_dilate_erode_synth_1] composable_pr_1_dilate_erode_synth_1_synth_report_utilization_0]
if { $obj != "" } {

}
set obj [get_runs composable_pr_1_dilate_erode_synth_1]
set_property -name "constrset" -value "composable_pr_1_dilate_erode" -objects $obj
set_property -name "strategy" -value "Vivado Synthesis Defaults" -objects $obj

# Create 'composable_pr_1_cornerharris_fifo_synth_1' run (if not found)
if {[string equal [get_runs -quiet composable_pr_1_cornerharris_fifo_synth_1] ""]} {
    create_run -name composable_pr_1_cornerharris_fifo_synth_1 -part xc7z020clg400-1 -flow {Vivado Synthesis 2020} -strategy "Vivado Synthesis Defaults" -report_strategy {No Reports} -constrset composable_pr_1_cornerharris_fifo
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs composable_pr_1_cornerharris_fifo_synth_1]
  set_property flow "Vivado Synthesis 2020" [get_runs composable_pr_1_cornerharris_fifo_synth_1]
}
set obj [get_runs composable_pr_1_cornerharris_fifo_synth_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Synthesis Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'composable_pr_1_cornerharris_fifo_synth_1_synth_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_1_cornerharris_fifo_synth_1] composable_pr_1_cornerharris_fifo_synth_1_synth_report_utilization_0] "" ] } {
  create_report_config -report_name composable_pr_1_cornerharris_fifo_synth_1_synth_report_utilization_0 -report_type report_utilization:1.0 -steps synth_design -runs composable_pr_1_cornerharris_fifo_synth_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_1_cornerharris_fifo_synth_1] composable_pr_1_cornerharris_fifo_synth_1_synth_report_utilization_0]
if { $obj != "" } {

}
set obj [get_runs composable_pr_1_cornerharris_fifo_synth_1]
set_property -name "constrset" -value "composable_pr_1_cornerharris_fifo" -objects $obj
set_property -name "strategy" -value "Vivado Synthesis Defaults" -objects $obj

# Create 'composable_pr_join_subtract_synth_1' run (if not found)
if {[string equal [get_runs -quiet composable_pr_join_subtract_synth_1] ""]} {
    create_run -name composable_pr_join_subtract_synth_1 -part xc7z020clg400-1 -flow {Vivado Synthesis 2020} -strategy "Vivado Synthesis Defaults" -report_strategy {No Reports} -constrset composable_pr_join_subtract
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs composable_pr_join_subtract_synth_1]
  set_property flow "Vivado Synthesis 2020" [get_runs composable_pr_join_subtract_synth_1]
}
set obj [get_runs composable_pr_join_subtract_synth_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Synthesis Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'composable_pr_join_subtract_synth_1_synth_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_join_subtract_synth_1] composable_pr_join_subtract_synth_1_synth_report_utilization_0] "" ] } {
  create_report_config -report_name composable_pr_join_subtract_synth_1_synth_report_utilization_0 -report_type report_utilization:1.0 -steps synth_design -runs composable_pr_join_subtract_synth_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_join_subtract_synth_1] composable_pr_join_subtract_synth_1_synth_report_utilization_0]
if { $obj != "" } {

}
set obj [get_runs composable_pr_join_subtract_synth_1]
set_property -name "constrset" -value "composable_pr_join_subtract" -objects $obj
set_property -name "strategy" -value "Vivado Synthesis Defaults" -objects $obj

# Create 'composable_pr_join_absdiff_synth_1' run (if not found)
if {[string equal [get_runs -quiet composable_pr_join_absdiff_synth_1] ""]} {
    create_run -name composable_pr_join_absdiff_synth_1 -part xc7z020clg400-1 -flow {Vivado Synthesis 2020} -strategy "Vivado Synthesis Defaults" -report_strategy {No Reports} -constrset composable_pr_join_absdiff
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs composable_pr_join_absdiff_synth_1]
  set_property flow "Vivado Synthesis 2020" [get_runs composable_pr_join_absdiff_synth_1]
}
set obj [get_runs composable_pr_join_absdiff_synth_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Synthesis Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'composable_pr_join_absdiff_synth_1_synth_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_join_absdiff_synth_1] composable_pr_join_absdiff_synth_1_synth_report_utilization_0] "" ] } {
  create_report_config -report_name composable_pr_join_absdiff_synth_1_synth_report_utilization_0 -report_type report_utilization:1.0 -steps synth_design -runs composable_pr_join_absdiff_synth_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_join_absdiff_synth_1] composable_pr_join_absdiff_synth_1_synth_report_utilization_0]
if { $obj != "" } {

}
set obj [get_runs composable_pr_join_absdiff_synth_1]
set_property -name "constrset" -value "composable_pr_join_absdiff" -objects $obj
set_property -name "strategy" -value "Vivado Synthesis Defaults" -objects $obj

# Create 'composable_pr_join_add_synth_1' run (if not found)
if {[string equal [get_runs -quiet composable_pr_join_add_synth_1] ""]} {
    create_run -name composable_pr_join_add_synth_1 -part xc7z020clg400-1 -flow {Vivado Synthesis 2020} -strategy "Vivado Synthesis Defaults" -report_strategy {No Reports} -constrset composable_pr_join_add
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs composable_pr_join_add_synth_1]
  set_property flow "Vivado Synthesis 2020" [get_runs composable_pr_join_add_synth_1]
}
set obj [get_runs composable_pr_join_add_synth_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Synthesis Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'composable_pr_join_add_synth_1_synth_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_join_add_synth_1] composable_pr_join_add_synth_1_synth_report_utilization_0] "" ] } {
  create_report_config -report_name composable_pr_join_add_synth_1_synth_report_utilization_0 -report_type report_utilization:1.0 -steps synth_design -runs composable_pr_join_add_synth_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_join_add_synth_1] composable_pr_join_add_synth_1_synth_report_utilization_0]
if { $obj != "" } {

}
set obj [get_runs composable_pr_join_add_synth_1]
set_property -name "constrset" -value "composable_pr_join_add" -objects $obj
set_property -name "strategy" -value "Vivado Synthesis Defaults" -objects $obj

# Create 'composable_pr_join_bitand_synth_1' run (if not found)
if {[string equal [get_runs -quiet composable_pr_join_bitand_synth_1] ""]} {
    create_run -name composable_pr_join_bitand_synth_1 -part xc7z020clg400-1 -flow {Vivado Synthesis 2020} -strategy "Vivado Synthesis Defaults" -report_strategy {No Reports} -constrset composable_pr_join_bitand
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs composable_pr_join_bitand_synth_1]
  set_property flow "Vivado Synthesis 2020" [get_runs composable_pr_join_bitand_synth_1]
}
set obj [get_runs composable_pr_join_bitand_synth_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Synthesis Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'composable_pr_join_bitand_synth_1_synth_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_join_bitand_synth_1] composable_pr_join_bitand_synth_1_synth_report_utilization_0] "" ] } {
  create_report_config -report_name composable_pr_join_bitand_synth_1_synth_report_utilization_0 -report_type report_utilization:1.0 -steps synth_design -runs composable_pr_join_bitand_synth_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_join_bitand_synth_1] composable_pr_join_bitand_synth_1_synth_report_utilization_0]
if { $obj != "" } {

}
set obj [get_runs composable_pr_join_bitand_synth_1]
set_property -name "constrset" -value "composable_pr_join_bitand" -objects $obj
set_property -name "strategy" -value "Vivado Synthesis Defaults" -objects $obj

# Create 'composable_pr_fork_duplicate_synth_1' run (if not found)
if {[string equal [get_runs -quiet composable_pr_fork_duplicate_synth_1] ""]} {
    create_run -name composable_pr_fork_duplicate_synth_1 -part xc7z020clg400-1 -flow {Vivado Synthesis 2020} -strategy "Vivado Synthesis Defaults" -report_strategy {No Reports} -constrset composable_pr_fork_duplicate
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs composable_pr_fork_duplicate_synth_1]
  set_property flow "Vivado Synthesis 2020" [get_runs composable_pr_fork_duplicate_synth_1]
}
set obj [get_runs composable_pr_fork_duplicate_synth_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Synthesis Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'composable_pr_fork_duplicate_synth_1_synth_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_fork_duplicate_synth_1] composable_pr_fork_duplicate_synth_1_synth_report_utilization_0] "" ] } {
  create_report_config -report_name composable_pr_fork_duplicate_synth_1_synth_report_utilization_0 -report_type report_utilization:1.0 -steps synth_design -runs composable_pr_fork_duplicate_synth_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_fork_duplicate_synth_1] composable_pr_fork_duplicate_synth_1_synth_report_utilization_0]
if { $obj != "" } {

}
set obj [get_runs composable_pr_fork_duplicate_synth_1]
set_property -name "constrset" -value "composable_pr_fork_duplicate" -objects $obj
set_property -name "strategy" -value "Vivado Synthesis Defaults" -objects $obj

# Create 'composable_pr_fork_rgb2xyz_synth_1' run (if not found)
if {[string equal [get_runs -quiet composable_pr_fork_rgb2xyz_synth_1] ""]} {
    create_run -name composable_pr_fork_rgb2xyz_synth_1 -part xc7z020clg400-1 -flow {Vivado Synthesis 2020} -strategy "Vivado Synthesis Defaults" -report_strategy {No Reports} -constrset composable_pr_fork_rgb2xyz
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs composable_pr_fork_rgb2xyz_synth_1]
  set_property flow "Vivado Synthesis 2020" [get_runs composable_pr_fork_rgb2xyz_synth_1]
}
set obj [get_runs composable_pr_fork_rgb2xyz_synth_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Synthesis Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'composable_pr_fork_rgb2xyz_synth_1_synth_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_fork_rgb2xyz_synth_1] composable_pr_fork_rgb2xyz_synth_1_synth_report_utilization_0] "" ] } {
  create_report_config -report_name composable_pr_fork_rgb2xyz_synth_1_synth_report_utilization_0 -report_type report_utilization:1.0 -steps synth_design -runs composable_pr_fork_rgb2xyz_synth_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_fork_rgb2xyz_synth_1] composable_pr_fork_rgb2xyz_synth_1_synth_report_utilization_0]
if { $obj != "" } {

}
set obj [get_runs composable_pr_fork_rgb2xyz_synth_1]
set_property -name "constrset" -value "composable_pr_fork_rgb2xyz" -objects $obj
set_property -name "strategy" -value "Vivado Synthesis Defaults" -objects $obj

# set the current synth run
current_run -synthesis [get_runs synth_1]

# Create 'impl_1' run (if not found)
if {[string equal [get_runs -quiet impl_1] ""]} {
    create_run -name impl_1 -part xc7z020clg400-1 -flow {Vivado Implementation 2020} -strategy "Performance_Explore" -report_strategy {No Reports} -constrset constrs_1 -parent_run synth_1
} else {
  set_property strategy "Performance_Explore" [get_runs impl_1]
  set_property flow "Vivado Implementation 2020" [get_runs impl_1]
}
set_property pr_configuration config_1 [get_runs impl_1]
set obj [get_runs impl_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'impl_1_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_io_0] "" ] } {
  create_report_config -report_name impl_1_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_io_0]
if { $obj != "" } {

}
# Create 'impl_1_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_utilization_0] "" ] } {
  create_report_config -report_name impl_1_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_control_sets_0] "" ] } {
  create_report_config -report_name impl_1_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'impl_1_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name impl_1_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_methodology_0] "" ] } {
  create_report_config -report_name impl_1_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_power_0] "" ] } {
  create_report_config -report_name impl_1_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_power_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_route_status_0] "" ] } {
  create_report_config -report_name impl_1_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name impl_1_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs impl_1]
set_property -name "strategy" -value "Performance_Explore" -objects $obj
set_property -name "steps.opt_design.args.directive" -value "Explore" -objects $obj
set_property -name "steps.place_design.args.directive" -value "Explore" -objects $obj
set_property -name "steps.phys_opt_design.args.directive" -value "Explore" -objects $obj
set_property -name "steps.route_design.args.directive" -value "Explore" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# Create 'composable_pr_0_dilate_erode_impl_1' run (if not found)
if {[string equal [get_runs -quiet composable_pr_0_dilate_erode_impl_1] ""]} {
    create_run -name composable_pr_0_dilate_erode_impl_1 -part xc7z020clg400-1 -flow {Vivado Implementation 2020} -strategy "Vivado Implementation Defaults" -report_strategy {No Reports} -constrset composable_pr_0_dilate_erode -parent_run composable_pr_0_dilate_erode_synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs composable_pr_0_dilate_erode_impl_1]
  set_property flow "Vivado Implementation 2020" [get_runs composable_pr_0_dilate_erode_impl_1]
}
set obj [get_runs composable_pr_0_dilate_erode_impl_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'composable_pr_0_dilate_erode_impl_1_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_0_dilate_erode_impl_1] composable_pr_0_dilate_erode_impl_1_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name composable_pr_0_dilate_erode_impl_1_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs composable_pr_0_dilate_erode_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_0_dilate_erode_impl_1] composable_pr_0_dilate_erode_impl_1_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'composable_pr_0_dilate_erode_impl_1_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_0_dilate_erode_impl_1] composable_pr_0_dilate_erode_impl_1_opt_report_drc_0] "" ] } {
  create_report_config -report_name composable_pr_0_dilate_erode_impl_1_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs composable_pr_0_dilate_erode_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_0_dilate_erode_impl_1] composable_pr_0_dilate_erode_impl_1_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'composable_pr_0_dilate_erode_impl_1_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_0_dilate_erode_impl_1] composable_pr_0_dilate_erode_impl_1_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name composable_pr_0_dilate_erode_impl_1_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs composable_pr_0_dilate_erode_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_0_dilate_erode_impl_1] composable_pr_0_dilate_erode_impl_1_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'composable_pr_0_dilate_erode_impl_1_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_0_dilate_erode_impl_1] composable_pr_0_dilate_erode_impl_1_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name composable_pr_0_dilate_erode_impl_1_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs composable_pr_0_dilate_erode_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_0_dilate_erode_impl_1] composable_pr_0_dilate_erode_impl_1_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'composable_pr_0_dilate_erode_impl_1_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_0_dilate_erode_impl_1] composable_pr_0_dilate_erode_impl_1_place_report_io_0] "" ] } {
  create_report_config -report_name composable_pr_0_dilate_erode_impl_1_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs composable_pr_0_dilate_erode_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_0_dilate_erode_impl_1] composable_pr_0_dilate_erode_impl_1_place_report_io_0]
if { $obj != "" } {

}
# Create 'composable_pr_0_dilate_erode_impl_1_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_0_dilate_erode_impl_1] composable_pr_0_dilate_erode_impl_1_place_report_utilization_0] "" ] } {
  create_report_config -report_name composable_pr_0_dilate_erode_impl_1_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs composable_pr_0_dilate_erode_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_0_dilate_erode_impl_1] composable_pr_0_dilate_erode_impl_1_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'composable_pr_0_dilate_erode_impl_1_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_0_dilate_erode_impl_1] composable_pr_0_dilate_erode_impl_1_place_report_control_sets_0] "" ] } {
  create_report_config -report_name composable_pr_0_dilate_erode_impl_1_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs composable_pr_0_dilate_erode_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_0_dilate_erode_impl_1] composable_pr_0_dilate_erode_impl_1_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'composable_pr_0_dilate_erode_impl_1_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_0_dilate_erode_impl_1] composable_pr_0_dilate_erode_impl_1_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name composable_pr_0_dilate_erode_impl_1_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs composable_pr_0_dilate_erode_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_0_dilate_erode_impl_1] composable_pr_0_dilate_erode_impl_1_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'composable_pr_0_dilate_erode_impl_1_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_0_dilate_erode_impl_1] composable_pr_0_dilate_erode_impl_1_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name composable_pr_0_dilate_erode_impl_1_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs composable_pr_0_dilate_erode_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_0_dilate_erode_impl_1] composable_pr_0_dilate_erode_impl_1_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'composable_pr_0_dilate_erode_impl_1_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_0_dilate_erode_impl_1] composable_pr_0_dilate_erode_impl_1_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name composable_pr_0_dilate_erode_impl_1_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs composable_pr_0_dilate_erode_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_0_dilate_erode_impl_1] composable_pr_0_dilate_erode_impl_1_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'composable_pr_0_dilate_erode_impl_1_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_0_dilate_erode_impl_1] composable_pr_0_dilate_erode_impl_1_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name composable_pr_0_dilate_erode_impl_1_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs composable_pr_0_dilate_erode_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_0_dilate_erode_impl_1] composable_pr_0_dilate_erode_impl_1_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'composable_pr_0_dilate_erode_impl_1_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_0_dilate_erode_impl_1] composable_pr_0_dilate_erode_impl_1_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name composable_pr_0_dilate_erode_impl_1_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs composable_pr_0_dilate_erode_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_0_dilate_erode_impl_1] composable_pr_0_dilate_erode_impl_1_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'composable_pr_0_dilate_erode_impl_1_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_0_dilate_erode_impl_1] composable_pr_0_dilate_erode_impl_1_route_report_drc_0] "" ] } {
  create_report_config -report_name composable_pr_0_dilate_erode_impl_1_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs composable_pr_0_dilate_erode_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_0_dilate_erode_impl_1] composable_pr_0_dilate_erode_impl_1_route_report_drc_0]
if { $obj != "" } {

}
# Create 'composable_pr_0_dilate_erode_impl_1_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_0_dilate_erode_impl_1] composable_pr_0_dilate_erode_impl_1_route_report_methodology_0] "" ] } {
  create_report_config -report_name composable_pr_0_dilate_erode_impl_1_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs composable_pr_0_dilate_erode_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_0_dilate_erode_impl_1] composable_pr_0_dilate_erode_impl_1_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'composable_pr_0_dilate_erode_impl_1_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_0_dilate_erode_impl_1] composable_pr_0_dilate_erode_impl_1_route_report_power_0] "" ] } {
  create_report_config -report_name composable_pr_0_dilate_erode_impl_1_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs composable_pr_0_dilate_erode_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_0_dilate_erode_impl_1] composable_pr_0_dilate_erode_impl_1_route_report_power_0]
if { $obj != "" } {

}
# Create 'composable_pr_0_dilate_erode_impl_1_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_0_dilate_erode_impl_1] composable_pr_0_dilate_erode_impl_1_route_report_route_status_0] "" ] } {
  create_report_config -report_name composable_pr_0_dilate_erode_impl_1_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs composable_pr_0_dilate_erode_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_0_dilate_erode_impl_1] composable_pr_0_dilate_erode_impl_1_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'composable_pr_0_dilate_erode_impl_1_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_0_dilate_erode_impl_1] composable_pr_0_dilate_erode_impl_1_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name composable_pr_0_dilate_erode_impl_1_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs composable_pr_0_dilate_erode_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_0_dilate_erode_impl_1] composable_pr_0_dilate_erode_impl_1_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'composable_pr_0_dilate_erode_impl_1_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_0_dilate_erode_impl_1] composable_pr_0_dilate_erode_impl_1_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name composable_pr_0_dilate_erode_impl_1_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs composable_pr_0_dilate_erode_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_0_dilate_erode_impl_1] composable_pr_0_dilate_erode_impl_1_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'composable_pr_0_dilate_erode_impl_1_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_0_dilate_erode_impl_1] composable_pr_0_dilate_erode_impl_1_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name composable_pr_0_dilate_erode_impl_1_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs composable_pr_0_dilate_erode_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_0_dilate_erode_impl_1] composable_pr_0_dilate_erode_impl_1_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'composable_pr_0_dilate_erode_impl_1_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_0_dilate_erode_impl_1] composable_pr_0_dilate_erode_impl_1_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name composable_pr_0_dilate_erode_impl_1_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs composable_pr_0_dilate_erode_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_0_dilate_erode_impl_1] composable_pr_0_dilate_erode_impl_1_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'composable_pr_0_dilate_erode_impl_1_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_0_dilate_erode_impl_1] composable_pr_0_dilate_erode_impl_1_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name composable_pr_0_dilate_erode_impl_1_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs composable_pr_0_dilate_erode_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_0_dilate_erode_impl_1] composable_pr_0_dilate_erode_impl_1_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'composable_pr_0_dilate_erode_impl_1_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_0_dilate_erode_impl_1] composable_pr_0_dilate_erode_impl_1_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name composable_pr_0_dilate_erode_impl_1_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs composable_pr_0_dilate_erode_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_0_dilate_erode_impl_1] composable_pr_0_dilate_erode_impl_1_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs composable_pr_0_dilate_erode_impl_1]
set_property -name "constrset" -value "composable_pr_0_dilate_erode" -objects $obj
set_property -name "include_in_archive" -value "0" -objects $obj
set_property -name "strategy" -value "Vivado Implementation Defaults" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# Create 'composable_pr_0_fast_fifo_impl_1' run (if not found)
if {[string equal [get_runs -quiet composable_pr_0_fast_fifo_impl_1] ""]} {
    create_run -name composable_pr_0_fast_fifo_impl_1 -part xc7z020clg400-1 -flow {Vivado Implementation 2020} -strategy "Vivado Implementation Defaults" -report_strategy {No Reports} -constrset composable_pr_0_fast_fifo -parent_run composable_pr_0_fast_fifo_synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs composable_pr_0_fast_fifo_impl_1]
  set_property flow "Vivado Implementation 2020" [get_runs composable_pr_0_fast_fifo_impl_1]
}
set obj [get_runs composable_pr_0_fast_fifo_impl_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'composable_pr_0_fast_fifo_impl_1_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_0_fast_fifo_impl_1] composable_pr_0_fast_fifo_impl_1_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name composable_pr_0_fast_fifo_impl_1_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs composable_pr_0_fast_fifo_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_0_fast_fifo_impl_1] composable_pr_0_fast_fifo_impl_1_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'composable_pr_0_fast_fifo_impl_1_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_0_fast_fifo_impl_1] composable_pr_0_fast_fifo_impl_1_opt_report_drc_0] "" ] } {
  create_report_config -report_name composable_pr_0_fast_fifo_impl_1_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs composable_pr_0_fast_fifo_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_0_fast_fifo_impl_1] composable_pr_0_fast_fifo_impl_1_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'composable_pr_0_fast_fifo_impl_1_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_0_fast_fifo_impl_1] composable_pr_0_fast_fifo_impl_1_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name composable_pr_0_fast_fifo_impl_1_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs composable_pr_0_fast_fifo_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_0_fast_fifo_impl_1] composable_pr_0_fast_fifo_impl_1_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'composable_pr_0_fast_fifo_impl_1_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_0_fast_fifo_impl_1] composable_pr_0_fast_fifo_impl_1_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name composable_pr_0_fast_fifo_impl_1_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs composable_pr_0_fast_fifo_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_0_fast_fifo_impl_1] composable_pr_0_fast_fifo_impl_1_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'composable_pr_0_fast_fifo_impl_1_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_0_fast_fifo_impl_1] composable_pr_0_fast_fifo_impl_1_place_report_io_0] "" ] } {
  create_report_config -report_name composable_pr_0_fast_fifo_impl_1_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs composable_pr_0_fast_fifo_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_0_fast_fifo_impl_1] composable_pr_0_fast_fifo_impl_1_place_report_io_0]
if { $obj != "" } {

}
# Create 'composable_pr_0_fast_fifo_impl_1_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_0_fast_fifo_impl_1] composable_pr_0_fast_fifo_impl_1_place_report_utilization_0] "" ] } {
  create_report_config -report_name composable_pr_0_fast_fifo_impl_1_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs composable_pr_0_fast_fifo_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_0_fast_fifo_impl_1] composable_pr_0_fast_fifo_impl_1_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'composable_pr_0_fast_fifo_impl_1_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_0_fast_fifo_impl_1] composable_pr_0_fast_fifo_impl_1_place_report_control_sets_0] "" ] } {
  create_report_config -report_name composable_pr_0_fast_fifo_impl_1_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs composable_pr_0_fast_fifo_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_0_fast_fifo_impl_1] composable_pr_0_fast_fifo_impl_1_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'composable_pr_0_fast_fifo_impl_1_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_0_fast_fifo_impl_1] composable_pr_0_fast_fifo_impl_1_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name composable_pr_0_fast_fifo_impl_1_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs composable_pr_0_fast_fifo_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_0_fast_fifo_impl_1] composable_pr_0_fast_fifo_impl_1_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'composable_pr_0_fast_fifo_impl_1_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_0_fast_fifo_impl_1] composable_pr_0_fast_fifo_impl_1_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name composable_pr_0_fast_fifo_impl_1_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs composable_pr_0_fast_fifo_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_0_fast_fifo_impl_1] composable_pr_0_fast_fifo_impl_1_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'composable_pr_0_fast_fifo_impl_1_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_0_fast_fifo_impl_1] composable_pr_0_fast_fifo_impl_1_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name composable_pr_0_fast_fifo_impl_1_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs composable_pr_0_fast_fifo_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_0_fast_fifo_impl_1] composable_pr_0_fast_fifo_impl_1_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'composable_pr_0_fast_fifo_impl_1_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_0_fast_fifo_impl_1] composable_pr_0_fast_fifo_impl_1_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name composable_pr_0_fast_fifo_impl_1_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs composable_pr_0_fast_fifo_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_0_fast_fifo_impl_1] composable_pr_0_fast_fifo_impl_1_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'composable_pr_0_fast_fifo_impl_1_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_0_fast_fifo_impl_1] composable_pr_0_fast_fifo_impl_1_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name composable_pr_0_fast_fifo_impl_1_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs composable_pr_0_fast_fifo_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_0_fast_fifo_impl_1] composable_pr_0_fast_fifo_impl_1_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'composable_pr_0_fast_fifo_impl_1_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_0_fast_fifo_impl_1] composable_pr_0_fast_fifo_impl_1_route_report_drc_0] "" ] } {
  create_report_config -report_name composable_pr_0_fast_fifo_impl_1_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs composable_pr_0_fast_fifo_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_0_fast_fifo_impl_1] composable_pr_0_fast_fifo_impl_1_route_report_drc_0]
if { $obj != "" } {

}
# Create 'composable_pr_0_fast_fifo_impl_1_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_0_fast_fifo_impl_1] composable_pr_0_fast_fifo_impl_1_route_report_methodology_0] "" ] } {
  create_report_config -report_name composable_pr_0_fast_fifo_impl_1_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs composable_pr_0_fast_fifo_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_0_fast_fifo_impl_1] composable_pr_0_fast_fifo_impl_1_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'composable_pr_0_fast_fifo_impl_1_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_0_fast_fifo_impl_1] composable_pr_0_fast_fifo_impl_1_route_report_power_0] "" ] } {
  create_report_config -report_name composable_pr_0_fast_fifo_impl_1_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs composable_pr_0_fast_fifo_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_0_fast_fifo_impl_1] composable_pr_0_fast_fifo_impl_1_route_report_power_0]
if { $obj != "" } {

}
# Create 'composable_pr_0_fast_fifo_impl_1_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_0_fast_fifo_impl_1] composable_pr_0_fast_fifo_impl_1_route_report_route_status_0] "" ] } {
  create_report_config -report_name composable_pr_0_fast_fifo_impl_1_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs composable_pr_0_fast_fifo_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_0_fast_fifo_impl_1] composable_pr_0_fast_fifo_impl_1_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'composable_pr_0_fast_fifo_impl_1_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_0_fast_fifo_impl_1] composable_pr_0_fast_fifo_impl_1_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name composable_pr_0_fast_fifo_impl_1_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs composable_pr_0_fast_fifo_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_0_fast_fifo_impl_1] composable_pr_0_fast_fifo_impl_1_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'composable_pr_0_fast_fifo_impl_1_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_0_fast_fifo_impl_1] composable_pr_0_fast_fifo_impl_1_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name composable_pr_0_fast_fifo_impl_1_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs composable_pr_0_fast_fifo_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_0_fast_fifo_impl_1] composable_pr_0_fast_fifo_impl_1_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'composable_pr_0_fast_fifo_impl_1_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_0_fast_fifo_impl_1] composable_pr_0_fast_fifo_impl_1_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name composable_pr_0_fast_fifo_impl_1_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs composable_pr_0_fast_fifo_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_0_fast_fifo_impl_1] composable_pr_0_fast_fifo_impl_1_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'composable_pr_0_fast_fifo_impl_1_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_0_fast_fifo_impl_1] composable_pr_0_fast_fifo_impl_1_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name composable_pr_0_fast_fifo_impl_1_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs composable_pr_0_fast_fifo_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_0_fast_fifo_impl_1] composable_pr_0_fast_fifo_impl_1_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'composable_pr_0_fast_fifo_impl_1_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_0_fast_fifo_impl_1] composable_pr_0_fast_fifo_impl_1_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name composable_pr_0_fast_fifo_impl_1_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs composable_pr_0_fast_fifo_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_0_fast_fifo_impl_1] composable_pr_0_fast_fifo_impl_1_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'composable_pr_0_fast_fifo_impl_1_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_0_fast_fifo_impl_1] composable_pr_0_fast_fifo_impl_1_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name composable_pr_0_fast_fifo_impl_1_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs composable_pr_0_fast_fifo_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_0_fast_fifo_impl_1] composable_pr_0_fast_fifo_impl_1_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs composable_pr_0_fast_fifo_impl_1]
set_property -name "constrset" -value "composable_pr_0_fast_fifo" -objects $obj
set_property -name "include_in_archive" -value "0" -objects $obj
set_property -name "strategy" -value "Vivado Implementation Defaults" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# Create 'composable_pr_0_filter2d_fifo_impl_1' run (if not found)
if {[string equal [get_runs -quiet composable_pr_0_filter2d_fifo_impl_1] ""]} {
    create_run -name composable_pr_0_filter2d_fifo_impl_1 -part xc7z020clg400-1 -flow {Vivado Implementation 2020} -strategy "Vivado Implementation Defaults" -report_strategy {No Reports} -constrset composable_pr_0_filter2d_fifo -parent_run composable_pr_0_filter2d_fifo_synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs composable_pr_0_filter2d_fifo_impl_1]
  set_property flow "Vivado Implementation 2020" [get_runs composable_pr_0_filter2d_fifo_impl_1]
}
set obj [get_runs composable_pr_0_filter2d_fifo_impl_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'composable_pr_0_filter2d_fifo_impl_1_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_0_filter2d_fifo_impl_1] composable_pr_0_filter2d_fifo_impl_1_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name composable_pr_0_filter2d_fifo_impl_1_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs composable_pr_0_filter2d_fifo_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_0_filter2d_fifo_impl_1] composable_pr_0_filter2d_fifo_impl_1_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'composable_pr_0_filter2d_fifo_impl_1_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_0_filter2d_fifo_impl_1] composable_pr_0_filter2d_fifo_impl_1_opt_report_drc_0] "" ] } {
  create_report_config -report_name composable_pr_0_filter2d_fifo_impl_1_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs composable_pr_0_filter2d_fifo_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_0_filter2d_fifo_impl_1] composable_pr_0_filter2d_fifo_impl_1_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'composable_pr_0_filter2d_fifo_impl_1_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_0_filter2d_fifo_impl_1] composable_pr_0_filter2d_fifo_impl_1_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name composable_pr_0_filter2d_fifo_impl_1_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs composable_pr_0_filter2d_fifo_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_0_filter2d_fifo_impl_1] composable_pr_0_filter2d_fifo_impl_1_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'composable_pr_0_filter2d_fifo_impl_1_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_0_filter2d_fifo_impl_1] composable_pr_0_filter2d_fifo_impl_1_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name composable_pr_0_filter2d_fifo_impl_1_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs composable_pr_0_filter2d_fifo_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_0_filter2d_fifo_impl_1] composable_pr_0_filter2d_fifo_impl_1_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'composable_pr_0_filter2d_fifo_impl_1_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_0_filter2d_fifo_impl_1] composable_pr_0_filter2d_fifo_impl_1_place_report_io_0] "" ] } {
  create_report_config -report_name composable_pr_0_filter2d_fifo_impl_1_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs composable_pr_0_filter2d_fifo_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_0_filter2d_fifo_impl_1] composable_pr_0_filter2d_fifo_impl_1_place_report_io_0]
if { $obj != "" } {

}
# Create 'composable_pr_0_filter2d_fifo_impl_1_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_0_filter2d_fifo_impl_1] composable_pr_0_filter2d_fifo_impl_1_place_report_utilization_0] "" ] } {
  create_report_config -report_name composable_pr_0_filter2d_fifo_impl_1_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs composable_pr_0_filter2d_fifo_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_0_filter2d_fifo_impl_1] composable_pr_0_filter2d_fifo_impl_1_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'composable_pr_0_filter2d_fifo_impl_1_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_0_filter2d_fifo_impl_1] composable_pr_0_filter2d_fifo_impl_1_place_report_control_sets_0] "" ] } {
  create_report_config -report_name composable_pr_0_filter2d_fifo_impl_1_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs composable_pr_0_filter2d_fifo_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_0_filter2d_fifo_impl_1] composable_pr_0_filter2d_fifo_impl_1_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'composable_pr_0_filter2d_fifo_impl_1_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_0_filter2d_fifo_impl_1] composable_pr_0_filter2d_fifo_impl_1_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name composable_pr_0_filter2d_fifo_impl_1_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs composable_pr_0_filter2d_fifo_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_0_filter2d_fifo_impl_1] composable_pr_0_filter2d_fifo_impl_1_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'composable_pr_0_filter2d_fifo_impl_1_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_0_filter2d_fifo_impl_1] composable_pr_0_filter2d_fifo_impl_1_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name composable_pr_0_filter2d_fifo_impl_1_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs composable_pr_0_filter2d_fifo_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_0_filter2d_fifo_impl_1] composable_pr_0_filter2d_fifo_impl_1_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'composable_pr_0_filter2d_fifo_impl_1_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_0_filter2d_fifo_impl_1] composable_pr_0_filter2d_fifo_impl_1_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name composable_pr_0_filter2d_fifo_impl_1_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs composable_pr_0_filter2d_fifo_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_0_filter2d_fifo_impl_1] composable_pr_0_filter2d_fifo_impl_1_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'composable_pr_0_filter2d_fifo_impl_1_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_0_filter2d_fifo_impl_1] composable_pr_0_filter2d_fifo_impl_1_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name composable_pr_0_filter2d_fifo_impl_1_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs composable_pr_0_filter2d_fifo_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_0_filter2d_fifo_impl_1] composable_pr_0_filter2d_fifo_impl_1_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'composable_pr_0_filter2d_fifo_impl_1_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_0_filter2d_fifo_impl_1] composable_pr_0_filter2d_fifo_impl_1_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name composable_pr_0_filter2d_fifo_impl_1_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs composable_pr_0_filter2d_fifo_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_0_filter2d_fifo_impl_1] composable_pr_0_filter2d_fifo_impl_1_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'composable_pr_0_filter2d_fifo_impl_1_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_0_filter2d_fifo_impl_1] composable_pr_0_filter2d_fifo_impl_1_route_report_drc_0] "" ] } {
  create_report_config -report_name composable_pr_0_filter2d_fifo_impl_1_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs composable_pr_0_filter2d_fifo_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_0_filter2d_fifo_impl_1] composable_pr_0_filter2d_fifo_impl_1_route_report_drc_0]
if { $obj != "" } {

}
# Create 'composable_pr_0_filter2d_fifo_impl_1_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_0_filter2d_fifo_impl_1] composable_pr_0_filter2d_fifo_impl_1_route_report_methodology_0] "" ] } {
  create_report_config -report_name composable_pr_0_filter2d_fifo_impl_1_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs composable_pr_0_filter2d_fifo_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_0_filter2d_fifo_impl_1] composable_pr_0_filter2d_fifo_impl_1_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'composable_pr_0_filter2d_fifo_impl_1_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_0_filter2d_fifo_impl_1] composable_pr_0_filter2d_fifo_impl_1_route_report_power_0] "" ] } {
  create_report_config -report_name composable_pr_0_filter2d_fifo_impl_1_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs composable_pr_0_filter2d_fifo_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_0_filter2d_fifo_impl_1] composable_pr_0_filter2d_fifo_impl_1_route_report_power_0]
if { $obj != "" } {

}
# Create 'composable_pr_0_filter2d_fifo_impl_1_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_0_filter2d_fifo_impl_1] composable_pr_0_filter2d_fifo_impl_1_route_report_route_status_0] "" ] } {
  create_report_config -report_name composable_pr_0_filter2d_fifo_impl_1_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs composable_pr_0_filter2d_fifo_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_0_filter2d_fifo_impl_1] composable_pr_0_filter2d_fifo_impl_1_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'composable_pr_0_filter2d_fifo_impl_1_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_0_filter2d_fifo_impl_1] composable_pr_0_filter2d_fifo_impl_1_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name composable_pr_0_filter2d_fifo_impl_1_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs composable_pr_0_filter2d_fifo_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_0_filter2d_fifo_impl_1] composable_pr_0_filter2d_fifo_impl_1_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'composable_pr_0_filter2d_fifo_impl_1_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_0_filter2d_fifo_impl_1] composable_pr_0_filter2d_fifo_impl_1_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name composable_pr_0_filter2d_fifo_impl_1_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs composable_pr_0_filter2d_fifo_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_0_filter2d_fifo_impl_1] composable_pr_0_filter2d_fifo_impl_1_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'composable_pr_0_filter2d_fifo_impl_1_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_0_filter2d_fifo_impl_1] composable_pr_0_filter2d_fifo_impl_1_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name composable_pr_0_filter2d_fifo_impl_1_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs composable_pr_0_filter2d_fifo_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_0_filter2d_fifo_impl_1] composable_pr_0_filter2d_fifo_impl_1_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'composable_pr_0_filter2d_fifo_impl_1_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_0_filter2d_fifo_impl_1] composable_pr_0_filter2d_fifo_impl_1_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name composable_pr_0_filter2d_fifo_impl_1_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs composable_pr_0_filter2d_fifo_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_0_filter2d_fifo_impl_1] composable_pr_0_filter2d_fifo_impl_1_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'composable_pr_0_filter2d_fifo_impl_1_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_0_filter2d_fifo_impl_1] composable_pr_0_filter2d_fifo_impl_1_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name composable_pr_0_filter2d_fifo_impl_1_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs composable_pr_0_filter2d_fifo_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_0_filter2d_fifo_impl_1] composable_pr_0_filter2d_fifo_impl_1_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'composable_pr_0_filter2d_fifo_impl_1_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_0_filter2d_fifo_impl_1] composable_pr_0_filter2d_fifo_impl_1_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name composable_pr_0_filter2d_fifo_impl_1_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs composable_pr_0_filter2d_fifo_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_0_filter2d_fifo_impl_1] composable_pr_0_filter2d_fifo_impl_1_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs composable_pr_0_filter2d_fifo_impl_1]
set_property -name "constrset" -value "composable_pr_0_filter2d_fifo" -objects $obj
set_property -name "include_in_archive" -value "0" -objects $obj
set_property -name "strategy" -value "Vivado Implementation Defaults" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# Create 'composable_pr_1_dilate_erode_impl_1' run (if not found)
if {[string equal [get_runs -quiet composable_pr_1_dilate_erode_impl_1] ""]} {
    create_run -name composable_pr_1_dilate_erode_impl_1 -part xc7z020clg400-1 -flow {Vivado Implementation 2020} -strategy "Vivado Implementation Defaults" -report_strategy {No Reports} -constrset composable_pr_1_dilate_erode -parent_run composable_pr_1_dilate_erode_synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs composable_pr_1_dilate_erode_impl_1]
  set_property flow "Vivado Implementation 2020" [get_runs composable_pr_1_dilate_erode_impl_1]
}
set obj [get_runs composable_pr_1_dilate_erode_impl_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'composable_pr_1_dilate_erode_impl_1_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_1_dilate_erode_impl_1] composable_pr_1_dilate_erode_impl_1_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name composable_pr_1_dilate_erode_impl_1_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs composable_pr_1_dilate_erode_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_1_dilate_erode_impl_1] composable_pr_1_dilate_erode_impl_1_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'composable_pr_1_dilate_erode_impl_1_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_1_dilate_erode_impl_1] composable_pr_1_dilate_erode_impl_1_opt_report_drc_0] "" ] } {
  create_report_config -report_name composable_pr_1_dilate_erode_impl_1_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs composable_pr_1_dilate_erode_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_1_dilate_erode_impl_1] composable_pr_1_dilate_erode_impl_1_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'composable_pr_1_dilate_erode_impl_1_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_1_dilate_erode_impl_1] composable_pr_1_dilate_erode_impl_1_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name composable_pr_1_dilate_erode_impl_1_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs composable_pr_1_dilate_erode_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_1_dilate_erode_impl_1] composable_pr_1_dilate_erode_impl_1_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'composable_pr_1_dilate_erode_impl_1_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_1_dilate_erode_impl_1] composable_pr_1_dilate_erode_impl_1_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name composable_pr_1_dilate_erode_impl_1_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs composable_pr_1_dilate_erode_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_1_dilate_erode_impl_1] composable_pr_1_dilate_erode_impl_1_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'composable_pr_1_dilate_erode_impl_1_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_1_dilate_erode_impl_1] composable_pr_1_dilate_erode_impl_1_place_report_io_0] "" ] } {
  create_report_config -report_name composable_pr_1_dilate_erode_impl_1_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs composable_pr_1_dilate_erode_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_1_dilate_erode_impl_1] composable_pr_1_dilate_erode_impl_1_place_report_io_0]
if { $obj != "" } {

}
# Create 'composable_pr_1_dilate_erode_impl_1_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_1_dilate_erode_impl_1] composable_pr_1_dilate_erode_impl_1_place_report_utilization_0] "" ] } {
  create_report_config -report_name composable_pr_1_dilate_erode_impl_1_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs composable_pr_1_dilate_erode_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_1_dilate_erode_impl_1] composable_pr_1_dilate_erode_impl_1_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'composable_pr_1_dilate_erode_impl_1_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_1_dilate_erode_impl_1] composable_pr_1_dilate_erode_impl_1_place_report_control_sets_0] "" ] } {
  create_report_config -report_name composable_pr_1_dilate_erode_impl_1_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs composable_pr_1_dilate_erode_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_1_dilate_erode_impl_1] composable_pr_1_dilate_erode_impl_1_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'composable_pr_1_dilate_erode_impl_1_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_1_dilate_erode_impl_1] composable_pr_1_dilate_erode_impl_1_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name composable_pr_1_dilate_erode_impl_1_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs composable_pr_1_dilate_erode_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_1_dilate_erode_impl_1] composable_pr_1_dilate_erode_impl_1_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'composable_pr_1_dilate_erode_impl_1_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_1_dilate_erode_impl_1] composable_pr_1_dilate_erode_impl_1_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name composable_pr_1_dilate_erode_impl_1_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs composable_pr_1_dilate_erode_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_1_dilate_erode_impl_1] composable_pr_1_dilate_erode_impl_1_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'composable_pr_1_dilate_erode_impl_1_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_1_dilate_erode_impl_1] composable_pr_1_dilate_erode_impl_1_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name composable_pr_1_dilate_erode_impl_1_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs composable_pr_1_dilate_erode_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_1_dilate_erode_impl_1] composable_pr_1_dilate_erode_impl_1_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'composable_pr_1_dilate_erode_impl_1_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_1_dilate_erode_impl_1] composable_pr_1_dilate_erode_impl_1_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name composable_pr_1_dilate_erode_impl_1_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs composable_pr_1_dilate_erode_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_1_dilate_erode_impl_1] composable_pr_1_dilate_erode_impl_1_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'composable_pr_1_dilate_erode_impl_1_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_1_dilate_erode_impl_1] composable_pr_1_dilate_erode_impl_1_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name composable_pr_1_dilate_erode_impl_1_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs composable_pr_1_dilate_erode_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_1_dilate_erode_impl_1] composable_pr_1_dilate_erode_impl_1_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'composable_pr_1_dilate_erode_impl_1_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_1_dilate_erode_impl_1] composable_pr_1_dilate_erode_impl_1_route_report_drc_0] "" ] } {
  create_report_config -report_name composable_pr_1_dilate_erode_impl_1_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs composable_pr_1_dilate_erode_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_1_dilate_erode_impl_1] composable_pr_1_dilate_erode_impl_1_route_report_drc_0]
if { $obj != "" } {

}
# Create 'composable_pr_1_dilate_erode_impl_1_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_1_dilate_erode_impl_1] composable_pr_1_dilate_erode_impl_1_route_report_methodology_0] "" ] } {
  create_report_config -report_name composable_pr_1_dilate_erode_impl_1_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs composable_pr_1_dilate_erode_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_1_dilate_erode_impl_1] composable_pr_1_dilate_erode_impl_1_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'composable_pr_1_dilate_erode_impl_1_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_1_dilate_erode_impl_1] composable_pr_1_dilate_erode_impl_1_route_report_power_0] "" ] } {
  create_report_config -report_name composable_pr_1_dilate_erode_impl_1_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs composable_pr_1_dilate_erode_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_1_dilate_erode_impl_1] composable_pr_1_dilate_erode_impl_1_route_report_power_0]
if { $obj != "" } {

}
# Create 'composable_pr_1_dilate_erode_impl_1_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_1_dilate_erode_impl_1] composable_pr_1_dilate_erode_impl_1_route_report_route_status_0] "" ] } {
  create_report_config -report_name composable_pr_1_dilate_erode_impl_1_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs composable_pr_1_dilate_erode_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_1_dilate_erode_impl_1] composable_pr_1_dilate_erode_impl_1_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'composable_pr_1_dilate_erode_impl_1_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_1_dilate_erode_impl_1] composable_pr_1_dilate_erode_impl_1_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name composable_pr_1_dilate_erode_impl_1_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs composable_pr_1_dilate_erode_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_1_dilate_erode_impl_1] composable_pr_1_dilate_erode_impl_1_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'composable_pr_1_dilate_erode_impl_1_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_1_dilate_erode_impl_1] composable_pr_1_dilate_erode_impl_1_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name composable_pr_1_dilate_erode_impl_1_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs composable_pr_1_dilate_erode_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_1_dilate_erode_impl_1] composable_pr_1_dilate_erode_impl_1_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'composable_pr_1_dilate_erode_impl_1_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_1_dilate_erode_impl_1] composable_pr_1_dilate_erode_impl_1_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name composable_pr_1_dilate_erode_impl_1_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs composable_pr_1_dilate_erode_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_1_dilate_erode_impl_1] composable_pr_1_dilate_erode_impl_1_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'composable_pr_1_dilate_erode_impl_1_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_1_dilate_erode_impl_1] composable_pr_1_dilate_erode_impl_1_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name composable_pr_1_dilate_erode_impl_1_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs composable_pr_1_dilate_erode_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_1_dilate_erode_impl_1] composable_pr_1_dilate_erode_impl_1_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'composable_pr_1_dilate_erode_impl_1_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_1_dilate_erode_impl_1] composable_pr_1_dilate_erode_impl_1_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name composable_pr_1_dilate_erode_impl_1_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs composable_pr_1_dilate_erode_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_1_dilate_erode_impl_1] composable_pr_1_dilate_erode_impl_1_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'composable_pr_1_dilate_erode_impl_1_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_1_dilate_erode_impl_1] composable_pr_1_dilate_erode_impl_1_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name composable_pr_1_dilate_erode_impl_1_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs composable_pr_1_dilate_erode_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_1_dilate_erode_impl_1] composable_pr_1_dilate_erode_impl_1_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs composable_pr_1_dilate_erode_impl_1]
set_property -name "constrset" -value "composable_pr_1_dilate_erode" -objects $obj
set_property -name "include_in_archive" -value "0" -objects $obj
set_property -name "strategy" -value "Vivado Implementation Defaults" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# Create 'composable_pr_1_cornerharris_fifo_impl_1' run (if not found)
if {[string equal [get_runs -quiet composable_pr_1_cornerharris_fifo_impl_1] ""]} {
    create_run -name composable_pr_1_cornerharris_fifo_impl_1 -part xc7z020clg400-1 -flow {Vivado Implementation 2020} -strategy "Vivado Implementation Defaults" -report_strategy {No Reports} -constrset composable_pr_1_cornerharris_fifo -parent_run composable_pr_1_cornerharris_fifo_synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs composable_pr_1_cornerharris_fifo_impl_1]
  set_property flow "Vivado Implementation 2020" [get_runs composable_pr_1_cornerharris_fifo_impl_1]
}
set obj [get_runs composable_pr_1_cornerharris_fifo_impl_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'composable_pr_1_cornerharris_fifo_impl_1_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_1_cornerharris_fifo_impl_1] composable_pr_1_cornerharris_fifo_impl_1_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name composable_pr_1_cornerharris_fifo_impl_1_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs composable_pr_1_cornerharris_fifo_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_1_cornerharris_fifo_impl_1] composable_pr_1_cornerharris_fifo_impl_1_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'composable_pr_1_cornerharris_fifo_impl_1_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_1_cornerharris_fifo_impl_1] composable_pr_1_cornerharris_fifo_impl_1_opt_report_drc_0] "" ] } {
  create_report_config -report_name composable_pr_1_cornerharris_fifo_impl_1_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs composable_pr_1_cornerharris_fifo_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_1_cornerharris_fifo_impl_1] composable_pr_1_cornerharris_fifo_impl_1_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'composable_pr_1_cornerharris_fifo_impl_1_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_1_cornerharris_fifo_impl_1] composable_pr_1_cornerharris_fifo_impl_1_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name composable_pr_1_cornerharris_fifo_impl_1_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs composable_pr_1_cornerharris_fifo_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_1_cornerharris_fifo_impl_1] composable_pr_1_cornerharris_fifo_impl_1_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'composable_pr_1_cornerharris_fifo_impl_1_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_1_cornerharris_fifo_impl_1] composable_pr_1_cornerharris_fifo_impl_1_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name composable_pr_1_cornerharris_fifo_impl_1_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs composable_pr_1_cornerharris_fifo_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_1_cornerharris_fifo_impl_1] composable_pr_1_cornerharris_fifo_impl_1_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'composable_pr_1_cornerharris_fifo_impl_1_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_1_cornerharris_fifo_impl_1] composable_pr_1_cornerharris_fifo_impl_1_place_report_io_0] "" ] } {
  create_report_config -report_name composable_pr_1_cornerharris_fifo_impl_1_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs composable_pr_1_cornerharris_fifo_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_1_cornerharris_fifo_impl_1] composable_pr_1_cornerharris_fifo_impl_1_place_report_io_0]
if { $obj != "" } {

}
# Create 'composable_pr_1_cornerharris_fifo_impl_1_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_1_cornerharris_fifo_impl_1] composable_pr_1_cornerharris_fifo_impl_1_place_report_utilization_0] "" ] } {
  create_report_config -report_name composable_pr_1_cornerharris_fifo_impl_1_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs composable_pr_1_cornerharris_fifo_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_1_cornerharris_fifo_impl_1] composable_pr_1_cornerharris_fifo_impl_1_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'composable_pr_1_cornerharris_fifo_impl_1_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_1_cornerharris_fifo_impl_1] composable_pr_1_cornerharris_fifo_impl_1_place_report_control_sets_0] "" ] } {
  create_report_config -report_name composable_pr_1_cornerharris_fifo_impl_1_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs composable_pr_1_cornerharris_fifo_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_1_cornerharris_fifo_impl_1] composable_pr_1_cornerharris_fifo_impl_1_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'composable_pr_1_cornerharris_fifo_impl_1_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_1_cornerharris_fifo_impl_1] composable_pr_1_cornerharris_fifo_impl_1_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name composable_pr_1_cornerharris_fifo_impl_1_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs composable_pr_1_cornerharris_fifo_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_1_cornerharris_fifo_impl_1] composable_pr_1_cornerharris_fifo_impl_1_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'composable_pr_1_cornerharris_fifo_impl_1_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_1_cornerharris_fifo_impl_1] composable_pr_1_cornerharris_fifo_impl_1_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name composable_pr_1_cornerharris_fifo_impl_1_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs composable_pr_1_cornerharris_fifo_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_1_cornerharris_fifo_impl_1] composable_pr_1_cornerharris_fifo_impl_1_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'composable_pr_1_cornerharris_fifo_impl_1_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_1_cornerharris_fifo_impl_1] composable_pr_1_cornerharris_fifo_impl_1_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name composable_pr_1_cornerharris_fifo_impl_1_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs composable_pr_1_cornerharris_fifo_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_1_cornerharris_fifo_impl_1] composable_pr_1_cornerharris_fifo_impl_1_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'composable_pr_1_cornerharris_fifo_impl_1_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_1_cornerharris_fifo_impl_1] composable_pr_1_cornerharris_fifo_impl_1_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name composable_pr_1_cornerharris_fifo_impl_1_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs composable_pr_1_cornerharris_fifo_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_1_cornerharris_fifo_impl_1] composable_pr_1_cornerharris_fifo_impl_1_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'composable_pr_1_cornerharris_fifo_impl_1_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_1_cornerharris_fifo_impl_1] composable_pr_1_cornerharris_fifo_impl_1_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name composable_pr_1_cornerharris_fifo_impl_1_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs composable_pr_1_cornerharris_fifo_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_1_cornerharris_fifo_impl_1] composable_pr_1_cornerharris_fifo_impl_1_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'composable_pr_1_cornerharris_fifo_impl_1_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_1_cornerharris_fifo_impl_1] composable_pr_1_cornerharris_fifo_impl_1_route_report_drc_0] "" ] } {
  create_report_config -report_name composable_pr_1_cornerharris_fifo_impl_1_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs composable_pr_1_cornerharris_fifo_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_1_cornerharris_fifo_impl_1] composable_pr_1_cornerharris_fifo_impl_1_route_report_drc_0]
if { $obj != "" } {

}
# Create 'composable_pr_1_cornerharris_fifo_impl_1_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_1_cornerharris_fifo_impl_1] composable_pr_1_cornerharris_fifo_impl_1_route_report_methodology_0] "" ] } {
  create_report_config -report_name composable_pr_1_cornerharris_fifo_impl_1_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs composable_pr_1_cornerharris_fifo_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_1_cornerharris_fifo_impl_1] composable_pr_1_cornerharris_fifo_impl_1_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'composable_pr_1_cornerharris_fifo_impl_1_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_1_cornerharris_fifo_impl_1] composable_pr_1_cornerharris_fifo_impl_1_route_report_power_0] "" ] } {
  create_report_config -report_name composable_pr_1_cornerharris_fifo_impl_1_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs composable_pr_1_cornerharris_fifo_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_1_cornerharris_fifo_impl_1] composable_pr_1_cornerharris_fifo_impl_1_route_report_power_0]
if { $obj != "" } {

}
# Create 'composable_pr_1_cornerharris_fifo_impl_1_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_1_cornerharris_fifo_impl_1] composable_pr_1_cornerharris_fifo_impl_1_route_report_route_status_0] "" ] } {
  create_report_config -report_name composable_pr_1_cornerharris_fifo_impl_1_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs composable_pr_1_cornerharris_fifo_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_1_cornerharris_fifo_impl_1] composable_pr_1_cornerharris_fifo_impl_1_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'composable_pr_1_cornerharris_fifo_impl_1_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_1_cornerharris_fifo_impl_1] composable_pr_1_cornerharris_fifo_impl_1_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name composable_pr_1_cornerharris_fifo_impl_1_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs composable_pr_1_cornerharris_fifo_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_1_cornerharris_fifo_impl_1] composable_pr_1_cornerharris_fifo_impl_1_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'composable_pr_1_cornerharris_fifo_impl_1_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_1_cornerharris_fifo_impl_1] composable_pr_1_cornerharris_fifo_impl_1_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name composable_pr_1_cornerharris_fifo_impl_1_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs composable_pr_1_cornerharris_fifo_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_1_cornerharris_fifo_impl_1] composable_pr_1_cornerharris_fifo_impl_1_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'composable_pr_1_cornerharris_fifo_impl_1_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_1_cornerharris_fifo_impl_1] composable_pr_1_cornerharris_fifo_impl_1_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name composable_pr_1_cornerharris_fifo_impl_1_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs composable_pr_1_cornerharris_fifo_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_1_cornerharris_fifo_impl_1] composable_pr_1_cornerharris_fifo_impl_1_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'composable_pr_1_cornerharris_fifo_impl_1_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_1_cornerharris_fifo_impl_1] composable_pr_1_cornerharris_fifo_impl_1_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name composable_pr_1_cornerharris_fifo_impl_1_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs composable_pr_1_cornerharris_fifo_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_1_cornerharris_fifo_impl_1] composable_pr_1_cornerharris_fifo_impl_1_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'composable_pr_1_cornerharris_fifo_impl_1_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_1_cornerharris_fifo_impl_1] composable_pr_1_cornerharris_fifo_impl_1_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name composable_pr_1_cornerharris_fifo_impl_1_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs composable_pr_1_cornerharris_fifo_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_1_cornerharris_fifo_impl_1] composable_pr_1_cornerharris_fifo_impl_1_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'composable_pr_1_cornerharris_fifo_impl_1_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_1_cornerharris_fifo_impl_1] composable_pr_1_cornerharris_fifo_impl_1_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name composable_pr_1_cornerharris_fifo_impl_1_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs composable_pr_1_cornerharris_fifo_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_1_cornerharris_fifo_impl_1] composable_pr_1_cornerharris_fifo_impl_1_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs composable_pr_1_cornerharris_fifo_impl_1]
set_property -name "constrset" -value "composable_pr_1_cornerharris_fifo" -objects $obj
set_property -name "include_in_archive" -value "0" -objects $obj
set_property -name "strategy" -value "Vivado Implementation Defaults" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# Create 'composable_pr_join_subtract_impl_1' run (if not found)
if {[string equal [get_runs -quiet composable_pr_join_subtract_impl_1] ""]} {
    create_run -name composable_pr_join_subtract_impl_1 -part xc7z020clg400-1 -flow {Vivado Implementation 2020} -strategy "Vivado Implementation Defaults" -report_strategy {No Reports} -constrset composable_pr_join_subtract -parent_run composable_pr_join_subtract_synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs composable_pr_join_subtract_impl_1]
  set_property flow "Vivado Implementation 2020" [get_runs composable_pr_join_subtract_impl_1]
}
set obj [get_runs composable_pr_join_subtract_impl_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'composable_pr_join_subtract_impl_1_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_join_subtract_impl_1] composable_pr_join_subtract_impl_1_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name composable_pr_join_subtract_impl_1_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs composable_pr_join_subtract_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_join_subtract_impl_1] composable_pr_join_subtract_impl_1_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'composable_pr_join_subtract_impl_1_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_join_subtract_impl_1] composable_pr_join_subtract_impl_1_opt_report_drc_0] "" ] } {
  create_report_config -report_name composable_pr_join_subtract_impl_1_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs composable_pr_join_subtract_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_join_subtract_impl_1] composable_pr_join_subtract_impl_1_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'composable_pr_join_subtract_impl_1_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_join_subtract_impl_1] composable_pr_join_subtract_impl_1_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name composable_pr_join_subtract_impl_1_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs composable_pr_join_subtract_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_join_subtract_impl_1] composable_pr_join_subtract_impl_1_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'composable_pr_join_subtract_impl_1_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_join_subtract_impl_1] composable_pr_join_subtract_impl_1_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name composable_pr_join_subtract_impl_1_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs composable_pr_join_subtract_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_join_subtract_impl_1] composable_pr_join_subtract_impl_1_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'composable_pr_join_subtract_impl_1_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_join_subtract_impl_1] composable_pr_join_subtract_impl_1_place_report_io_0] "" ] } {
  create_report_config -report_name composable_pr_join_subtract_impl_1_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs composable_pr_join_subtract_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_join_subtract_impl_1] composable_pr_join_subtract_impl_1_place_report_io_0]
if { $obj != "" } {

}
# Create 'composable_pr_join_subtract_impl_1_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_join_subtract_impl_1] composable_pr_join_subtract_impl_1_place_report_utilization_0] "" ] } {
  create_report_config -report_name composable_pr_join_subtract_impl_1_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs composable_pr_join_subtract_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_join_subtract_impl_1] composable_pr_join_subtract_impl_1_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'composable_pr_join_subtract_impl_1_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_join_subtract_impl_1] composable_pr_join_subtract_impl_1_place_report_control_sets_0] "" ] } {
  create_report_config -report_name composable_pr_join_subtract_impl_1_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs composable_pr_join_subtract_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_join_subtract_impl_1] composable_pr_join_subtract_impl_1_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'composable_pr_join_subtract_impl_1_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_join_subtract_impl_1] composable_pr_join_subtract_impl_1_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name composable_pr_join_subtract_impl_1_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs composable_pr_join_subtract_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_join_subtract_impl_1] composable_pr_join_subtract_impl_1_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'composable_pr_join_subtract_impl_1_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_join_subtract_impl_1] composable_pr_join_subtract_impl_1_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name composable_pr_join_subtract_impl_1_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs composable_pr_join_subtract_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_join_subtract_impl_1] composable_pr_join_subtract_impl_1_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'composable_pr_join_subtract_impl_1_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_join_subtract_impl_1] composable_pr_join_subtract_impl_1_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name composable_pr_join_subtract_impl_1_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs composable_pr_join_subtract_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_join_subtract_impl_1] composable_pr_join_subtract_impl_1_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'composable_pr_join_subtract_impl_1_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_join_subtract_impl_1] composable_pr_join_subtract_impl_1_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name composable_pr_join_subtract_impl_1_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs composable_pr_join_subtract_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_join_subtract_impl_1] composable_pr_join_subtract_impl_1_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'composable_pr_join_subtract_impl_1_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_join_subtract_impl_1] composable_pr_join_subtract_impl_1_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name composable_pr_join_subtract_impl_1_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs composable_pr_join_subtract_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_join_subtract_impl_1] composable_pr_join_subtract_impl_1_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'composable_pr_join_subtract_impl_1_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_join_subtract_impl_1] composable_pr_join_subtract_impl_1_route_report_drc_0] "" ] } {
  create_report_config -report_name composable_pr_join_subtract_impl_1_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs composable_pr_join_subtract_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_join_subtract_impl_1] composable_pr_join_subtract_impl_1_route_report_drc_0]
if { $obj != "" } {

}
# Create 'composable_pr_join_subtract_impl_1_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_join_subtract_impl_1] composable_pr_join_subtract_impl_1_route_report_methodology_0] "" ] } {
  create_report_config -report_name composable_pr_join_subtract_impl_1_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs composable_pr_join_subtract_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_join_subtract_impl_1] composable_pr_join_subtract_impl_1_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'composable_pr_join_subtract_impl_1_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_join_subtract_impl_1] composable_pr_join_subtract_impl_1_route_report_power_0] "" ] } {
  create_report_config -report_name composable_pr_join_subtract_impl_1_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs composable_pr_join_subtract_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_join_subtract_impl_1] composable_pr_join_subtract_impl_1_route_report_power_0]
if { $obj != "" } {

}
# Create 'composable_pr_join_subtract_impl_1_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_join_subtract_impl_1] composable_pr_join_subtract_impl_1_route_report_route_status_0] "" ] } {
  create_report_config -report_name composable_pr_join_subtract_impl_1_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs composable_pr_join_subtract_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_join_subtract_impl_1] composable_pr_join_subtract_impl_1_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'composable_pr_join_subtract_impl_1_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_join_subtract_impl_1] composable_pr_join_subtract_impl_1_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name composable_pr_join_subtract_impl_1_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs composable_pr_join_subtract_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_join_subtract_impl_1] composable_pr_join_subtract_impl_1_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'composable_pr_join_subtract_impl_1_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_join_subtract_impl_1] composable_pr_join_subtract_impl_1_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name composable_pr_join_subtract_impl_1_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs composable_pr_join_subtract_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_join_subtract_impl_1] composable_pr_join_subtract_impl_1_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'composable_pr_join_subtract_impl_1_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_join_subtract_impl_1] composable_pr_join_subtract_impl_1_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name composable_pr_join_subtract_impl_1_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs composable_pr_join_subtract_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_join_subtract_impl_1] composable_pr_join_subtract_impl_1_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'composable_pr_join_subtract_impl_1_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_join_subtract_impl_1] composable_pr_join_subtract_impl_1_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name composable_pr_join_subtract_impl_1_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs composable_pr_join_subtract_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_join_subtract_impl_1] composable_pr_join_subtract_impl_1_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'composable_pr_join_subtract_impl_1_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_join_subtract_impl_1] composable_pr_join_subtract_impl_1_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name composable_pr_join_subtract_impl_1_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs composable_pr_join_subtract_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_join_subtract_impl_1] composable_pr_join_subtract_impl_1_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'composable_pr_join_subtract_impl_1_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_join_subtract_impl_1] composable_pr_join_subtract_impl_1_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name composable_pr_join_subtract_impl_1_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs composable_pr_join_subtract_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_join_subtract_impl_1] composable_pr_join_subtract_impl_1_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs composable_pr_join_subtract_impl_1]
set_property -name "constrset" -value "composable_pr_join_subtract" -objects $obj
set_property -name "include_in_archive" -value "0" -objects $obj
set_property -name "strategy" -value "Vivado Implementation Defaults" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# Create 'composable_pr_join_absdiff_impl_1' run (if not found)
if {[string equal [get_runs -quiet composable_pr_join_absdiff_impl_1] ""]} {
    create_run -name composable_pr_join_absdiff_impl_1 -part xc7z020clg400-1 -flow {Vivado Implementation 2020} -strategy "Vivado Implementation Defaults" -report_strategy {No Reports} -constrset composable_pr_join_absdiff -parent_run composable_pr_join_absdiff_synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs composable_pr_join_absdiff_impl_1]
  set_property flow "Vivado Implementation 2020" [get_runs composable_pr_join_absdiff_impl_1]
}
set obj [get_runs composable_pr_join_absdiff_impl_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'composable_pr_join_absdiff_impl_1_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_join_absdiff_impl_1] composable_pr_join_absdiff_impl_1_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name composable_pr_join_absdiff_impl_1_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs composable_pr_join_absdiff_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_join_absdiff_impl_1] composable_pr_join_absdiff_impl_1_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'composable_pr_join_absdiff_impl_1_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_join_absdiff_impl_1] composable_pr_join_absdiff_impl_1_opt_report_drc_0] "" ] } {
  create_report_config -report_name composable_pr_join_absdiff_impl_1_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs composable_pr_join_absdiff_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_join_absdiff_impl_1] composable_pr_join_absdiff_impl_1_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'composable_pr_join_absdiff_impl_1_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_join_absdiff_impl_1] composable_pr_join_absdiff_impl_1_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name composable_pr_join_absdiff_impl_1_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs composable_pr_join_absdiff_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_join_absdiff_impl_1] composable_pr_join_absdiff_impl_1_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'composable_pr_join_absdiff_impl_1_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_join_absdiff_impl_1] composable_pr_join_absdiff_impl_1_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name composable_pr_join_absdiff_impl_1_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs composable_pr_join_absdiff_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_join_absdiff_impl_1] composable_pr_join_absdiff_impl_1_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'composable_pr_join_absdiff_impl_1_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_join_absdiff_impl_1] composable_pr_join_absdiff_impl_1_place_report_io_0] "" ] } {
  create_report_config -report_name composable_pr_join_absdiff_impl_1_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs composable_pr_join_absdiff_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_join_absdiff_impl_1] composable_pr_join_absdiff_impl_1_place_report_io_0]
if { $obj != "" } {

}
# Create 'composable_pr_join_absdiff_impl_1_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_join_absdiff_impl_1] composable_pr_join_absdiff_impl_1_place_report_utilization_0] "" ] } {
  create_report_config -report_name composable_pr_join_absdiff_impl_1_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs composable_pr_join_absdiff_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_join_absdiff_impl_1] composable_pr_join_absdiff_impl_1_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'composable_pr_join_absdiff_impl_1_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_join_absdiff_impl_1] composable_pr_join_absdiff_impl_1_place_report_control_sets_0] "" ] } {
  create_report_config -report_name composable_pr_join_absdiff_impl_1_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs composable_pr_join_absdiff_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_join_absdiff_impl_1] composable_pr_join_absdiff_impl_1_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'composable_pr_join_absdiff_impl_1_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_join_absdiff_impl_1] composable_pr_join_absdiff_impl_1_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name composable_pr_join_absdiff_impl_1_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs composable_pr_join_absdiff_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_join_absdiff_impl_1] composable_pr_join_absdiff_impl_1_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'composable_pr_join_absdiff_impl_1_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_join_absdiff_impl_1] composable_pr_join_absdiff_impl_1_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name composable_pr_join_absdiff_impl_1_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs composable_pr_join_absdiff_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_join_absdiff_impl_1] composable_pr_join_absdiff_impl_1_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'composable_pr_join_absdiff_impl_1_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_join_absdiff_impl_1] composable_pr_join_absdiff_impl_1_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name composable_pr_join_absdiff_impl_1_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs composable_pr_join_absdiff_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_join_absdiff_impl_1] composable_pr_join_absdiff_impl_1_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'composable_pr_join_absdiff_impl_1_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_join_absdiff_impl_1] composable_pr_join_absdiff_impl_1_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name composable_pr_join_absdiff_impl_1_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs composable_pr_join_absdiff_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_join_absdiff_impl_1] composable_pr_join_absdiff_impl_1_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'composable_pr_join_absdiff_impl_1_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_join_absdiff_impl_1] composable_pr_join_absdiff_impl_1_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name composable_pr_join_absdiff_impl_1_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs composable_pr_join_absdiff_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_join_absdiff_impl_1] composable_pr_join_absdiff_impl_1_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'composable_pr_join_absdiff_impl_1_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_join_absdiff_impl_1] composable_pr_join_absdiff_impl_1_route_report_drc_0] "" ] } {
  create_report_config -report_name composable_pr_join_absdiff_impl_1_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs composable_pr_join_absdiff_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_join_absdiff_impl_1] composable_pr_join_absdiff_impl_1_route_report_drc_0]
if { $obj != "" } {

}
# Create 'composable_pr_join_absdiff_impl_1_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_join_absdiff_impl_1] composable_pr_join_absdiff_impl_1_route_report_methodology_0] "" ] } {
  create_report_config -report_name composable_pr_join_absdiff_impl_1_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs composable_pr_join_absdiff_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_join_absdiff_impl_1] composable_pr_join_absdiff_impl_1_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'composable_pr_join_absdiff_impl_1_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_join_absdiff_impl_1] composable_pr_join_absdiff_impl_1_route_report_power_0] "" ] } {
  create_report_config -report_name composable_pr_join_absdiff_impl_1_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs composable_pr_join_absdiff_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_join_absdiff_impl_1] composable_pr_join_absdiff_impl_1_route_report_power_0]
if { $obj != "" } {

}
# Create 'composable_pr_join_absdiff_impl_1_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_join_absdiff_impl_1] composable_pr_join_absdiff_impl_1_route_report_route_status_0] "" ] } {
  create_report_config -report_name composable_pr_join_absdiff_impl_1_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs composable_pr_join_absdiff_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_join_absdiff_impl_1] composable_pr_join_absdiff_impl_1_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'composable_pr_join_absdiff_impl_1_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_join_absdiff_impl_1] composable_pr_join_absdiff_impl_1_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name composable_pr_join_absdiff_impl_1_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs composable_pr_join_absdiff_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_join_absdiff_impl_1] composable_pr_join_absdiff_impl_1_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'composable_pr_join_absdiff_impl_1_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_join_absdiff_impl_1] composable_pr_join_absdiff_impl_1_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name composable_pr_join_absdiff_impl_1_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs composable_pr_join_absdiff_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_join_absdiff_impl_1] composable_pr_join_absdiff_impl_1_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'composable_pr_join_absdiff_impl_1_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_join_absdiff_impl_1] composable_pr_join_absdiff_impl_1_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name composable_pr_join_absdiff_impl_1_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs composable_pr_join_absdiff_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_join_absdiff_impl_1] composable_pr_join_absdiff_impl_1_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'composable_pr_join_absdiff_impl_1_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_join_absdiff_impl_1] composable_pr_join_absdiff_impl_1_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name composable_pr_join_absdiff_impl_1_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs composable_pr_join_absdiff_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_join_absdiff_impl_1] composable_pr_join_absdiff_impl_1_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'composable_pr_join_absdiff_impl_1_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_join_absdiff_impl_1] composable_pr_join_absdiff_impl_1_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name composable_pr_join_absdiff_impl_1_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs composable_pr_join_absdiff_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_join_absdiff_impl_1] composable_pr_join_absdiff_impl_1_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'composable_pr_join_absdiff_impl_1_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_join_absdiff_impl_1] composable_pr_join_absdiff_impl_1_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name composable_pr_join_absdiff_impl_1_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs composable_pr_join_absdiff_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_join_absdiff_impl_1] composable_pr_join_absdiff_impl_1_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs composable_pr_join_absdiff_impl_1]
set_property -name "constrset" -value "composable_pr_join_absdiff" -objects $obj
set_property -name "include_in_archive" -value "0" -objects $obj
set_property -name "strategy" -value "Vivado Implementation Defaults" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# Create 'composable_pr_join_add_impl_1' run (if not found)
if {[string equal [get_runs -quiet composable_pr_join_add_impl_1] ""]} {
    create_run -name composable_pr_join_add_impl_1 -part xc7z020clg400-1 -flow {Vivado Implementation 2020} -strategy "Vivado Implementation Defaults" -report_strategy {No Reports} -constrset composable_pr_join_add -parent_run composable_pr_join_add_synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs composable_pr_join_add_impl_1]
  set_property flow "Vivado Implementation 2020" [get_runs composable_pr_join_add_impl_1]
}
set obj [get_runs composable_pr_join_add_impl_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'composable_pr_join_add_impl_1_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_join_add_impl_1] composable_pr_join_add_impl_1_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name composable_pr_join_add_impl_1_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs composable_pr_join_add_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_join_add_impl_1] composable_pr_join_add_impl_1_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'composable_pr_join_add_impl_1_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_join_add_impl_1] composable_pr_join_add_impl_1_opt_report_drc_0] "" ] } {
  create_report_config -report_name composable_pr_join_add_impl_1_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs composable_pr_join_add_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_join_add_impl_1] composable_pr_join_add_impl_1_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'composable_pr_join_add_impl_1_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_join_add_impl_1] composable_pr_join_add_impl_1_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name composable_pr_join_add_impl_1_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs composable_pr_join_add_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_join_add_impl_1] composable_pr_join_add_impl_1_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'composable_pr_join_add_impl_1_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_join_add_impl_1] composable_pr_join_add_impl_1_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name composable_pr_join_add_impl_1_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs composable_pr_join_add_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_join_add_impl_1] composable_pr_join_add_impl_1_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'composable_pr_join_add_impl_1_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_join_add_impl_1] composable_pr_join_add_impl_1_place_report_io_0] "" ] } {
  create_report_config -report_name composable_pr_join_add_impl_1_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs composable_pr_join_add_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_join_add_impl_1] composable_pr_join_add_impl_1_place_report_io_0]
if { $obj != "" } {

}
# Create 'composable_pr_join_add_impl_1_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_join_add_impl_1] composable_pr_join_add_impl_1_place_report_utilization_0] "" ] } {
  create_report_config -report_name composable_pr_join_add_impl_1_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs composable_pr_join_add_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_join_add_impl_1] composable_pr_join_add_impl_1_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'composable_pr_join_add_impl_1_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_join_add_impl_1] composable_pr_join_add_impl_1_place_report_control_sets_0] "" ] } {
  create_report_config -report_name composable_pr_join_add_impl_1_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs composable_pr_join_add_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_join_add_impl_1] composable_pr_join_add_impl_1_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'composable_pr_join_add_impl_1_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_join_add_impl_1] composable_pr_join_add_impl_1_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name composable_pr_join_add_impl_1_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs composable_pr_join_add_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_join_add_impl_1] composable_pr_join_add_impl_1_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'composable_pr_join_add_impl_1_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_join_add_impl_1] composable_pr_join_add_impl_1_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name composable_pr_join_add_impl_1_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs composable_pr_join_add_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_join_add_impl_1] composable_pr_join_add_impl_1_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'composable_pr_join_add_impl_1_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_join_add_impl_1] composable_pr_join_add_impl_1_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name composable_pr_join_add_impl_1_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs composable_pr_join_add_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_join_add_impl_1] composable_pr_join_add_impl_1_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'composable_pr_join_add_impl_1_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_join_add_impl_1] composable_pr_join_add_impl_1_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name composable_pr_join_add_impl_1_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs composable_pr_join_add_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_join_add_impl_1] composable_pr_join_add_impl_1_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'composable_pr_join_add_impl_1_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_join_add_impl_1] composable_pr_join_add_impl_1_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name composable_pr_join_add_impl_1_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs composable_pr_join_add_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_join_add_impl_1] composable_pr_join_add_impl_1_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'composable_pr_join_add_impl_1_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_join_add_impl_1] composable_pr_join_add_impl_1_route_report_drc_0] "" ] } {
  create_report_config -report_name composable_pr_join_add_impl_1_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs composable_pr_join_add_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_join_add_impl_1] composable_pr_join_add_impl_1_route_report_drc_0]
if { $obj != "" } {

}
# Create 'composable_pr_join_add_impl_1_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_join_add_impl_1] composable_pr_join_add_impl_1_route_report_methodology_0] "" ] } {
  create_report_config -report_name composable_pr_join_add_impl_1_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs composable_pr_join_add_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_join_add_impl_1] composable_pr_join_add_impl_1_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'composable_pr_join_add_impl_1_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_join_add_impl_1] composable_pr_join_add_impl_1_route_report_power_0] "" ] } {
  create_report_config -report_name composable_pr_join_add_impl_1_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs composable_pr_join_add_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_join_add_impl_1] composable_pr_join_add_impl_1_route_report_power_0]
if { $obj != "" } {

}
# Create 'composable_pr_join_add_impl_1_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_join_add_impl_1] composable_pr_join_add_impl_1_route_report_route_status_0] "" ] } {
  create_report_config -report_name composable_pr_join_add_impl_1_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs composable_pr_join_add_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_join_add_impl_1] composable_pr_join_add_impl_1_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'composable_pr_join_add_impl_1_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_join_add_impl_1] composable_pr_join_add_impl_1_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name composable_pr_join_add_impl_1_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs composable_pr_join_add_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_join_add_impl_1] composable_pr_join_add_impl_1_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'composable_pr_join_add_impl_1_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_join_add_impl_1] composable_pr_join_add_impl_1_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name composable_pr_join_add_impl_1_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs composable_pr_join_add_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_join_add_impl_1] composable_pr_join_add_impl_1_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'composable_pr_join_add_impl_1_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_join_add_impl_1] composable_pr_join_add_impl_1_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name composable_pr_join_add_impl_1_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs composable_pr_join_add_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_join_add_impl_1] composable_pr_join_add_impl_1_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'composable_pr_join_add_impl_1_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_join_add_impl_1] composable_pr_join_add_impl_1_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name composable_pr_join_add_impl_1_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs composable_pr_join_add_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_join_add_impl_1] composable_pr_join_add_impl_1_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'composable_pr_join_add_impl_1_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_join_add_impl_1] composable_pr_join_add_impl_1_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name composable_pr_join_add_impl_1_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs composable_pr_join_add_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_join_add_impl_1] composable_pr_join_add_impl_1_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'composable_pr_join_add_impl_1_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_join_add_impl_1] composable_pr_join_add_impl_1_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name composable_pr_join_add_impl_1_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs composable_pr_join_add_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_join_add_impl_1] composable_pr_join_add_impl_1_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs composable_pr_join_add_impl_1]
set_property -name "constrset" -value "composable_pr_join_add" -objects $obj
set_property -name "include_in_archive" -value "0" -objects $obj
set_property -name "strategy" -value "Vivado Implementation Defaults" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# Create 'composable_pr_join_bitand_impl_1' run (if not found)
if {[string equal [get_runs -quiet composable_pr_join_bitand_impl_1] ""]} {
    create_run -name composable_pr_join_bitand_impl_1 -part xc7z020clg400-1 -flow {Vivado Implementation 2020} -strategy "Vivado Implementation Defaults" -report_strategy {No Reports} -constrset composable_pr_join_bitand -parent_run composable_pr_join_bitand_synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs composable_pr_join_bitand_impl_1]
  set_property flow "Vivado Implementation 2020" [get_runs composable_pr_join_bitand_impl_1]
}
set obj [get_runs composable_pr_join_bitand_impl_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'composable_pr_join_bitand_impl_1_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_join_bitand_impl_1] composable_pr_join_bitand_impl_1_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name composable_pr_join_bitand_impl_1_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs composable_pr_join_bitand_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_join_bitand_impl_1] composable_pr_join_bitand_impl_1_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'composable_pr_join_bitand_impl_1_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_join_bitand_impl_1] composable_pr_join_bitand_impl_1_opt_report_drc_0] "" ] } {
  create_report_config -report_name composable_pr_join_bitand_impl_1_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs composable_pr_join_bitand_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_join_bitand_impl_1] composable_pr_join_bitand_impl_1_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'composable_pr_join_bitand_impl_1_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_join_bitand_impl_1] composable_pr_join_bitand_impl_1_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name composable_pr_join_bitand_impl_1_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs composable_pr_join_bitand_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_join_bitand_impl_1] composable_pr_join_bitand_impl_1_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'composable_pr_join_bitand_impl_1_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_join_bitand_impl_1] composable_pr_join_bitand_impl_1_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name composable_pr_join_bitand_impl_1_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs composable_pr_join_bitand_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_join_bitand_impl_1] composable_pr_join_bitand_impl_1_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'composable_pr_join_bitand_impl_1_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_join_bitand_impl_1] composable_pr_join_bitand_impl_1_place_report_io_0] "" ] } {
  create_report_config -report_name composable_pr_join_bitand_impl_1_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs composable_pr_join_bitand_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_join_bitand_impl_1] composable_pr_join_bitand_impl_1_place_report_io_0]
if { $obj != "" } {

}
# Create 'composable_pr_join_bitand_impl_1_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_join_bitand_impl_1] composable_pr_join_bitand_impl_1_place_report_utilization_0] "" ] } {
  create_report_config -report_name composable_pr_join_bitand_impl_1_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs composable_pr_join_bitand_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_join_bitand_impl_1] composable_pr_join_bitand_impl_1_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'composable_pr_join_bitand_impl_1_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_join_bitand_impl_1] composable_pr_join_bitand_impl_1_place_report_control_sets_0] "" ] } {
  create_report_config -report_name composable_pr_join_bitand_impl_1_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs composable_pr_join_bitand_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_join_bitand_impl_1] composable_pr_join_bitand_impl_1_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'composable_pr_join_bitand_impl_1_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_join_bitand_impl_1] composable_pr_join_bitand_impl_1_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name composable_pr_join_bitand_impl_1_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs composable_pr_join_bitand_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_join_bitand_impl_1] composable_pr_join_bitand_impl_1_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'composable_pr_join_bitand_impl_1_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_join_bitand_impl_1] composable_pr_join_bitand_impl_1_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name composable_pr_join_bitand_impl_1_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs composable_pr_join_bitand_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_join_bitand_impl_1] composable_pr_join_bitand_impl_1_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'composable_pr_join_bitand_impl_1_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_join_bitand_impl_1] composable_pr_join_bitand_impl_1_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name composable_pr_join_bitand_impl_1_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs composable_pr_join_bitand_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_join_bitand_impl_1] composable_pr_join_bitand_impl_1_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'composable_pr_join_bitand_impl_1_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_join_bitand_impl_1] composable_pr_join_bitand_impl_1_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name composable_pr_join_bitand_impl_1_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs composable_pr_join_bitand_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_join_bitand_impl_1] composable_pr_join_bitand_impl_1_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'composable_pr_join_bitand_impl_1_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_join_bitand_impl_1] composable_pr_join_bitand_impl_1_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name composable_pr_join_bitand_impl_1_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs composable_pr_join_bitand_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_join_bitand_impl_1] composable_pr_join_bitand_impl_1_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'composable_pr_join_bitand_impl_1_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_join_bitand_impl_1] composable_pr_join_bitand_impl_1_route_report_drc_0] "" ] } {
  create_report_config -report_name composable_pr_join_bitand_impl_1_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs composable_pr_join_bitand_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_join_bitand_impl_1] composable_pr_join_bitand_impl_1_route_report_drc_0]
if { $obj != "" } {

}
# Create 'composable_pr_join_bitand_impl_1_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_join_bitand_impl_1] composable_pr_join_bitand_impl_1_route_report_methodology_0] "" ] } {
  create_report_config -report_name composable_pr_join_bitand_impl_1_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs composable_pr_join_bitand_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_join_bitand_impl_1] composable_pr_join_bitand_impl_1_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'composable_pr_join_bitand_impl_1_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_join_bitand_impl_1] composable_pr_join_bitand_impl_1_route_report_power_0] "" ] } {
  create_report_config -report_name composable_pr_join_bitand_impl_1_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs composable_pr_join_bitand_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_join_bitand_impl_1] composable_pr_join_bitand_impl_1_route_report_power_0]
if { $obj != "" } {

}
# Create 'composable_pr_join_bitand_impl_1_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_join_bitand_impl_1] composable_pr_join_bitand_impl_1_route_report_route_status_0] "" ] } {
  create_report_config -report_name composable_pr_join_bitand_impl_1_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs composable_pr_join_bitand_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_join_bitand_impl_1] composable_pr_join_bitand_impl_1_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'composable_pr_join_bitand_impl_1_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_join_bitand_impl_1] composable_pr_join_bitand_impl_1_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name composable_pr_join_bitand_impl_1_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs composable_pr_join_bitand_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_join_bitand_impl_1] composable_pr_join_bitand_impl_1_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'composable_pr_join_bitand_impl_1_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_join_bitand_impl_1] composable_pr_join_bitand_impl_1_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name composable_pr_join_bitand_impl_1_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs composable_pr_join_bitand_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_join_bitand_impl_1] composable_pr_join_bitand_impl_1_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'composable_pr_join_bitand_impl_1_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_join_bitand_impl_1] composable_pr_join_bitand_impl_1_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name composable_pr_join_bitand_impl_1_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs composable_pr_join_bitand_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_join_bitand_impl_1] composable_pr_join_bitand_impl_1_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'composable_pr_join_bitand_impl_1_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_join_bitand_impl_1] composable_pr_join_bitand_impl_1_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name composable_pr_join_bitand_impl_1_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs composable_pr_join_bitand_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_join_bitand_impl_1] composable_pr_join_bitand_impl_1_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'composable_pr_join_bitand_impl_1_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_join_bitand_impl_1] composable_pr_join_bitand_impl_1_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name composable_pr_join_bitand_impl_1_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs composable_pr_join_bitand_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_join_bitand_impl_1] composable_pr_join_bitand_impl_1_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'composable_pr_join_bitand_impl_1_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_join_bitand_impl_1] composable_pr_join_bitand_impl_1_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name composable_pr_join_bitand_impl_1_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs composable_pr_join_bitand_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_join_bitand_impl_1] composable_pr_join_bitand_impl_1_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs composable_pr_join_bitand_impl_1]
set_property -name "constrset" -value "composable_pr_join_bitand" -objects $obj
set_property -name "include_in_archive" -value "0" -objects $obj
set_property -name "strategy" -value "Vivado Implementation Defaults" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# Create 'composable_pr_fork_duplicate_impl_1' run (if not found)
if {[string equal [get_runs -quiet composable_pr_fork_duplicate_impl_1] ""]} {
    create_run -name composable_pr_fork_duplicate_impl_1 -part xc7z020clg400-1 -flow {Vivado Implementation 2020} -strategy "Vivado Implementation Defaults" -report_strategy {No Reports} -constrset composable_pr_fork_duplicate -parent_run composable_pr_fork_duplicate_synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs composable_pr_fork_duplicate_impl_1]
  set_property flow "Vivado Implementation 2020" [get_runs composable_pr_fork_duplicate_impl_1]
}
set obj [get_runs composable_pr_fork_duplicate_impl_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'composable_pr_fork_duplicate_impl_1_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_fork_duplicate_impl_1] composable_pr_fork_duplicate_impl_1_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name composable_pr_fork_duplicate_impl_1_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs composable_pr_fork_duplicate_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_fork_duplicate_impl_1] composable_pr_fork_duplicate_impl_1_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'composable_pr_fork_duplicate_impl_1_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_fork_duplicate_impl_1] composable_pr_fork_duplicate_impl_1_opt_report_drc_0] "" ] } {
  create_report_config -report_name composable_pr_fork_duplicate_impl_1_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs composable_pr_fork_duplicate_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_fork_duplicate_impl_1] composable_pr_fork_duplicate_impl_1_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'composable_pr_fork_duplicate_impl_1_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_fork_duplicate_impl_1] composable_pr_fork_duplicate_impl_1_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name composable_pr_fork_duplicate_impl_1_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs composable_pr_fork_duplicate_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_fork_duplicate_impl_1] composable_pr_fork_duplicate_impl_1_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'composable_pr_fork_duplicate_impl_1_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_fork_duplicate_impl_1] composable_pr_fork_duplicate_impl_1_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name composable_pr_fork_duplicate_impl_1_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs composable_pr_fork_duplicate_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_fork_duplicate_impl_1] composable_pr_fork_duplicate_impl_1_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'composable_pr_fork_duplicate_impl_1_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_fork_duplicate_impl_1] composable_pr_fork_duplicate_impl_1_place_report_io_0] "" ] } {
  create_report_config -report_name composable_pr_fork_duplicate_impl_1_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs composable_pr_fork_duplicate_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_fork_duplicate_impl_1] composable_pr_fork_duplicate_impl_1_place_report_io_0]
if { $obj != "" } {

}
# Create 'composable_pr_fork_duplicate_impl_1_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_fork_duplicate_impl_1] composable_pr_fork_duplicate_impl_1_place_report_utilization_0] "" ] } {
  create_report_config -report_name composable_pr_fork_duplicate_impl_1_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs composable_pr_fork_duplicate_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_fork_duplicate_impl_1] composable_pr_fork_duplicate_impl_1_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'composable_pr_fork_duplicate_impl_1_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_fork_duplicate_impl_1] composable_pr_fork_duplicate_impl_1_place_report_control_sets_0] "" ] } {
  create_report_config -report_name composable_pr_fork_duplicate_impl_1_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs composable_pr_fork_duplicate_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_fork_duplicate_impl_1] composable_pr_fork_duplicate_impl_1_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'composable_pr_fork_duplicate_impl_1_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_fork_duplicate_impl_1] composable_pr_fork_duplicate_impl_1_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name composable_pr_fork_duplicate_impl_1_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs composable_pr_fork_duplicate_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_fork_duplicate_impl_1] composable_pr_fork_duplicate_impl_1_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'composable_pr_fork_duplicate_impl_1_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_fork_duplicate_impl_1] composable_pr_fork_duplicate_impl_1_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name composable_pr_fork_duplicate_impl_1_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs composable_pr_fork_duplicate_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_fork_duplicate_impl_1] composable_pr_fork_duplicate_impl_1_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'composable_pr_fork_duplicate_impl_1_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_fork_duplicate_impl_1] composable_pr_fork_duplicate_impl_1_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name composable_pr_fork_duplicate_impl_1_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs composable_pr_fork_duplicate_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_fork_duplicate_impl_1] composable_pr_fork_duplicate_impl_1_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'composable_pr_fork_duplicate_impl_1_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_fork_duplicate_impl_1] composable_pr_fork_duplicate_impl_1_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name composable_pr_fork_duplicate_impl_1_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs composable_pr_fork_duplicate_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_fork_duplicate_impl_1] composable_pr_fork_duplicate_impl_1_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'composable_pr_fork_duplicate_impl_1_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_fork_duplicate_impl_1] composable_pr_fork_duplicate_impl_1_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name composable_pr_fork_duplicate_impl_1_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs composable_pr_fork_duplicate_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_fork_duplicate_impl_1] composable_pr_fork_duplicate_impl_1_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'composable_pr_fork_duplicate_impl_1_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_fork_duplicate_impl_1] composable_pr_fork_duplicate_impl_1_route_report_drc_0] "" ] } {
  create_report_config -report_name composable_pr_fork_duplicate_impl_1_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs composable_pr_fork_duplicate_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_fork_duplicate_impl_1] composable_pr_fork_duplicate_impl_1_route_report_drc_0]
if { $obj != "" } {

}
# Create 'composable_pr_fork_duplicate_impl_1_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_fork_duplicate_impl_1] composable_pr_fork_duplicate_impl_1_route_report_methodology_0] "" ] } {
  create_report_config -report_name composable_pr_fork_duplicate_impl_1_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs composable_pr_fork_duplicate_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_fork_duplicate_impl_1] composable_pr_fork_duplicate_impl_1_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'composable_pr_fork_duplicate_impl_1_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_fork_duplicate_impl_1] composable_pr_fork_duplicate_impl_1_route_report_power_0] "" ] } {
  create_report_config -report_name composable_pr_fork_duplicate_impl_1_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs composable_pr_fork_duplicate_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_fork_duplicate_impl_1] composable_pr_fork_duplicate_impl_1_route_report_power_0]
if { $obj != "" } {

}
# Create 'composable_pr_fork_duplicate_impl_1_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_fork_duplicate_impl_1] composable_pr_fork_duplicate_impl_1_route_report_route_status_0] "" ] } {
  create_report_config -report_name composable_pr_fork_duplicate_impl_1_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs composable_pr_fork_duplicate_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_fork_duplicate_impl_1] composable_pr_fork_duplicate_impl_1_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'composable_pr_fork_duplicate_impl_1_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_fork_duplicate_impl_1] composable_pr_fork_duplicate_impl_1_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name composable_pr_fork_duplicate_impl_1_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs composable_pr_fork_duplicate_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_fork_duplicate_impl_1] composable_pr_fork_duplicate_impl_1_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'composable_pr_fork_duplicate_impl_1_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_fork_duplicate_impl_1] composable_pr_fork_duplicate_impl_1_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name composable_pr_fork_duplicate_impl_1_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs composable_pr_fork_duplicate_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_fork_duplicate_impl_1] composable_pr_fork_duplicate_impl_1_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'composable_pr_fork_duplicate_impl_1_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_fork_duplicate_impl_1] composable_pr_fork_duplicate_impl_1_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name composable_pr_fork_duplicate_impl_1_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs composable_pr_fork_duplicate_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_fork_duplicate_impl_1] composable_pr_fork_duplicate_impl_1_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'composable_pr_fork_duplicate_impl_1_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_fork_duplicate_impl_1] composable_pr_fork_duplicate_impl_1_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name composable_pr_fork_duplicate_impl_1_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs composable_pr_fork_duplicate_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_fork_duplicate_impl_1] composable_pr_fork_duplicate_impl_1_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'composable_pr_fork_duplicate_impl_1_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_fork_duplicate_impl_1] composable_pr_fork_duplicate_impl_1_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name composable_pr_fork_duplicate_impl_1_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs composable_pr_fork_duplicate_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_fork_duplicate_impl_1] composable_pr_fork_duplicate_impl_1_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'composable_pr_fork_duplicate_impl_1_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_fork_duplicate_impl_1] composable_pr_fork_duplicate_impl_1_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name composable_pr_fork_duplicate_impl_1_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs composable_pr_fork_duplicate_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_fork_duplicate_impl_1] composable_pr_fork_duplicate_impl_1_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs composable_pr_fork_duplicate_impl_1]
set_property -name "constrset" -value "composable_pr_fork_duplicate" -objects $obj
set_property -name "include_in_archive" -value "0" -objects $obj
set_property -name "strategy" -value "Vivado Implementation Defaults" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# Create 'composable_pr_fork_rgb2xyz_impl_1' run (if not found)
if {[string equal [get_runs -quiet composable_pr_fork_rgb2xyz_impl_1] ""]} {
    create_run -name composable_pr_fork_rgb2xyz_impl_1 -part xc7z020clg400-1 -flow {Vivado Implementation 2020} -strategy "Vivado Implementation Defaults" -report_strategy {No Reports} -constrset composable_pr_fork_rgb2xyz -parent_run composable_pr_fork_rgb2xyz_synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs composable_pr_fork_rgb2xyz_impl_1]
  set_property flow "Vivado Implementation 2020" [get_runs composable_pr_fork_rgb2xyz_impl_1]
}
set obj [get_runs composable_pr_fork_rgb2xyz_impl_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'composable_pr_fork_rgb2xyz_impl_1_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_fork_rgb2xyz_impl_1] composable_pr_fork_rgb2xyz_impl_1_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name composable_pr_fork_rgb2xyz_impl_1_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs composable_pr_fork_rgb2xyz_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_fork_rgb2xyz_impl_1] composable_pr_fork_rgb2xyz_impl_1_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'composable_pr_fork_rgb2xyz_impl_1_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_fork_rgb2xyz_impl_1] composable_pr_fork_rgb2xyz_impl_1_opt_report_drc_0] "" ] } {
  create_report_config -report_name composable_pr_fork_rgb2xyz_impl_1_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs composable_pr_fork_rgb2xyz_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_fork_rgb2xyz_impl_1] composable_pr_fork_rgb2xyz_impl_1_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'composable_pr_fork_rgb2xyz_impl_1_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_fork_rgb2xyz_impl_1] composable_pr_fork_rgb2xyz_impl_1_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name composable_pr_fork_rgb2xyz_impl_1_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs composable_pr_fork_rgb2xyz_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_fork_rgb2xyz_impl_1] composable_pr_fork_rgb2xyz_impl_1_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'composable_pr_fork_rgb2xyz_impl_1_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_fork_rgb2xyz_impl_1] composable_pr_fork_rgb2xyz_impl_1_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name composable_pr_fork_rgb2xyz_impl_1_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs composable_pr_fork_rgb2xyz_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_fork_rgb2xyz_impl_1] composable_pr_fork_rgb2xyz_impl_1_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'composable_pr_fork_rgb2xyz_impl_1_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_fork_rgb2xyz_impl_1] composable_pr_fork_rgb2xyz_impl_1_place_report_io_0] "" ] } {
  create_report_config -report_name composable_pr_fork_rgb2xyz_impl_1_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs composable_pr_fork_rgb2xyz_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_fork_rgb2xyz_impl_1] composable_pr_fork_rgb2xyz_impl_1_place_report_io_0]
if { $obj != "" } {

}
# Create 'composable_pr_fork_rgb2xyz_impl_1_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_fork_rgb2xyz_impl_1] composable_pr_fork_rgb2xyz_impl_1_place_report_utilization_0] "" ] } {
  create_report_config -report_name composable_pr_fork_rgb2xyz_impl_1_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs composable_pr_fork_rgb2xyz_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_fork_rgb2xyz_impl_1] composable_pr_fork_rgb2xyz_impl_1_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'composable_pr_fork_rgb2xyz_impl_1_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_fork_rgb2xyz_impl_1] composable_pr_fork_rgb2xyz_impl_1_place_report_control_sets_0] "" ] } {
  create_report_config -report_name composable_pr_fork_rgb2xyz_impl_1_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs composable_pr_fork_rgb2xyz_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_fork_rgb2xyz_impl_1] composable_pr_fork_rgb2xyz_impl_1_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'composable_pr_fork_rgb2xyz_impl_1_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_fork_rgb2xyz_impl_1] composable_pr_fork_rgb2xyz_impl_1_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name composable_pr_fork_rgb2xyz_impl_1_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs composable_pr_fork_rgb2xyz_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_fork_rgb2xyz_impl_1] composable_pr_fork_rgb2xyz_impl_1_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'composable_pr_fork_rgb2xyz_impl_1_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_fork_rgb2xyz_impl_1] composable_pr_fork_rgb2xyz_impl_1_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name composable_pr_fork_rgb2xyz_impl_1_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs composable_pr_fork_rgb2xyz_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_fork_rgb2xyz_impl_1] composable_pr_fork_rgb2xyz_impl_1_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'composable_pr_fork_rgb2xyz_impl_1_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_fork_rgb2xyz_impl_1] composable_pr_fork_rgb2xyz_impl_1_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name composable_pr_fork_rgb2xyz_impl_1_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs composable_pr_fork_rgb2xyz_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_fork_rgb2xyz_impl_1] composable_pr_fork_rgb2xyz_impl_1_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'composable_pr_fork_rgb2xyz_impl_1_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_fork_rgb2xyz_impl_1] composable_pr_fork_rgb2xyz_impl_1_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name composable_pr_fork_rgb2xyz_impl_1_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs composable_pr_fork_rgb2xyz_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_fork_rgb2xyz_impl_1] composable_pr_fork_rgb2xyz_impl_1_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'composable_pr_fork_rgb2xyz_impl_1_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_fork_rgb2xyz_impl_1] composable_pr_fork_rgb2xyz_impl_1_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name composable_pr_fork_rgb2xyz_impl_1_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs composable_pr_fork_rgb2xyz_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_fork_rgb2xyz_impl_1] composable_pr_fork_rgb2xyz_impl_1_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'composable_pr_fork_rgb2xyz_impl_1_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_fork_rgb2xyz_impl_1] composable_pr_fork_rgb2xyz_impl_1_route_report_drc_0] "" ] } {
  create_report_config -report_name composable_pr_fork_rgb2xyz_impl_1_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs composable_pr_fork_rgb2xyz_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_fork_rgb2xyz_impl_1] composable_pr_fork_rgb2xyz_impl_1_route_report_drc_0]
if { $obj != "" } {

}
# Create 'composable_pr_fork_rgb2xyz_impl_1_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_fork_rgb2xyz_impl_1] composable_pr_fork_rgb2xyz_impl_1_route_report_methodology_0] "" ] } {
  create_report_config -report_name composable_pr_fork_rgb2xyz_impl_1_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs composable_pr_fork_rgb2xyz_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_fork_rgb2xyz_impl_1] composable_pr_fork_rgb2xyz_impl_1_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'composable_pr_fork_rgb2xyz_impl_1_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_fork_rgb2xyz_impl_1] composable_pr_fork_rgb2xyz_impl_1_route_report_power_0] "" ] } {
  create_report_config -report_name composable_pr_fork_rgb2xyz_impl_1_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs composable_pr_fork_rgb2xyz_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_fork_rgb2xyz_impl_1] composable_pr_fork_rgb2xyz_impl_1_route_report_power_0]
if { $obj != "" } {

}
# Create 'composable_pr_fork_rgb2xyz_impl_1_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_fork_rgb2xyz_impl_1] composable_pr_fork_rgb2xyz_impl_1_route_report_route_status_0] "" ] } {
  create_report_config -report_name composable_pr_fork_rgb2xyz_impl_1_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs composable_pr_fork_rgb2xyz_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_fork_rgb2xyz_impl_1] composable_pr_fork_rgb2xyz_impl_1_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'composable_pr_fork_rgb2xyz_impl_1_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_fork_rgb2xyz_impl_1] composable_pr_fork_rgb2xyz_impl_1_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name composable_pr_fork_rgb2xyz_impl_1_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs composable_pr_fork_rgb2xyz_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_fork_rgb2xyz_impl_1] composable_pr_fork_rgb2xyz_impl_1_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'composable_pr_fork_rgb2xyz_impl_1_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_fork_rgb2xyz_impl_1] composable_pr_fork_rgb2xyz_impl_1_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name composable_pr_fork_rgb2xyz_impl_1_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs composable_pr_fork_rgb2xyz_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_fork_rgb2xyz_impl_1] composable_pr_fork_rgb2xyz_impl_1_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'composable_pr_fork_rgb2xyz_impl_1_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_fork_rgb2xyz_impl_1] composable_pr_fork_rgb2xyz_impl_1_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name composable_pr_fork_rgb2xyz_impl_1_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs composable_pr_fork_rgb2xyz_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_fork_rgb2xyz_impl_1] composable_pr_fork_rgb2xyz_impl_1_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'composable_pr_fork_rgb2xyz_impl_1_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_fork_rgb2xyz_impl_1] composable_pr_fork_rgb2xyz_impl_1_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name composable_pr_fork_rgb2xyz_impl_1_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs composable_pr_fork_rgb2xyz_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_fork_rgb2xyz_impl_1] composable_pr_fork_rgb2xyz_impl_1_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'composable_pr_fork_rgb2xyz_impl_1_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_fork_rgb2xyz_impl_1] composable_pr_fork_rgb2xyz_impl_1_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name composable_pr_fork_rgb2xyz_impl_1_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs composable_pr_fork_rgb2xyz_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_fork_rgb2xyz_impl_1] composable_pr_fork_rgb2xyz_impl_1_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'composable_pr_fork_rgb2xyz_impl_1_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs composable_pr_fork_rgb2xyz_impl_1] composable_pr_fork_rgb2xyz_impl_1_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name composable_pr_fork_rgb2xyz_impl_1_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs composable_pr_fork_rgb2xyz_impl_1
}
set obj [get_report_configs -of_objects [get_runs composable_pr_fork_rgb2xyz_impl_1] composable_pr_fork_rgb2xyz_impl_1_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs composable_pr_fork_rgb2xyz_impl_1]
set_property -name "constrset" -value "composable_pr_fork_rgb2xyz" -objects $obj
set_property -name "include_in_archive" -value "0" -objects $obj
set_property -name "strategy" -value "Vivado Implementation Defaults" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# Create 'child_0_impl_1' run (if not found)
if {[string equal [get_runs -quiet child_0_impl_1] ""]} {
      create_run -name child_0_impl_1 -part xc7z020clg400-1 -flow {Vivado Implementation 2020} -strategy "Performance_NetDelay_low" -report_strategy {No Reports} -pr_config config_2 -constrset constrs_1 -parent_run impl_1
} else {
  set_property strategy "Performance_NetDelay_low" [get_runs child_0_impl_1]
  set_property flow "Vivado Implementation 2020" [get_runs child_0_impl_1]
}
set obj [get_runs child_0_impl_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'child_0_impl_1_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs child_0_impl_1] child_0_impl_1_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name child_0_impl_1_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs child_0_impl_1
}
set obj [get_report_configs -of_objects [get_runs child_0_impl_1] child_0_impl_1_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'child_0_impl_1_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs child_0_impl_1] child_0_impl_1_opt_report_drc_0] "" ] } {
  create_report_config -report_name child_0_impl_1_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs child_0_impl_1
}
set obj [get_report_configs -of_objects [get_runs child_0_impl_1] child_0_impl_1_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'child_0_impl_1_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs child_0_impl_1] child_0_impl_1_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name child_0_impl_1_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs child_0_impl_1
}
set obj [get_report_configs -of_objects [get_runs child_0_impl_1] child_0_impl_1_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'child_0_impl_1_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs child_0_impl_1] child_0_impl_1_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name child_0_impl_1_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs child_0_impl_1
}
set obj [get_report_configs -of_objects [get_runs child_0_impl_1] child_0_impl_1_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'child_0_impl_1_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs child_0_impl_1] child_0_impl_1_place_report_io_0] "" ] } {
  create_report_config -report_name child_0_impl_1_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs child_0_impl_1
}
set obj [get_report_configs -of_objects [get_runs child_0_impl_1] child_0_impl_1_place_report_io_0]
if { $obj != "" } {

}
# Create 'child_0_impl_1_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs child_0_impl_1] child_0_impl_1_place_report_utilization_0] "" ] } {
  create_report_config -report_name child_0_impl_1_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs child_0_impl_1
}
set obj [get_report_configs -of_objects [get_runs child_0_impl_1] child_0_impl_1_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'child_0_impl_1_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs child_0_impl_1] child_0_impl_1_place_report_control_sets_0] "" ] } {
  create_report_config -report_name child_0_impl_1_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs child_0_impl_1
}
set obj [get_report_configs -of_objects [get_runs child_0_impl_1] child_0_impl_1_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'child_0_impl_1_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs child_0_impl_1] child_0_impl_1_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name child_0_impl_1_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs child_0_impl_1
}
set obj [get_report_configs -of_objects [get_runs child_0_impl_1] child_0_impl_1_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'child_0_impl_1_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs child_0_impl_1] child_0_impl_1_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name child_0_impl_1_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs child_0_impl_1
}
set obj [get_report_configs -of_objects [get_runs child_0_impl_1] child_0_impl_1_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'child_0_impl_1_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs child_0_impl_1] child_0_impl_1_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name child_0_impl_1_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs child_0_impl_1
}
set obj [get_report_configs -of_objects [get_runs child_0_impl_1] child_0_impl_1_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'child_0_impl_1_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs child_0_impl_1] child_0_impl_1_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name child_0_impl_1_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs child_0_impl_1
}
set obj [get_report_configs -of_objects [get_runs child_0_impl_1] child_0_impl_1_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'child_0_impl_1_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs child_0_impl_1] child_0_impl_1_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name child_0_impl_1_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs child_0_impl_1
}
set obj [get_report_configs -of_objects [get_runs child_0_impl_1] child_0_impl_1_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'child_0_impl_1_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs child_0_impl_1] child_0_impl_1_route_report_drc_0] "" ] } {
  create_report_config -report_name child_0_impl_1_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs child_0_impl_1
}
set obj [get_report_configs -of_objects [get_runs child_0_impl_1] child_0_impl_1_route_report_drc_0]
if { $obj != "" } {

}
# Create 'child_0_impl_1_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs child_0_impl_1] child_0_impl_1_route_report_methodology_0] "" ] } {
  create_report_config -report_name child_0_impl_1_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs child_0_impl_1
}
set obj [get_report_configs -of_objects [get_runs child_0_impl_1] child_0_impl_1_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'child_0_impl_1_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs child_0_impl_1] child_0_impl_1_route_report_power_0] "" ] } {
  create_report_config -report_name child_0_impl_1_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs child_0_impl_1
}
set obj [get_report_configs -of_objects [get_runs child_0_impl_1] child_0_impl_1_route_report_power_0]
if { $obj != "" } {

}
# Create 'child_0_impl_1_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs child_0_impl_1] child_0_impl_1_route_report_route_status_0] "" ] } {
  create_report_config -report_name child_0_impl_1_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs child_0_impl_1
}
set obj [get_report_configs -of_objects [get_runs child_0_impl_1] child_0_impl_1_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'child_0_impl_1_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs child_0_impl_1] child_0_impl_1_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name child_0_impl_1_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs child_0_impl_1
}
set obj [get_report_configs -of_objects [get_runs child_0_impl_1] child_0_impl_1_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'child_0_impl_1_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs child_0_impl_1] child_0_impl_1_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name child_0_impl_1_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs child_0_impl_1
}
set obj [get_report_configs -of_objects [get_runs child_0_impl_1] child_0_impl_1_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'child_0_impl_1_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs child_0_impl_1] child_0_impl_1_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name child_0_impl_1_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs child_0_impl_1
}
set obj [get_report_configs -of_objects [get_runs child_0_impl_1] child_0_impl_1_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'child_0_impl_1_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs child_0_impl_1] child_0_impl_1_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name child_0_impl_1_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs child_0_impl_1
}
set obj [get_report_configs -of_objects [get_runs child_0_impl_1] child_0_impl_1_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'child_0_impl_1_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs child_0_impl_1] child_0_impl_1_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name child_0_impl_1_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs child_0_impl_1
}
set obj [get_report_configs -of_objects [get_runs child_0_impl_1] child_0_impl_1_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'child_0_impl_1_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs child_0_impl_1] child_0_impl_1_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name child_0_impl_1_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs child_0_impl_1
}
set obj [get_report_configs -of_objects [get_runs child_0_impl_1] child_0_impl_1_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs child_0_impl_1]
set_property -name "strategy" -value "Performance_NetDelay_low" -objects $obj
set_property -name "steps.opt_design.args.directive" -value "Explore" -objects $obj
set_property -name "steps.place_design.args.directive" -value "ExtraNetDelay_low" -objects $obj
set_property -name "steps.phys_opt_design.args.directive" -value "AggressiveExplore" -objects $obj
set_property -name "steps.route_design.args.directive" -value "NoTimingRelaxation" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# Create 'child_1_impl_1' run (if not found)
if {[string equal [get_runs -quiet child_1_impl_1] ""]} {
      create_run -name child_1_impl_1 -part xc7z020clg400-1 -flow {Vivado Implementation 2020} -strategy "Performance_Explore" -report_strategy {No Reports} -pr_config config_3 -constrset constrs_1 -parent_run impl_1
} else {
  set_property strategy "Performance_Explore" [get_runs child_1_impl_1]
  set_property flow "Vivado Implementation 2020" [get_runs child_1_impl_1]
}
set obj [get_runs child_1_impl_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'child_1_impl_1_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs child_1_impl_1] child_1_impl_1_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name child_1_impl_1_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs child_1_impl_1
}
set obj [get_report_configs -of_objects [get_runs child_1_impl_1] child_1_impl_1_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'child_1_impl_1_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs child_1_impl_1] child_1_impl_1_opt_report_drc_0] "" ] } {
  create_report_config -report_name child_1_impl_1_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs child_1_impl_1
}
set obj [get_report_configs -of_objects [get_runs child_1_impl_1] child_1_impl_1_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'child_1_impl_1_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs child_1_impl_1] child_1_impl_1_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name child_1_impl_1_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs child_1_impl_1
}
set obj [get_report_configs -of_objects [get_runs child_1_impl_1] child_1_impl_1_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'child_1_impl_1_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs child_1_impl_1] child_1_impl_1_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name child_1_impl_1_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs child_1_impl_1
}
set obj [get_report_configs -of_objects [get_runs child_1_impl_1] child_1_impl_1_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'child_1_impl_1_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs child_1_impl_1] child_1_impl_1_place_report_io_0] "" ] } {
  create_report_config -report_name child_1_impl_1_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs child_1_impl_1
}
set obj [get_report_configs -of_objects [get_runs child_1_impl_1] child_1_impl_1_place_report_io_0]
if { $obj != "" } {

}
# Create 'child_1_impl_1_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs child_1_impl_1] child_1_impl_1_place_report_utilization_0] "" ] } {
  create_report_config -report_name child_1_impl_1_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs child_1_impl_1
}
set obj [get_report_configs -of_objects [get_runs child_1_impl_1] child_1_impl_1_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'child_1_impl_1_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs child_1_impl_1] child_1_impl_1_place_report_control_sets_0] "" ] } {
  create_report_config -report_name child_1_impl_1_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs child_1_impl_1
}
set obj [get_report_configs -of_objects [get_runs child_1_impl_1] child_1_impl_1_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'child_1_impl_1_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs child_1_impl_1] child_1_impl_1_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name child_1_impl_1_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs child_1_impl_1
}
set obj [get_report_configs -of_objects [get_runs child_1_impl_1] child_1_impl_1_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'child_1_impl_1_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs child_1_impl_1] child_1_impl_1_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name child_1_impl_1_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs child_1_impl_1
}
set obj [get_report_configs -of_objects [get_runs child_1_impl_1] child_1_impl_1_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'child_1_impl_1_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs child_1_impl_1] child_1_impl_1_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name child_1_impl_1_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs child_1_impl_1
}
set obj [get_report_configs -of_objects [get_runs child_1_impl_1] child_1_impl_1_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'child_1_impl_1_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs child_1_impl_1] child_1_impl_1_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name child_1_impl_1_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs child_1_impl_1
}
set obj [get_report_configs -of_objects [get_runs child_1_impl_1] child_1_impl_1_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'child_1_impl_1_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs child_1_impl_1] child_1_impl_1_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name child_1_impl_1_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs child_1_impl_1
}
set obj [get_report_configs -of_objects [get_runs child_1_impl_1] child_1_impl_1_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'child_1_impl_1_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs child_1_impl_1] child_1_impl_1_route_report_drc_0] "" ] } {
  create_report_config -report_name child_1_impl_1_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs child_1_impl_1
}
set obj [get_report_configs -of_objects [get_runs child_1_impl_1] child_1_impl_1_route_report_drc_0]
if { $obj != "" } {

}
# Create 'child_1_impl_1_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs child_1_impl_1] child_1_impl_1_route_report_methodology_0] "" ] } {
  create_report_config -report_name child_1_impl_1_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs child_1_impl_1
}
set obj [get_report_configs -of_objects [get_runs child_1_impl_1] child_1_impl_1_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'child_1_impl_1_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs child_1_impl_1] child_1_impl_1_route_report_power_0] "" ] } {
  create_report_config -report_name child_1_impl_1_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs child_1_impl_1
}
set obj [get_report_configs -of_objects [get_runs child_1_impl_1] child_1_impl_1_route_report_power_0]
if { $obj != "" } {

}
# Create 'child_1_impl_1_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs child_1_impl_1] child_1_impl_1_route_report_route_status_0] "" ] } {
  create_report_config -report_name child_1_impl_1_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs child_1_impl_1
}
set obj [get_report_configs -of_objects [get_runs child_1_impl_1] child_1_impl_1_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'child_1_impl_1_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs child_1_impl_1] child_1_impl_1_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name child_1_impl_1_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs child_1_impl_1
}
set obj [get_report_configs -of_objects [get_runs child_1_impl_1] child_1_impl_1_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'child_1_impl_1_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs child_1_impl_1] child_1_impl_1_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name child_1_impl_1_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs child_1_impl_1
}
set obj [get_report_configs -of_objects [get_runs child_1_impl_1] child_1_impl_1_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'child_1_impl_1_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs child_1_impl_1] child_1_impl_1_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name child_1_impl_1_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs child_1_impl_1
}
set obj [get_report_configs -of_objects [get_runs child_1_impl_1] child_1_impl_1_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'child_1_impl_1_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs child_1_impl_1] child_1_impl_1_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name child_1_impl_1_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs child_1_impl_1
}
set obj [get_report_configs -of_objects [get_runs child_1_impl_1] child_1_impl_1_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'child_1_impl_1_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs child_1_impl_1] child_1_impl_1_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name child_1_impl_1_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs child_1_impl_1
}
set obj [get_report_configs -of_objects [get_runs child_1_impl_1] child_1_impl_1_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'child_1_impl_1_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs child_1_impl_1] child_1_impl_1_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name child_1_impl_1_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs child_1_impl_1
}
set obj [get_report_configs -of_objects [get_runs child_1_impl_1] child_1_impl_1_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs child_1_impl_1]
set_property -name "strategy" -value "Performance_Explore" -objects $obj
set_property -name "steps.opt_design.args.directive" -value "Explore" -objects $obj
set_property -name "steps.place_design.args.directive" -value "Explore" -objects $obj
set_property -name "steps.phys_opt_design.args.directive" -value "Explore" -objects $obj
set_property -name "steps.route_design.args.directive" -value "Explore" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# Create 'child_2_impl_1' run (if not found)
if {[string equal [get_runs -quiet child_2_impl_1] ""]} {
      create_run -name child_2_impl_1 -part xc7z020clg400-1 -flow {Vivado Implementation 2020} -strategy "Performance_NetDelay_low" -report_strategy {No Reports} -pr_config config_4 -constrset constrs_1 -parent_run impl_1
} else {
  set_property strategy "Performance_NetDelay_low" [get_runs child_2_impl_1]
  set_property flow "Vivado Implementation 2020" [get_runs child_2_impl_1]
}
set obj [get_runs child_2_impl_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'child_2_impl_1_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs child_2_impl_1] child_2_impl_1_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name child_2_impl_1_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs child_2_impl_1
}
set obj [get_report_configs -of_objects [get_runs child_2_impl_1] child_2_impl_1_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'child_2_impl_1_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs child_2_impl_1] child_2_impl_1_opt_report_drc_0] "" ] } {
  create_report_config -report_name child_2_impl_1_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs child_2_impl_1
}
set obj [get_report_configs -of_objects [get_runs child_2_impl_1] child_2_impl_1_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'child_2_impl_1_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs child_2_impl_1] child_2_impl_1_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name child_2_impl_1_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs child_2_impl_1
}
set obj [get_report_configs -of_objects [get_runs child_2_impl_1] child_2_impl_1_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'child_2_impl_1_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs child_2_impl_1] child_2_impl_1_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name child_2_impl_1_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs child_2_impl_1
}
set obj [get_report_configs -of_objects [get_runs child_2_impl_1] child_2_impl_1_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'child_2_impl_1_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs child_2_impl_1] child_2_impl_1_place_report_io_0] "" ] } {
  create_report_config -report_name child_2_impl_1_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs child_2_impl_1
}
set obj [get_report_configs -of_objects [get_runs child_2_impl_1] child_2_impl_1_place_report_io_0]
if { $obj != "" } {

}
# Create 'child_2_impl_1_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs child_2_impl_1] child_2_impl_1_place_report_utilization_0] "" ] } {
  create_report_config -report_name child_2_impl_1_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs child_2_impl_1
}
set obj [get_report_configs -of_objects [get_runs child_2_impl_1] child_2_impl_1_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'child_2_impl_1_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs child_2_impl_1] child_2_impl_1_place_report_control_sets_0] "" ] } {
  create_report_config -report_name child_2_impl_1_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs child_2_impl_1
}
set obj [get_report_configs -of_objects [get_runs child_2_impl_1] child_2_impl_1_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'child_2_impl_1_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs child_2_impl_1] child_2_impl_1_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name child_2_impl_1_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs child_2_impl_1
}
set obj [get_report_configs -of_objects [get_runs child_2_impl_1] child_2_impl_1_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'child_2_impl_1_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs child_2_impl_1] child_2_impl_1_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name child_2_impl_1_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs child_2_impl_1
}
set obj [get_report_configs -of_objects [get_runs child_2_impl_1] child_2_impl_1_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'child_2_impl_1_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs child_2_impl_1] child_2_impl_1_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name child_2_impl_1_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs child_2_impl_1
}
set obj [get_report_configs -of_objects [get_runs child_2_impl_1] child_2_impl_1_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'child_2_impl_1_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs child_2_impl_1] child_2_impl_1_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name child_2_impl_1_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs child_2_impl_1
}
set obj [get_report_configs -of_objects [get_runs child_2_impl_1] child_2_impl_1_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'child_2_impl_1_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs child_2_impl_1] child_2_impl_1_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name child_2_impl_1_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs child_2_impl_1
}
set obj [get_report_configs -of_objects [get_runs child_2_impl_1] child_2_impl_1_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'child_2_impl_1_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs child_2_impl_1] child_2_impl_1_route_report_drc_0] "" ] } {
  create_report_config -report_name child_2_impl_1_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs child_2_impl_1
}
set obj [get_report_configs -of_objects [get_runs child_2_impl_1] child_2_impl_1_route_report_drc_0]
if { $obj != "" } {

}
# Create 'child_2_impl_1_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs child_2_impl_1] child_2_impl_1_route_report_methodology_0] "" ] } {
  create_report_config -report_name child_2_impl_1_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs child_2_impl_1
}
set obj [get_report_configs -of_objects [get_runs child_2_impl_1] child_2_impl_1_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'child_2_impl_1_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs child_2_impl_1] child_2_impl_1_route_report_power_0] "" ] } {
  create_report_config -report_name child_2_impl_1_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs child_2_impl_1
}
set obj [get_report_configs -of_objects [get_runs child_2_impl_1] child_2_impl_1_route_report_power_0]
if { $obj != "" } {

}
# Create 'child_2_impl_1_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs child_2_impl_1] child_2_impl_1_route_report_route_status_0] "" ] } {
  create_report_config -report_name child_2_impl_1_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs child_2_impl_1
}
set obj [get_report_configs -of_objects [get_runs child_2_impl_1] child_2_impl_1_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'child_2_impl_1_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs child_2_impl_1] child_2_impl_1_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name child_2_impl_1_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs child_2_impl_1
}
set obj [get_report_configs -of_objects [get_runs child_2_impl_1] child_2_impl_1_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'child_2_impl_1_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs child_2_impl_1] child_2_impl_1_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name child_2_impl_1_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs child_2_impl_1
}
set obj [get_report_configs -of_objects [get_runs child_2_impl_1] child_2_impl_1_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'child_2_impl_1_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs child_2_impl_1] child_2_impl_1_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name child_2_impl_1_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs child_2_impl_1
}
set obj [get_report_configs -of_objects [get_runs child_2_impl_1] child_2_impl_1_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'child_2_impl_1_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs child_2_impl_1] child_2_impl_1_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name child_2_impl_1_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs child_2_impl_1
}
set obj [get_report_configs -of_objects [get_runs child_2_impl_1] child_2_impl_1_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'child_2_impl_1_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs child_2_impl_1] child_2_impl_1_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name child_2_impl_1_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs child_2_impl_1
}
set obj [get_report_configs -of_objects [get_runs child_2_impl_1] child_2_impl_1_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'child_2_impl_1_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs child_2_impl_1] child_2_impl_1_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name child_2_impl_1_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs child_2_impl_1
}
set obj [get_report_configs -of_objects [get_runs child_2_impl_1] child_2_impl_1_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs child_2_impl_1]
set_property -name "strategy" -value "Performance_NetDelay_low" -objects $obj
set_property -name "steps.opt_design.args.directive" -value "Explore" -objects $obj
set_property -name "steps.place_design.args.directive" -value "ExtraNetDelay_low" -objects $obj
set_property -name "steps.phys_opt_design.args.directive" -value "AggressiveExplore" -objects $obj
set_property -name "steps.route_design.args.directive" -value "NoTimingRelaxation" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# set the current impl run
current_run -implementation [get_runs impl_1]

puts "INFO: Project created:${_xil_proj_name_}"
# Create 'drc_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "drc_1" ] ] ""]} {
create_dashboard_gadget -name {drc_1} -type drc
}
set obj [get_dashboard_gadgets [ list "drc_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_drc_0" -objects $obj

# Create 'methodology_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "methodology_1" ] ] ""]} {
create_dashboard_gadget -name {methodology_1} -type methodology
}
set obj [get_dashboard_gadgets [ list "methodology_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_methodology_0" -objects $obj

# Create 'power_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "power_1" ] ] ""]} {
create_dashboard_gadget -name {power_1} -type power
}
set obj [get_dashboard_gadgets [ list "power_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_power_0" -objects $obj

# Create 'timing_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "timing_1" ] ] ""]} {
create_dashboard_gadget -name {timing_1} -type timing
}
set obj [get_dashboard_gadgets [ list "timing_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_timing_summary_0" -objects $obj

# Create 'utilization_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "utilization_1" ] ] ""]} {
create_dashboard_gadget -name {utilization_1} -type utilization
}
set obj [get_dashboard_gadgets [ list "utilization_1" ] ]
set_property -name "reports" -value "synth_1#synth_1_synth_report_utilization_0" -objects $obj
set_property -name "run.step" -value "synth_design" -objects $obj
set_property -name "run.type" -value "synthesis" -objects $obj

# Create 'utilization_2' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "utilization_2" ] ] ""]} {
create_dashboard_gadget -name {utilization_2} -type utilization
}
set obj [get_dashboard_gadgets [ list "utilization_2" ] ]
set_property -name "reports" -value "impl_1#impl_1_place_report_utilization_0" -objects $obj

move_dashboard_gadget -name {utilization_1} -row 0 -col 0
move_dashboard_gadget -name {power_1} -row 1 -col 0
move_dashboard_gadget -name {drc_1} -row 2 -col 0
move_dashboard_gadget -name {timing_1} -row 0 -col 1
move_dashboard_gadget -name {utilization_2} -row 1 -col 1
move_dashboard_gadget -name {methodology_1} -row 2 -col 1
